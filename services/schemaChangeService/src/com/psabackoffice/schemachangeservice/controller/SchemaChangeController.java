/**This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/
package com.psabackoffice.schemachangeservice.controller;

import com.psabackoffice.schemachangeservice.SchemaChangeService;
import java.lang.String;
import javax.servlet.http.HttpServletRequest;
import org.springframework.web.bind.annotation.*;
import org.springframework.http.MediaType;
import org.springframework.beans.factory.annotation.Autowired;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;
import com.wordnik.swagger.annotations.ApiParam;
import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;

@RestController
@RequestMapping(value = "/schemaChange")
public class SchemaChangeController {

    @Autowired
    private SchemaChangeService schemaChangeservice;

    @RequestMapping(value = "/changeSchema", produces = "application/json", method = RequestMethod.POST)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public String changeSchema(@RequestParam(value = "newSchema", required = false) String newSchema, HttpServletRequest request) {
        return schemaChangeservice.changeSchema(newSchema, request);
    }

    @RequestMapping(value = "/schemaForUser", produces = "application/json", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public String getSchemaForUser(@RequestParam(value = "userName", required = false) String userName) {
        return schemaChangeservice.getSchemaForUser(userName);
    }
}
