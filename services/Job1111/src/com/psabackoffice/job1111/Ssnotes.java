/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Ssnotes generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`SSNotes`")
public class Ssnotes implements Serializable {

    private Integer id;
    private Integer fkPsaactivityId;
    private Integer fkUid;
    private String notes;
    private Timestamp timeStamp;
    private SubmissionStatus submissionStatus;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`fk_PSAActivityID`", nullable = true, scale = 0, precision = 10)
    public Integer getFkPsaactivityId() {
        return this.fkPsaactivityId;
    }

    public void setFkPsaactivityId(Integer fkPsaactivityId) {
        this.fkPsaactivityId = fkPsaactivityId;
    }

    @Column(name = "`fk_uid`", nullable = true, scale = 0, precision = 10)
    public Integer getFkUid() {
        return this.fkUid;
    }

    public void setFkUid(Integer fkUid) {
        this.fkUid = fkUid;
    }

    @Column(name = "`Notes`", nullable = true, length = 255)
    public String getNotes() {
        return this.notes;
    }

    public void setNotes(String notes) {
        this.notes = notes;
    }

    @Column(name = "`TimeStamp`", nullable = true)
    public Timestamp getTimeStamp() {
        return this.timeStamp;
    }

    public void setTimeStamp(Timestamp timeStamp) {
        this.timeStamp = timeStamp;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_PSAActivityID`", referencedColumnName = "`PSAActivityID`", insertable = false, updatable = false)
    public SubmissionStatus getSubmissionStatus() {
        return this.submissionStatus;
    }

    public void setSubmissionStatus(SubmissionStatus submissionStatus) {
        if(submissionStatus != null) {
            this.fkPsaactivityId = submissionStatus.getPsaactivityId();
        }

        this.submissionStatus = submissionStatus;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Ssnotes)) return false;
        final Ssnotes ssnotes = (Ssnotes) o;
        return Objects.equals(getId(), ssnotes.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

