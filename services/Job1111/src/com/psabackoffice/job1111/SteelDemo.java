/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * SteelDemo generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`SteelDemo`")
public class SteelDemo implements Serializable {

    private Integer id;
    private int fkSubmissionId;
    private String demoArea;
    private Integer demoSteelType;
    private String demoSize;
    private Integer demoQuantity;
    private String demoNotes;
    private Short activityType;
    private Short demoTimeInForm;
    private short rev;
    private Timestamp timeStamp;
    private SubsDetails subsDetails;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`fk_SubmissionId`", nullable = false, scale = 0, precision = 10)
    public int getFkSubmissionId() {
        return this.fkSubmissionId;
    }

    public void setFkSubmissionId(int fkSubmissionId) {
        this.fkSubmissionId = fkSubmissionId;
    }

    @Column(name = "`DemoArea`", nullable = true, length = 45)
    public String getDemoArea() {
        return this.demoArea;
    }

    public void setDemoArea(String demoArea) {
        this.demoArea = demoArea;
    }

    @Column(name = "`DemoSteelType`", nullable = true, scale = 0, precision = 10)
    public Integer getDemoSteelType() {
        return this.demoSteelType;
    }

    public void setDemoSteelType(Integer demoSteelType) {
        this.demoSteelType = demoSteelType;
    }

    @Column(name = "`DemoSize`", nullable = true, length = 45)
    public String getDemoSize() {
        return this.demoSize;
    }

    public void setDemoSize(String demoSize) {
        this.demoSize = demoSize;
    }

    @Column(name = "`DemoQuantity`", nullable = true, scale = 0, precision = 7)
    public Integer getDemoQuantity() {
        return this.demoQuantity;
    }

    public void setDemoQuantity(Integer demoQuantity) {
        this.demoQuantity = demoQuantity;
    }

    @Column(name = "`DemoNotes`", nullable = true, length = 255)
    public String getDemoNotes() {
        return this.demoNotes;
    }

    public void setDemoNotes(String demoNotes) {
        this.demoNotes = demoNotes;
    }

    @Column(name = "`ActivityType`", nullable = true, scale = 0, precision = 3)
    public Short getActivityType() {
        return this.activityType;
    }

    public void setActivityType(Short activityType) {
        this.activityType = activityType;
    }

    @Column(name = "`DemoTimeInForm`", nullable = true, scale = 0, precision = 5)
    public Short getDemoTimeInForm() {
        return this.demoTimeInForm;
    }

    public void setDemoTimeInForm(Short demoTimeInForm) {
        this.demoTimeInForm = demoTimeInForm;
    }

    @Column(name = "`Rev`", nullable = false, scale = 0, precision = 3)
    public short getRev() {
        return this.rev;
    }

    public void setRev(short rev) {
        this.rev = rev;
    }

    @Column(name = "`TimeStamp`", nullable = true)
    public Timestamp getTimeStamp() {
        return this.timeStamp;
    }

    public void setTimeStamp(Timestamp timeStamp) {
        this.timeStamp = timeStamp;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_SubmissionId`", referencedColumnName = "`SubmissionID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`fk_SteelDemoSubmissionId`"))
    public SubsDetails getSubsDetails() {
        return this.subsDetails;
    }

    public void setSubsDetails(SubsDetails subsDetails) {
        if(subsDetails != null) {
            this.fkSubmissionId = subsDetails.getSubmissionId();
        }

        this.subsDetails = subsDetails;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SteelDemo)) return false;
        final SteelDemo steelDemo = (SteelDemo) o;
        return Objects.equals(getId(), steelDemo.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

