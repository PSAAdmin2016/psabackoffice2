/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * PipeSupports generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`PipeSupports`")
public class PipeSupports implements Serializable {

    private Integer activityId;
    private Integer supportBidId;
    private Float supportQuantity;
    private Integer supportPercentCompleted;
    private Short supportRework;
    private String supportNotes;
    private Short activityType;
    private Short supportTimeInForm;
    private short rev;
    private Timestamp timeStamp;
    private SubmissionActivityStatus submissionActivityStatus;

    @Id
    @Column(name = "`ActivityID`", nullable = false, scale = 0, precision = 10)
    public Integer getActivityId() {
        return this.activityId;
    }

    public void setActivityId(Integer activityId) {
        this.activityId = activityId;
    }

    @Column(name = "`SupportBidID`", nullable = true, scale = 0, precision = 10)
    public Integer getSupportBidId() {
        return this.supportBidId;
    }

    public void setSupportBidId(Integer supportBidId) {
        this.supportBidId = supportBidId;
    }

    @Column(name = "`SupportQuantity`", nullable = true, scale = 2, precision = 5)
    public Float getSupportQuantity() {
        return this.supportQuantity;
    }

    public void setSupportQuantity(Float supportQuantity) {
        this.supportQuantity = supportQuantity;
    }

    @Column(name = "`SupportPercentCompleted`", nullable = true, scale = 2, precision = 3)
    public Integer getSupportPercentCompleted() {
        return this.supportPercentCompleted;
    }

    public void setSupportPercentCompleted(Integer supportPercentCompleted) {
        this.supportPercentCompleted = supportPercentCompleted;
    }

    @Column(name = "`SupportRework`", nullable = true, scale = 0, precision = 3)
    public Short getSupportRework() {
        return this.supportRework;
    }

    public void setSupportRework(Short supportRework) {
        this.supportRework = supportRework;
    }

    @Column(name = "`SupportNotes`", nullable = true, length = 255)
    public String getSupportNotes() {
        return this.supportNotes;
    }

    public void setSupportNotes(String supportNotes) {
        this.supportNotes = supportNotes;
    }

    @Column(name = "`ActivityType`", nullable = true, scale = 0, precision = 3)
    public Short getActivityType() {
        return this.activityType;
    }

    public void setActivityType(Short activityType) {
        this.activityType = activityType;
    }

    @Column(name = "`SupportTimeInForm`", nullable = true, scale = 0, precision = 5)
    public Short getSupportTimeInForm() {
        return this.supportTimeInForm;
    }

    public void setSupportTimeInForm(Short supportTimeInForm) {
        this.supportTimeInForm = supportTimeInForm;
    }

    @Column(name = "`Rev`", nullable = false, scale = 0, precision = 3)
    public short getRev() {
        return this.rev;
    }

    public void setRev(short rev) {
        this.rev = rev;
    }

    @Column(name = "`TimeStamp`", nullable = false)
    public Timestamp getTimeStamp() {
        return this.timeStamp;
    }

    public void setTimeStamp(Timestamp timeStamp) {
        this.timeStamp = timeStamp;
    }

    @OneToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`ActivityID`", referencedColumnName = "`ActivityID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`PipeSupports_ActivityID_to_SASActivityID`"))
    @Fetch(FetchMode.JOIN)
    public SubmissionActivityStatus getSubmissionActivityStatus() {
        return this.submissionActivityStatus;
    }

    public void setSubmissionActivityStatus(SubmissionActivityStatus submissionActivityStatus) {
        if(submissionActivityStatus != null) {
            this.activityId = submissionActivityStatus.getActivityId();
        }

        this.submissionActivityStatus = submissionActivityStatus;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof PipeSupports)) return false;
        final PipeSupports pipeSupports = (PipeSupports) o;
        return Objects.equals(getActivityId(), pipeSupports.getActivityId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getActivityId());
    }
}

