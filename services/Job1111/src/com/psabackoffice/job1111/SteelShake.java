/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * SteelShake generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`SteelShake`")
public class SteelShake implements Serializable {

    private Integer id;
    private Integer fkSubmissionId;
    private String faarea;
    private String fapieceNumber;
    private short fashakeQuantity;
    private Short farework;
    private String fanotes;
    private Short activityType;
    private Short fatimeInForm;
    private short rev;
    private Timestamp timeStamp;
    private SubsDetails subsDetails;
    private List<SteelShakeRev> steelShakeRevs;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`fk_SubmissionID`", nullable = true, scale = 0, precision = 10)
    public Integer getFkSubmissionId() {
        return this.fkSubmissionId;
    }

    public void setFkSubmissionId(Integer fkSubmissionId) {
        this.fkSubmissionId = fkSubmissionId;
    }

    @Column(name = "`FAArea`", nullable = true, length = 45)
    public String getFaarea() {
        return this.faarea;
    }

    public void setFaarea(String faarea) {
        this.faarea = faarea;
    }

    @Column(name = "`FAPieceNumber`", nullable = true, length = 45)
    public String getFapieceNumber() {
        return this.fapieceNumber;
    }

    public void setFapieceNumber(String fapieceNumber) {
        this.fapieceNumber = fapieceNumber;
    }

    @Column(name = "`FAShakeQuantity`", nullable = false, scale = 0, precision = 3)
    public short getFashakeQuantity() {
        return this.fashakeQuantity;
    }

    public void setFashakeQuantity(short fashakeQuantity) {
        this.fashakeQuantity = fashakeQuantity;
    }

    @Column(name = "`FARework`", nullable = true, scale = 0, precision = 3)
    public Short getFarework() {
        return this.farework;
    }

    public void setFarework(Short farework) {
        this.farework = farework;
    }

    @Column(name = "`FANotes`", nullable = true, length = 255)
    public String getFanotes() {
        return this.fanotes;
    }

    public void setFanotes(String fanotes) {
        this.fanotes = fanotes;
    }

    @Column(name = "`ActivityType`", nullable = true, scale = 0, precision = 3)
    public Short getActivityType() {
        return this.activityType;
    }

    public void setActivityType(Short activityType) {
        this.activityType = activityType;
    }

    @Column(name = "`FATimeInForm`", nullable = true, scale = 0, precision = 3)
    public Short getFatimeInForm() {
        return this.fatimeInForm;
    }

    public void setFatimeInForm(Short fatimeInForm) {
        this.fatimeInForm = fatimeInForm;
    }

    @Column(name = "`Rev`", nullable = false, scale = 0, precision = 3)
    public short getRev() {
        return this.rev;
    }

    public void setRev(short rev) {
        this.rev = rev;
    }

    @Column(name = "`TimeStamp`", nullable = true)
    public Timestamp getTimeStamp() {
        return this.timeStamp;
    }

    public void setTimeStamp(Timestamp timeStamp) {
        this.timeStamp = timeStamp;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_SubmissionID`", referencedColumnName = "`SubmissionID`", insertable = false, updatable = false)
    public SubsDetails getSubsDetails() {
        return this.subsDetails;
    }

    public void setSubsDetails(SubsDetails subsDetails) {
        if(subsDetails != null) {
            this.fkSubmissionId = subsDetails.getSubmissionId();
        }

        this.subsDetails = subsDetails;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "steelShake")
    public List<SteelShakeRev> getSteelShakeRevs() {
        return this.steelShakeRevs;
    }

    public void setSteelShakeRevs(List<SteelShakeRev> steelShakeRevs) {
        this.steelShakeRevs = steelShakeRevs;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof SteelShake)) return false;
        final SteelShake steelShake = (SteelShake) o;
        return Objects.equals(getId(), steelShake.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

