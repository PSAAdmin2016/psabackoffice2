/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111.models.procedure;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Date;
import java.util.List;
import java.util.Objects;

import org.joda.time.LocalDateTime;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class GetJobPcotResponseContent implements Serializable {

    @JsonProperty("EarnedDate")
    @ColumnAlias("EarnedDate")
    private Date earnedDate;
    @JsonProperty("PipePercentComplete")
    @ColumnAlias("PipePercentComplete")
    private BigDecimal pipePercentComplete;
    @JsonProperty("SteelPercentComplete")
    @ColumnAlias("SteelPercentComplete")
    private BigDecimal steelPercentComplete;
    @JsonProperty("CivilPercentComplete")
    @ColumnAlias("CivilPercentComplete")
    private BigDecimal civilPercentComplete;
    @JsonProperty("EquipPercentComplete")
    @ColumnAlias("EquipPercentComplete")
    private BigDecimal equipPercentComplete;
    @JsonProperty("JobPercentComplete")
    @ColumnAlias("JobPercentComplete")
    private BigDecimal jobPercentComplete;

    public Date getEarnedDate() {
        return this.earnedDate;
    }

    public void setEarnedDate(Date earnedDate) {
        this.earnedDate = earnedDate;
    }

    public BigDecimal getPipePercentComplete() {
        return this.pipePercentComplete;
    }

    public void setPipePercentComplete(BigDecimal pipePercentComplete) {
        this.pipePercentComplete = pipePercentComplete;
    }

    public BigDecimal getSteelPercentComplete() {
        return this.steelPercentComplete;
    }

    public void setSteelPercentComplete(BigDecimal steelPercentComplete) {
        this.steelPercentComplete = steelPercentComplete;
    }

    public BigDecimal getCivilPercentComplete() {
        return this.civilPercentComplete;
    }

    public void setCivilPercentComplete(BigDecimal civilPercentComplete) {
        this.civilPercentComplete = civilPercentComplete;
    }

    public BigDecimal getEquipPercentComplete() {
        return this.equipPercentComplete;
    }

    public void setEquipPercentComplete(BigDecimal equipPercentComplete) {
        this.equipPercentComplete = equipPercentComplete;
    }

    public BigDecimal getJobPercentComplete() {
        return this.jobPercentComplete;
    }

    public void setJobPercentComplete(BigDecimal jobPercentComplete) {
        this.jobPercentComplete = jobPercentComplete;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof GetJobPcotResponseContent)) return false;
        final GetJobPcotResponseContent getJobPcotResponseContent = (GetJobPcotResponseContent) o;
        return Objects.equals(getEarnedDate(), getJobPcotResponseContent.getEarnedDate()) &&
                Objects.equals(getPipePercentComplete(), getJobPcotResponseContent.getPipePercentComplete()) &&
                Objects.equals(getSteelPercentComplete(), getJobPcotResponseContent.getSteelPercentComplete()) &&
                Objects.equals(getCivilPercentComplete(), getJobPcotResponseContent.getCivilPercentComplete()) &&
                Objects.equals(getEquipPercentComplete(), getJobPcotResponseContent.getEquipPercentComplete()) &&
                Objects.equals(getJobPercentComplete(), getJobPcotResponseContent.getJobPercentComplete());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getEarnedDate(),
                getPipePercentComplete(),
                getSteelPercentComplete(),
                getCivilPercentComplete(),
                getEquipPercentComplete(),
                getJobPercentComplete());
    }
}
