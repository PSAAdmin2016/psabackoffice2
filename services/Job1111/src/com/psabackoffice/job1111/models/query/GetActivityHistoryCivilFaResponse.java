/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Objects;

import org.joda.time.LocalDateTime;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class GetActivityHistoryCivilFaResponse implements Serializable {

    @JsonProperty("ActivityType")
    @ColumnAlias("ActivityType")
    private Byte activityType;
    @JsonProperty("FABidID")
    @ColumnAlias("FABidID")
    private Integer fabidId;
    @JsonProperty("FADescription")
    @ColumnAlias("FADescription")
    private String fadescription;
    @JsonProperty("FADetailDrawingNumber")
    @ColumnAlias("FADetailDrawingNumber")
    private String fadetailDrawingNumber;
    @JsonProperty("FADrawingNumber")
    @ColumnAlias("FADrawingNumber")
    private String fadrawingNumber;
    @JsonProperty("FAFoundation")
    @ColumnAlias("FAFoundation")
    private String fafoundation;
    @JsonProperty("FANotes")
    @ColumnAlias("FANotes")
    private String fanotes;
    @JsonProperty("FAPercentComplete")
    @ColumnAlias("FAPercentComplete")
    private BigDecimal fapercentComplete;
    @JsonProperty("FAQuantity")
    @ColumnAlias("FAQuantity")
    private Integer faquantity;
    @JsonProperty("FARework")
    @ColumnAlias("FARework")
    private Byte farework;
    @JsonProperty("FATimeInForm")
    @ColumnAlias("FATimeInForm")
    private Byte fatimeInForm;
    @JsonProperty("ID")
    @ColumnAlias("ID")
    private Integer id;
    @JsonProperty("Rev")
    @ColumnAlias("Rev")
    private Byte rev;
    @JsonProperty("TimeStamp")
    @ColumnAlias("TimeStamp")
    private Timestamp timeStamp;
    @JsonProperty("fk_SubmissionID")
    @ColumnAlias("fk_SubmissionID")
    private Integer fkSubmissionId;

    public Byte getActivityType() {
        return this.activityType;
    }

    public void setActivityType(Byte activityType) {
        this.activityType = activityType;
    }

    public Integer getFabidId() {
        return this.fabidId;
    }

    public void setFabidId(Integer fabidId) {
        this.fabidId = fabidId;
    }

    public String getFadescription() {
        return this.fadescription;
    }

    public void setFadescription(String fadescription) {
        this.fadescription = fadescription;
    }

    public String getFadetailDrawingNumber() {
        return this.fadetailDrawingNumber;
    }

    public void setFadetailDrawingNumber(String fadetailDrawingNumber) {
        this.fadetailDrawingNumber = fadetailDrawingNumber;
    }

    public String getFadrawingNumber() {
        return this.fadrawingNumber;
    }

    public void setFadrawingNumber(String fadrawingNumber) {
        this.fadrawingNumber = fadrawingNumber;
    }

    public String getFafoundation() {
        return this.fafoundation;
    }

    public void setFafoundation(String fafoundation) {
        this.fafoundation = fafoundation;
    }

    public String getFanotes() {
        return this.fanotes;
    }

    public void setFanotes(String fanotes) {
        this.fanotes = fanotes;
    }

    public BigDecimal getFapercentComplete() {
        return this.fapercentComplete;
    }

    public void setFapercentComplete(BigDecimal fapercentComplete) {
        this.fapercentComplete = fapercentComplete;
    }

    public Integer getFaquantity() {
        return this.faquantity;
    }

    public void setFaquantity(Integer faquantity) {
        this.faquantity = faquantity;
    }

    public Byte getFarework() {
        return this.farework;
    }

    public void setFarework(Byte farework) {
        this.farework = farework;
    }

    public Byte getFatimeInForm() {
        return this.fatimeInForm;
    }

    public void setFatimeInForm(Byte fatimeInForm) {
        this.fatimeInForm = fatimeInForm;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Byte getRev() {
        return this.rev;
    }

    public void setRev(Byte rev) {
        this.rev = rev;
    }

    public Timestamp getTimeStamp() {
        return this.timeStamp;
    }

    public void setTimeStamp(Timestamp timeStamp) {
        this.timeStamp = timeStamp;
    }

    public Integer getFkSubmissionId() {
        return this.fkSubmissionId;
    }

    public void setFkSubmissionId(Integer fkSubmissionId) {
        this.fkSubmissionId = fkSubmissionId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof GetActivityHistoryCivilFaResponse)) return false;
        final GetActivityHistoryCivilFaResponse getActivityHistoryCivilFaResponse = (GetActivityHistoryCivilFaResponse) o;
        return Objects.equals(getActivityType(), getActivityHistoryCivilFaResponse.getActivityType()) &&
                Objects.equals(getFabidId(), getActivityHistoryCivilFaResponse.getFabidId()) &&
                Objects.equals(getFadescription(), getActivityHistoryCivilFaResponse.getFadescription()) &&
                Objects.equals(getFadetailDrawingNumber(), getActivityHistoryCivilFaResponse.getFadetailDrawingNumber()) &&
                Objects.equals(getFadrawingNumber(), getActivityHistoryCivilFaResponse.getFadrawingNumber()) &&
                Objects.equals(getFafoundation(), getActivityHistoryCivilFaResponse.getFafoundation()) &&
                Objects.equals(getFanotes(), getActivityHistoryCivilFaResponse.getFanotes()) &&
                Objects.equals(getFapercentComplete(), getActivityHistoryCivilFaResponse.getFapercentComplete()) &&
                Objects.equals(getFaquantity(), getActivityHistoryCivilFaResponse.getFaquantity()) &&
                Objects.equals(getFarework(), getActivityHistoryCivilFaResponse.getFarework()) &&
                Objects.equals(getFatimeInForm(), getActivityHistoryCivilFaResponse.getFatimeInForm()) &&
                Objects.equals(getId(), getActivityHistoryCivilFaResponse.getId()) &&
                Objects.equals(getRev(), getActivityHistoryCivilFaResponse.getRev()) &&
                Objects.equals(getTimeStamp(), getActivityHistoryCivilFaResponse.getTimeStamp()) &&
                Objects.equals(getFkSubmissionId(), getActivityHistoryCivilFaResponse.getFkSubmissionId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getActivityType(),
                getFabidId(),
                getFadescription(),
                getFadetailDrawingNumber(),
                getFadrawingNumber(),
                getFafoundation(),
                getFanotes(),
                getFapercentComplete(),
                getFaquantity(),
                getFarework(),
                getFatimeInForm(),
                getId(),
                getRev(),
                getTimeStamp(),
                getFkSubmissionId());
    }
}
