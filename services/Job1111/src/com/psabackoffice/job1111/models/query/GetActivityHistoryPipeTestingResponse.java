/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class GetActivityHistoryPipeTestingResponse implements Serializable {


    @JsonProperty("ActivityID")
    @ColumnAlias("ActivityID")
    private Integer activityId;

    @JsonProperty("TestingTestPackageNumber")
    @ColumnAlias("TestingTestPackageNumber")
    private String testingTestPackageNumber;

    @JsonProperty("TestingRework")
    @ColumnAlias("TestingRework")
    private Short testingRework;

    @JsonProperty("TestingNotes")
    @ColumnAlias("TestingNotes")
    private String testingNotes;

    @JsonProperty("TestingTimeInForm")
    @ColumnAlias("TestingTimeInForm")
    private Integer testingTimeInForm;

    @JsonProperty("ActivityType")
    @ColumnAlias("ActivityType")
    private Short activityType;

    @JsonProperty("Rev")
    @ColumnAlias("Rev")
    private Short rev;

    @JsonProperty("TimeStamp")
    @ColumnAlias("TimeStamp")
    private Timestamp timeStamp;

    public Integer getActivityId() {
        return this.activityId;
    }

    public void setActivityId(Integer activityId) {
        this.activityId = activityId;
    }

    public String getTestingTestPackageNumber() {
        return this.testingTestPackageNumber;
    }

    public void setTestingTestPackageNumber(String testingTestPackageNumber) {
        this.testingTestPackageNumber = testingTestPackageNumber;
    }

    public Short getTestingRework() {
        return this.testingRework;
    }

    public void setTestingRework(Short testingRework) {
        this.testingRework = testingRework;
    }

    public String getTestingNotes() {
        return this.testingNotes;
    }

    public void setTestingNotes(String testingNotes) {
        this.testingNotes = testingNotes;
    }

    public Integer getTestingTimeInForm() {
        return this.testingTimeInForm;
    }

    public void setTestingTimeInForm(Integer testingTimeInForm) {
        this.testingTimeInForm = testingTimeInForm;
    }

    public Short getActivityType() {
        return this.activityType;
    }

    public void setActivityType(Short activityType) {
        this.activityType = activityType;
    }

    public Short getRev() {
        return this.rev;
    }

    public void setRev(Short rev) {
        this.rev = rev;
    }

    public Timestamp getTimeStamp() {
        return this.timeStamp;
    }

    public void setTimeStamp(Timestamp timeStamp) {
        this.timeStamp = timeStamp;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof GetActivityHistoryPipeTestingResponse)) return false;
        final GetActivityHistoryPipeTestingResponse getActivityHistoryPipeTestingResponse = (GetActivityHistoryPipeTestingResponse) o;
        return Objects.equals(getActivityId(), getActivityHistoryPipeTestingResponse.getActivityId()) &&
                Objects.equals(getTestingTestPackageNumber(), getActivityHistoryPipeTestingResponse.getTestingTestPackageNumber()) &&
                Objects.equals(getTestingRework(), getActivityHistoryPipeTestingResponse.getTestingRework()) &&
                Objects.equals(getTestingNotes(), getActivityHistoryPipeTestingResponse.getTestingNotes()) &&
                Objects.equals(getTestingTimeInForm(), getActivityHistoryPipeTestingResponse.getTestingTimeInForm()) &&
                Objects.equals(getActivityType(), getActivityHistoryPipeTestingResponse.getActivityType()) &&
                Objects.equals(getRev(), getActivityHistoryPipeTestingResponse.getRev()) &&
                Objects.equals(getTimeStamp(), getActivityHistoryPipeTestingResponse.getTimeStamp());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getActivityId(),
                getTestingTestPackageNumber(),
                getTestingRework(),
                getTestingNotes(),
                getTestingTimeInForm(),
                getActivityType(),
                getRev(),
                getTimeStamp());
    }
}
