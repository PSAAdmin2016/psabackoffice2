/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Timestamp;
import java.util.Objects;

import org.joda.time.LocalDateTime;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class GetAlltotalsByTestPackageResponse implements Serializable {

    @JsonProperty("PercentComplete")
    @ColumnAlias("PercentComplete")
    private BigDecimal percentComplete;
    @JsonProperty("HoursALLMech")
    @ColumnAlias("HoursALLMech")
    private BigDecimal hoursAllmech;
    @JsonProperty("RemainingBoltUps")
    @ColumnAlias("RemainingBoltUps")
    private Integer remainingBoltUps;
    @JsonProperty("HoursMisc")
    @ColumnAlias("HoursMisc")
    private BigDecimal hoursMisc;
    @JsonProperty("Area")
    @ColumnAlias("Area")
    private String area;
    @JsonProperty("RemainingBasicConnections")
    @ColumnAlias("RemainingBasicConnections")
    private BigDecimal remainingBasicConnections;
    @JsonProperty("EarnedTestingHours")
    @ColumnAlias("EarnedTestingHours")
    private BigDecimal earnedTestingHours;
    @JsonProperty("EarnedBasicConnectHours")
    @ColumnAlias("EarnedBasicConnectHours")
    private BigDecimal earnedBasicConnectHours;
    @JsonProperty("EarnedSupportHours")
    @ColumnAlias("EarnedSupportHours")
    private BigDecimal earnedSupportHours;
    @JsonProperty("RemainingWeldHours")
    @ColumnAlias("RemainingWeldHours")
    private BigDecimal remainingWeldHours;
    @JsonProperty("InstalledMisc")
    @ColumnAlias("InstalledMisc")
    private Integer installedMisc;
    @JsonProperty("HoursTrim")
    @ColumnAlias("HoursTrim")
    private BigDecimal hoursTrim;
    @JsonProperty("EarnedTrimHours")
    @ColumnAlias("EarnedTrimHours")
    private BigDecimal earnedTrimHours;
    @JsonProperty("InstalledSupports")
    @ColumnAlias("InstalledSupports")
    private BigDecimal installedSupports;
    @JsonProperty("RemainingFootage")
    @ColumnAlias("RemainingFootage")
    private BigDecimal remainingFootage;
    @JsonProperty("CountSupports")
    @ColumnAlias("CountSupports")
    private Integer countSupports;
    @JsonProperty("CountErectionFootage")
    @ColumnAlias("CountErectionFootage")
    private BigDecimal countErectionFootage;
    @JsonProperty("RemainingSupportHours")
    @ColumnAlias("RemainingSupportHours")
    private BigDecimal remainingSupportHours;
    @JsonProperty("EarnedMiscHours")
    @ColumnAlias("EarnedMiscHours")
    private BigDecimal earnedMiscHours;
    @JsonProperty("RemainingBasicTrimActivities")
    @ColumnAlias("RemainingBasicTrimActivities")
    private BigDecimal remainingBasicTrimActivities;
    @JsonProperty("RemainingBasicTrimHours")
    @ColumnAlias("RemainingBasicTrimHours")
    private BigDecimal remainingBasicTrimHours;
    @JsonProperty("CountMiscActivities")
    @ColumnAlias("CountMiscActivities")
    private Integer countMiscActivities;
    @JsonProperty("RemainingBoltUpHours")
    @ColumnAlias("RemainingBoltUpHours")
    private BigDecimal remainingBoltUpHours;
    @JsonProperty("RemainingTrimActivities")
    @ColumnAlias("RemainingTrimActivities")
    private Integer remainingTrimActivities;
    @JsonProperty("HoursTesting")
    @ColumnAlias("HoursTesting")
    private BigDecimal hoursTesting;
    @JsonProperty("InstalledBasicTrim")
    @ColumnAlias("InstalledBasicTrim")
    private BigDecimal installedBasicTrim;
    @JsonProperty("Phase")
    @ColumnAlias("Phase")
    private String phase;
    @JsonProperty("EarnedBasicTrimHours")
    @ColumnAlias("EarnedBasicTrimHours")
    private BigDecimal earnedBasicTrimHours;
    @JsonProperty("InstalledTrim")
    @ColumnAlias("InstalledTrim")
    private Integer installedTrim;
    @JsonProperty("HoursErection")
    @ColumnAlias("HoursErection")
    private BigDecimal hoursErection;
    @JsonProperty("CountBasicConnection")
    @ColumnAlias("CountBasicConnection")
    private Integer countBasicConnection;
    @JsonProperty("EarnedWeldHours")
    @ColumnAlias("EarnedWeldHours")
    private BigDecimal earnedWeldHours;
    @JsonProperty("TestPackageNumber")
    @ColumnAlias("TestPackageNumber")
    private String testPackageNumber;
    @JsonProperty("RemainingWelds")
    @ColumnAlias("RemainingWelds")
    private BigDecimal remainingWelds;
    @JsonProperty("HoursBoltUp")
    @ColumnAlias("HoursBoltUp")
    private BigDecimal hoursBoltUp;
    @JsonProperty("RemainingTrimHours")
    @ColumnAlias("RemainingTrimHours")
    private BigDecimal remainingTrimHours;
    @JsonProperty("RemainingMiscActivities")
    @ColumnAlias("RemainingMiscActivities")
    private Integer remainingMiscActivities;
    @JsonProperty("RemainingMiscHours")
    @ColumnAlias("RemainingMiscHours")
    private BigDecimal remainingMiscHours;
    @JsonProperty("HoursWeld")
    @ColumnAlias("HoursWeld")
    private BigDecimal hoursWeld;
    @JsonProperty("EarnedBoltUpHours")
    @ColumnAlias("EarnedBoltUpHours")
    private BigDecimal earnedBoltUpHours;
    @JsonProperty("CU")
    @ColumnAlias("CU")
    private String cu;
    @JsonProperty("CountTrimActivities")
    @ColumnAlias("CountTrimActivities")
    private Integer countTrimActivities;
    @JsonProperty("RemainingSupports")
    @ColumnAlias("RemainingSupports")
    private BigDecimal remainingSupports;
    @JsonProperty("CountBoltUp")
    @ColumnAlias("CountBoltUp")
    private Integer countBoltUp;
    @JsonProperty("EarnedErectionHours")
    @ColumnAlias("EarnedErectionHours")
    private BigDecimal earnedErectionHours;
    @JsonProperty("CountBasicTrimActivities")
    @ColumnAlias("CountBasicTrimActivities")
    private Integer countBasicTrimActivities;
    @JsonProperty("EarnedALLMech")
    @ColumnAlias("EarnedALLMech")
    private BigDecimal earnedAllmech;
    @JsonProperty("InstalledWelds")
    @ColumnAlias("InstalledWelds")
    private BigDecimal installedWelds;
    @JsonProperty("HoursBasicTrimActivities")
    @ColumnAlias("HoursBasicTrimActivities")
    private BigDecimal hoursBasicTrimActivities;
    @JsonProperty("InstalledBoltUps")
    @ColumnAlias("InstalledBoltUps")
    private Integer installedBoltUps;
    @JsonProperty("RemainingErectionHours")
    @ColumnAlias("RemainingErectionHours")
    private BigDecimal remainingErectionHours;
    @JsonProperty("RemainingBasicConnectionHours")
    @ColumnAlias("RemainingBasicConnectionHours")
    private BigDecimal remainingBasicConnectionHours;
    @JsonProperty("InstalledBasicConnections")
    @ColumnAlias("InstalledBasicConnections")
    private BigDecimal installedBasicConnections;
    @JsonProperty("HoursSupports")
    @ColumnAlias("HoursSupports")
    private BigDecimal hoursSupports;
    @JsonProperty("HoursBasicConnection")
    @ColumnAlias("HoursBasicConnection")
    private BigDecimal hoursBasicConnection;
    @JsonProperty("CountWeld")
    @ColumnAlias("CountWeld")
    private Integer countWeld;
    @JsonProperty("InstalledFootage")
    @ColumnAlias("InstalledFootage")
    private BigDecimal installedFootage;

    public BigDecimal getPercentComplete() {
        return this.percentComplete;
    }

    public void setPercentComplete(BigDecimal percentComplete) {
        this.percentComplete = percentComplete;
    }

    public BigDecimal getHoursAllmech() {
        return this.hoursAllmech;
    }

    public void setHoursAllmech(BigDecimal hoursAllmech) {
        this.hoursAllmech = hoursAllmech;
    }

    public Integer getRemainingBoltUps() {
        return this.remainingBoltUps;
    }

    public void setRemainingBoltUps(Integer remainingBoltUps) {
        this.remainingBoltUps = remainingBoltUps;
    }

    public BigDecimal getHoursMisc() {
        return this.hoursMisc;
    }

    public void setHoursMisc(BigDecimal hoursMisc) {
        this.hoursMisc = hoursMisc;
    }

    public String getArea() {
        return this.area;
    }

    public void setArea(String area) {
        this.area = area;
    }

    public BigDecimal getRemainingBasicConnections() {
        return this.remainingBasicConnections;
    }

    public void setRemainingBasicConnections(BigDecimal remainingBasicConnections) {
        this.remainingBasicConnections = remainingBasicConnections;
    }

    public BigDecimal getEarnedTestingHours() {
        return this.earnedTestingHours;
    }

    public void setEarnedTestingHours(BigDecimal earnedTestingHours) {
        this.earnedTestingHours = earnedTestingHours;
    }

    public BigDecimal getEarnedBasicConnectHours() {
        return this.earnedBasicConnectHours;
    }

    public void setEarnedBasicConnectHours(BigDecimal earnedBasicConnectHours) {
        this.earnedBasicConnectHours = earnedBasicConnectHours;
    }

    public BigDecimal getEarnedSupportHours() {
        return this.earnedSupportHours;
    }

    public void setEarnedSupportHours(BigDecimal earnedSupportHours) {
        this.earnedSupportHours = earnedSupportHours;
    }

    public BigDecimal getRemainingWeldHours() {
        return this.remainingWeldHours;
    }

    public void setRemainingWeldHours(BigDecimal remainingWeldHours) {
        this.remainingWeldHours = remainingWeldHours;
    }

    public Integer getInstalledMisc() {
        return this.installedMisc;
    }

    public void setInstalledMisc(Integer installedMisc) {
        this.installedMisc = installedMisc;
    }

    public BigDecimal getHoursTrim() {
        return this.hoursTrim;
    }

    public void setHoursTrim(BigDecimal hoursTrim) {
        this.hoursTrim = hoursTrim;
    }

    public BigDecimal getEarnedTrimHours() {
        return this.earnedTrimHours;
    }

    public void setEarnedTrimHours(BigDecimal earnedTrimHours) {
        this.earnedTrimHours = earnedTrimHours;
    }

    public BigDecimal getInstalledSupports() {
        return this.installedSupports;
    }

    public void setInstalledSupports(BigDecimal installedSupports) {
        this.installedSupports = installedSupports;
    }

    public BigDecimal getRemainingFootage() {
        return this.remainingFootage;
    }

    public void setRemainingFootage(BigDecimal remainingFootage) {
        this.remainingFootage = remainingFootage;
    }

    public Integer getCountSupports() {
        return this.countSupports;
    }

    public void setCountSupports(Integer countSupports) {
        this.countSupports = countSupports;
    }

    public BigDecimal getCountErectionFootage() {
        return this.countErectionFootage;
    }

    public void setCountErectionFootage(BigDecimal countErectionFootage) {
        this.countErectionFootage = countErectionFootage;
    }

    public BigDecimal getRemainingSupportHours() {
        return this.remainingSupportHours;
    }

    public void setRemainingSupportHours(BigDecimal remainingSupportHours) {
        this.remainingSupportHours = remainingSupportHours;
    }

    public BigDecimal getEarnedMiscHours() {
        return this.earnedMiscHours;
    }

    public void setEarnedMiscHours(BigDecimal earnedMiscHours) {
        this.earnedMiscHours = earnedMiscHours;
    }

    public BigDecimal getRemainingBasicTrimActivities() {
        return this.remainingBasicTrimActivities;
    }

    public void setRemainingBasicTrimActivities(BigDecimal remainingBasicTrimActivities) {
        this.remainingBasicTrimActivities = remainingBasicTrimActivities;
    }

    public BigDecimal getRemainingBasicTrimHours() {
        return this.remainingBasicTrimHours;
    }

    public void setRemainingBasicTrimHours(BigDecimal remainingBasicTrimHours) {
        this.remainingBasicTrimHours = remainingBasicTrimHours;
    }

    public Integer getCountMiscActivities() {
        return this.countMiscActivities;
    }

    public void setCountMiscActivities(Integer countMiscActivities) {
        this.countMiscActivities = countMiscActivities;
    }

    public BigDecimal getRemainingBoltUpHours() {
        return this.remainingBoltUpHours;
    }

    public void setRemainingBoltUpHours(BigDecimal remainingBoltUpHours) {
        this.remainingBoltUpHours = remainingBoltUpHours;
    }

    public Integer getRemainingTrimActivities() {
        return this.remainingTrimActivities;
    }

    public void setRemainingTrimActivities(Integer remainingTrimActivities) {
        this.remainingTrimActivities = remainingTrimActivities;
    }

    public BigDecimal getHoursTesting() {
        return this.hoursTesting;
    }

    public void setHoursTesting(BigDecimal hoursTesting) {
        this.hoursTesting = hoursTesting;
    }

    public BigDecimal getInstalledBasicTrim() {
        return this.installedBasicTrim;
    }

    public void setInstalledBasicTrim(BigDecimal installedBasicTrim) {
        this.installedBasicTrim = installedBasicTrim;
    }

    public String getPhase() {
        return this.phase;
    }

    public void setPhase(String phase) {
        this.phase = phase;
    }

    public BigDecimal getEarnedBasicTrimHours() {
        return this.earnedBasicTrimHours;
    }

    public void setEarnedBasicTrimHours(BigDecimal earnedBasicTrimHours) {
        this.earnedBasicTrimHours = earnedBasicTrimHours;
    }

    public Integer getInstalledTrim() {
        return this.installedTrim;
    }

    public void setInstalledTrim(Integer installedTrim) {
        this.installedTrim = installedTrim;
    }

    public BigDecimal getHoursErection() {
        return this.hoursErection;
    }

    public void setHoursErection(BigDecimal hoursErection) {
        this.hoursErection = hoursErection;
    }

    public Integer getCountBasicConnection() {
        return this.countBasicConnection;
    }

    public void setCountBasicConnection(Integer countBasicConnection) {
        this.countBasicConnection = countBasicConnection;
    }

    public BigDecimal getEarnedWeldHours() {
        return this.earnedWeldHours;
    }

    public void setEarnedWeldHours(BigDecimal earnedWeldHours) {
        this.earnedWeldHours = earnedWeldHours;
    }

    public String getTestPackageNumber() {
        return this.testPackageNumber;
    }

    public void setTestPackageNumber(String testPackageNumber) {
        this.testPackageNumber = testPackageNumber;
    }

    public BigDecimal getRemainingWelds() {
        return this.remainingWelds;
    }

    public void setRemainingWelds(BigDecimal remainingWelds) {
        this.remainingWelds = remainingWelds;
    }

    public BigDecimal getHoursBoltUp() {
        return this.hoursBoltUp;
    }

    public void setHoursBoltUp(BigDecimal hoursBoltUp) {
        this.hoursBoltUp = hoursBoltUp;
    }

    public BigDecimal getRemainingTrimHours() {
        return this.remainingTrimHours;
    }

    public void setRemainingTrimHours(BigDecimal remainingTrimHours) {
        this.remainingTrimHours = remainingTrimHours;
    }

    public Integer getRemainingMiscActivities() {
        return this.remainingMiscActivities;
    }

    public void setRemainingMiscActivities(Integer remainingMiscActivities) {
        this.remainingMiscActivities = remainingMiscActivities;
    }

    public BigDecimal getRemainingMiscHours() {
        return this.remainingMiscHours;
    }

    public void setRemainingMiscHours(BigDecimal remainingMiscHours) {
        this.remainingMiscHours = remainingMiscHours;
    }

    public BigDecimal getHoursWeld() {
        return this.hoursWeld;
    }

    public void setHoursWeld(BigDecimal hoursWeld) {
        this.hoursWeld = hoursWeld;
    }

    public BigDecimal getEarnedBoltUpHours() {
        return this.earnedBoltUpHours;
    }

    public void setEarnedBoltUpHours(BigDecimal earnedBoltUpHours) {
        this.earnedBoltUpHours = earnedBoltUpHours;
    }

    public String getCu() {
        return this.cu;
    }

    public void setCu(String cu) {
        this.cu = cu;
    }

    public Integer getCountTrimActivities() {
        return this.countTrimActivities;
    }

    public void setCountTrimActivities(Integer countTrimActivities) {
        this.countTrimActivities = countTrimActivities;
    }

    public BigDecimal getRemainingSupports() {
        return this.remainingSupports;
    }

    public void setRemainingSupports(BigDecimal remainingSupports) {
        this.remainingSupports = remainingSupports;
    }

    public Integer getCountBoltUp() {
        return this.countBoltUp;
    }

    public void setCountBoltUp(Integer countBoltUp) {
        this.countBoltUp = countBoltUp;
    }

    public BigDecimal getEarnedErectionHours() {
        return this.earnedErectionHours;
    }

    public void setEarnedErectionHours(BigDecimal earnedErectionHours) {
        this.earnedErectionHours = earnedErectionHours;
    }

    public Integer getCountBasicTrimActivities() {
        return this.countBasicTrimActivities;
    }

    public void setCountBasicTrimActivities(Integer countBasicTrimActivities) {
        this.countBasicTrimActivities = countBasicTrimActivities;
    }

    public BigDecimal getEarnedAllmech() {
        return this.earnedAllmech;
    }

    public void setEarnedAllmech(BigDecimal earnedAllmech) {
        this.earnedAllmech = earnedAllmech;
    }

    public BigDecimal getInstalledWelds() {
        return this.installedWelds;
    }

    public void setInstalledWelds(BigDecimal installedWelds) {
        this.installedWelds = installedWelds;
    }

    public BigDecimal getHoursBasicTrimActivities() {
        return this.hoursBasicTrimActivities;
    }

    public void setHoursBasicTrimActivities(BigDecimal hoursBasicTrimActivities) {
        this.hoursBasicTrimActivities = hoursBasicTrimActivities;
    }

    public Integer getInstalledBoltUps() {
        return this.installedBoltUps;
    }

    public void setInstalledBoltUps(Integer installedBoltUps) {
        this.installedBoltUps = installedBoltUps;
    }

    public BigDecimal getRemainingErectionHours() {
        return this.remainingErectionHours;
    }

    public void setRemainingErectionHours(BigDecimal remainingErectionHours) {
        this.remainingErectionHours = remainingErectionHours;
    }

    public BigDecimal getRemainingBasicConnectionHours() {
        return this.remainingBasicConnectionHours;
    }

    public void setRemainingBasicConnectionHours(BigDecimal remainingBasicConnectionHours) {
        this.remainingBasicConnectionHours = remainingBasicConnectionHours;
    }

    public BigDecimal getInstalledBasicConnections() {
        return this.installedBasicConnections;
    }

    public void setInstalledBasicConnections(BigDecimal installedBasicConnections) {
        this.installedBasicConnections = installedBasicConnections;
    }

    public BigDecimal getHoursSupports() {
        return this.hoursSupports;
    }

    public void setHoursSupports(BigDecimal hoursSupports) {
        this.hoursSupports = hoursSupports;
    }

    public BigDecimal getHoursBasicConnection() {
        return this.hoursBasicConnection;
    }

    public void setHoursBasicConnection(BigDecimal hoursBasicConnection) {
        this.hoursBasicConnection = hoursBasicConnection;
    }

    public Integer getCountWeld() {
        return this.countWeld;
    }

    public void setCountWeld(Integer countWeld) {
        this.countWeld = countWeld;
    }

    public BigDecimal getInstalledFootage() {
        return this.installedFootage;
    }

    public void setInstalledFootage(BigDecimal installedFootage) {
        this.installedFootage = installedFootage;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof GetAlltotalsByTestPackageResponse)) return false;
        final GetAlltotalsByTestPackageResponse getAlltotalsByTestPackageResponse = (GetAlltotalsByTestPackageResponse) o;
        return Objects.equals(getPercentComplete(), getAlltotalsByTestPackageResponse.getPercentComplete()) &&
                Objects.equals(getHoursAllmech(), getAlltotalsByTestPackageResponse.getHoursAllmech()) &&
                Objects.equals(getRemainingBoltUps(), getAlltotalsByTestPackageResponse.getRemainingBoltUps()) &&
                Objects.equals(getHoursMisc(), getAlltotalsByTestPackageResponse.getHoursMisc()) &&
                Objects.equals(getArea(), getAlltotalsByTestPackageResponse.getArea()) &&
                Objects.equals(getRemainingBasicConnections(), getAlltotalsByTestPackageResponse.getRemainingBasicConnections()) &&
                Objects.equals(getEarnedTestingHours(), getAlltotalsByTestPackageResponse.getEarnedTestingHours()) &&
                Objects.equals(getEarnedBasicConnectHours(), getAlltotalsByTestPackageResponse.getEarnedBasicConnectHours()) &&
                Objects.equals(getEarnedSupportHours(), getAlltotalsByTestPackageResponse.getEarnedSupportHours()) &&
                Objects.equals(getRemainingWeldHours(), getAlltotalsByTestPackageResponse.getRemainingWeldHours()) &&
                Objects.equals(getInstalledMisc(), getAlltotalsByTestPackageResponse.getInstalledMisc()) &&
                Objects.equals(getHoursTrim(), getAlltotalsByTestPackageResponse.getHoursTrim()) &&
                Objects.equals(getEarnedTrimHours(), getAlltotalsByTestPackageResponse.getEarnedTrimHours()) &&
                Objects.equals(getInstalledSupports(), getAlltotalsByTestPackageResponse.getInstalledSupports()) &&
                Objects.equals(getRemainingFootage(), getAlltotalsByTestPackageResponse.getRemainingFootage()) &&
                Objects.equals(getCountSupports(), getAlltotalsByTestPackageResponse.getCountSupports()) &&
                Objects.equals(getCountErectionFootage(), getAlltotalsByTestPackageResponse.getCountErectionFootage()) &&
                Objects.equals(getRemainingSupportHours(), getAlltotalsByTestPackageResponse.getRemainingSupportHours()) &&
                Objects.equals(getEarnedMiscHours(), getAlltotalsByTestPackageResponse.getEarnedMiscHours()) &&
                Objects.equals(getRemainingBasicTrimActivities(), getAlltotalsByTestPackageResponse.getRemainingBasicTrimActivities()) &&
                Objects.equals(getRemainingBasicTrimHours(), getAlltotalsByTestPackageResponse.getRemainingBasicTrimHours()) &&
                Objects.equals(getCountMiscActivities(), getAlltotalsByTestPackageResponse.getCountMiscActivities()) &&
                Objects.equals(getRemainingBoltUpHours(), getAlltotalsByTestPackageResponse.getRemainingBoltUpHours()) &&
                Objects.equals(getRemainingTrimActivities(), getAlltotalsByTestPackageResponse.getRemainingTrimActivities()) &&
                Objects.equals(getHoursTesting(), getAlltotalsByTestPackageResponse.getHoursTesting()) &&
                Objects.equals(getInstalledBasicTrim(), getAlltotalsByTestPackageResponse.getInstalledBasicTrim()) &&
                Objects.equals(getPhase(), getAlltotalsByTestPackageResponse.getPhase()) &&
                Objects.equals(getEarnedBasicTrimHours(), getAlltotalsByTestPackageResponse.getEarnedBasicTrimHours()) &&
                Objects.equals(getInstalledTrim(), getAlltotalsByTestPackageResponse.getInstalledTrim()) &&
                Objects.equals(getHoursErection(), getAlltotalsByTestPackageResponse.getHoursErection()) &&
                Objects.equals(getCountBasicConnection(), getAlltotalsByTestPackageResponse.getCountBasicConnection()) &&
                Objects.equals(getEarnedWeldHours(), getAlltotalsByTestPackageResponse.getEarnedWeldHours()) &&
                Objects.equals(getTestPackageNumber(), getAlltotalsByTestPackageResponse.getTestPackageNumber()) &&
                Objects.equals(getRemainingWelds(), getAlltotalsByTestPackageResponse.getRemainingWelds()) &&
                Objects.equals(getHoursBoltUp(), getAlltotalsByTestPackageResponse.getHoursBoltUp()) &&
                Objects.equals(getRemainingTrimHours(), getAlltotalsByTestPackageResponse.getRemainingTrimHours()) &&
                Objects.equals(getRemainingMiscActivities(), getAlltotalsByTestPackageResponse.getRemainingMiscActivities()) &&
                Objects.equals(getRemainingMiscHours(), getAlltotalsByTestPackageResponse.getRemainingMiscHours()) &&
                Objects.equals(getHoursWeld(), getAlltotalsByTestPackageResponse.getHoursWeld()) &&
                Objects.equals(getEarnedBoltUpHours(), getAlltotalsByTestPackageResponse.getEarnedBoltUpHours()) &&
                Objects.equals(getCu(), getAlltotalsByTestPackageResponse.getCu()) &&
                Objects.equals(getCountTrimActivities(), getAlltotalsByTestPackageResponse.getCountTrimActivities()) &&
                Objects.equals(getRemainingSupports(), getAlltotalsByTestPackageResponse.getRemainingSupports()) &&
                Objects.equals(getCountBoltUp(), getAlltotalsByTestPackageResponse.getCountBoltUp()) &&
                Objects.equals(getEarnedErectionHours(), getAlltotalsByTestPackageResponse.getEarnedErectionHours()) &&
                Objects.equals(getCountBasicTrimActivities(), getAlltotalsByTestPackageResponse.getCountBasicTrimActivities()) &&
                Objects.equals(getEarnedAllmech(), getAlltotalsByTestPackageResponse.getEarnedAllmech()) &&
                Objects.equals(getInstalledWelds(), getAlltotalsByTestPackageResponse.getInstalledWelds()) &&
                Objects.equals(getHoursBasicTrimActivities(), getAlltotalsByTestPackageResponse.getHoursBasicTrimActivities()) &&
                Objects.equals(getInstalledBoltUps(), getAlltotalsByTestPackageResponse.getInstalledBoltUps()) &&
                Objects.equals(getRemainingErectionHours(), getAlltotalsByTestPackageResponse.getRemainingErectionHours()) &&
                Objects.equals(getRemainingBasicConnectionHours(), getAlltotalsByTestPackageResponse.getRemainingBasicConnectionHours()) &&
                Objects.equals(getInstalledBasicConnections(), getAlltotalsByTestPackageResponse.getInstalledBasicConnections()) &&
                Objects.equals(getHoursSupports(), getAlltotalsByTestPackageResponse.getHoursSupports()) &&
                Objects.equals(getHoursBasicConnection(), getAlltotalsByTestPackageResponse.getHoursBasicConnection()) &&
                Objects.equals(getCountWeld(), getAlltotalsByTestPackageResponse.getCountWeld()) &&
                Objects.equals(getInstalledFootage(), getAlltotalsByTestPackageResponse.getInstalledFootage());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPercentComplete(),
                getHoursAllmech(),
                getRemainingBoltUps(),
                getHoursMisc(),
                getArea(),
                getRemainingBasicConnections(),
                getEarnedTestingHours(),
                getEarnedBasicConnectHours(),
                getEarnedSupportHours(),
                getRemainingWeldHours(),
                getInstalledMisc(),
                getHoursTrim(),
                getEarnedTrimHours(),
                getInstalledSupports(),
                getRemainingFootage(),
                getCountSupports(),
                getCountErectionFootage(),
                getRemainingSupportHours(),
                getEarnedMiscHours(),
                getRemainingBasicTrimActivities(),
                getRemainingBasicTrimHours(),
                getCountMiscActivities(),
                getRemainingBoltUpHours(),
                getRemainingTrimActivities(),
                getHoursTesting(),
                getInstalledBasicTrim(),
                getPhase(),
                getEarnedBasicTrimHours(),
                getInstalledTrim(),
                getHoursErection(),
                getCountBasicConnection(),
                getEarnedWeldHours(),
                getTestPackageNumber(),
                getRemainingWelds(),
                getHoursBoltUp(),
                getRemainingTrimHours(),
                getRemainingMiscActivities(),
                getRemainingMiscHours(),
                getHoursWeld(),
                getEarnedBoltUpHours(),
                getCu(),
                getCountTrimActivities(),
                getRemainingSupports(),
                getCountBoltUp(),
                getEarnedErectionHours(),
                getCountBasicTrimActivities(),
                getEarnedAllmech(),
                getInstalledWelds(),
                getHoursBasicTrimActivities(),
                getInstalledBoltUps(),
                getRemainingErectionHours(),
                getRemainingBasicConnectionHours(),
                getInstalledBasicConnections(),
                getHoursSupports(),
                getHoursBasicConnection(),
                getCountWeld(),
                getInstalledFootage());
    }
}
