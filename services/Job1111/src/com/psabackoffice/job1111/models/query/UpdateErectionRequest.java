/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateErectionRequest implements Serializable {

    @JsonProperty("Spool1")
    private String spool1;
    @JsonProperty("Spool1Length")
    private Integer spool1length;
    @JsonProperty("Spool2")
    private String spool2;
    @JsonProperty("Spool2Length")
    private Integer spool2length;
    @JsonProperty("Spool3")
    private String spool3;
    @JsonProperty("Spool3Length")
    private Integer spool3length;
    @JsonProperty("Spool4")
    private String spool4;
    @JsonProperty("Spool4Length")
    private Integer spool4length;
    @JsonProperty("Spool5")
    private String spool5;
    @JsonProperty("Spool5Length")
    private Integer spool5length;
    @JsonProperty("Spool6")
    private String spool6;
    @JsonProperty("Spool6Length")
    private Integer spool6length;
    @JsonProperty("OnCords")
    private Byte onCords;
    @JsonProperty("DrawingNumber")
    private String drawingNumber;
    @JsonProperty("LineNumber")
    private String lineNumber;
    @JsonProperty("SheetNumber")
    private String sheetNumber;
    @JsonProperty("Size")
    private BigDecimal size;
    @JsonProperty("Rework")
    private Integer rework;
    @JsonProperty("Notes")
    private String notes;
    @JsonProperty("RowID")
    private Integer rowId;

    public String getSpool1() {
        return this.spool1;
    }

    public void setSpool1(String spool1) {
        this.spool1 = spool1;
    }

    public Integer getSpool1length() {
        return this.spool1length;
    }

    public void setSpool1length(Integer spool1length) {
        this.spool1length = spool1length;
    }

    public String getSpool2() {
        return this.spool2;
    }

    public void setSpool2(String spool2) {
        this.spool2 = spool2;
    }

    public Integer getSpool2length() {
        return this.spool2length;
    }

    public void setSpool2length(Integer spool2length) {
        this.spool2length = spool2length;
    }

    public String getSpool3() {
        return this.spool3;
    }

    public void setSpool3(String spool3) {
        this.spool3 = spool3;
    }

    public Integer getSpool3length() {
        return this.spool3length;
    }

    public void setSpool3length(Integer spool3length) {
        this.spool3length = spool3length;
    }

    public String getSpool4() {
        return this.spool4;
    }

    public void setSpool4(String spool4) {
        this.spool4 = spool4;
    }

    public Integer getSpool4length() {
        return this.spool4length;
    }

    public void setSpool4length(Integer spool4length) {
        this.spool4length = spool4length;
    }

    public String getSpool5() {
        return this.spool5;
    }

    public void setSpool5(String spool5) {
        this.spool5 = spool5;
    }

    public Integer getSpool5length() {
        return this.spool5length;
    }

    public void setSpool5length(Integer spool5length) {
        this.spool5length = spool5length;
    }

    public String getSpool6() {
        return this.spool6;
    }

    public void setSpool6(String spool6) {
        this.spool6 = spool6;
    }

    public Integer getSpool6length() {
        return this.spool6length;
    }

    public void setSpool6length(Integer spool6length) {
        this.spool6length = spool6length;
    }

    public Byte getOnCords() {
        return this.onCords;
    }

    public void setOnCords(Byte onCords) {
        this.onCords = onCords;
    }

    public String getDrawingNumber() {
        return this.drawingNumber;
    }

    public void setDrawingNumber(String drawingNumber) {
        this.drawingNumber = drawingNumber;
    }

    public String getLineNumber() {
        return this.lineNumber;
    }

    public void setLineNumber(String lineNumber) {
        this.lineNumber = lineNumber;
    }

    public String getSheetNumber() {
        return this.sheetNumber;
    }

    public void setSheetNumber(String sheetNumber) {
        this.sheetNumber = sheetNumber;
    }

    public BigDecimal getSize() {
        return this.size;
    }

    public void setSize(BigDecimal size) {
        this.size = size;
    }

    public Integer getRework() {
        return this.rework;
    }

    public void setRework(Integer rework) {
        this.rework = rework;
    }

    public String getNotes() {
        return this.notes;
    }

    public void setNotes(String notes) {
        this.notes = notes;
    }

    public Integer getRowId() {
        return this.rowId;
    }

    public void setRowId(Integer rowId) {
        this.rowId = rowId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof UpdateErectionRequest)) return false;
        final UpdateErectionRequest updateErectionRequest = (UpdateErectionRequest) o;
        return Objects.equals(getSpool1(), updateErectionRequest.getSpool1()) &&
                Objects.equals(getSpool1length(), updateErectionRequest.getSpool1length()) &&
                Objects.equals(getSpool2(), updateErectionRequest.getSpool2()) &&
                Objects.equals(getSpool2length(), updateErectionRequest.getSpool2length()) &&
                Objects.equals(getSpool3(), updateErectionRequest.getSpool3()) &&
                Objects.equals(getSpool3length(), updateErectionRequest.getSpool3length()) &&
                Objects.equals(getSpool4(), updateErectionRequest.getSpool4()) &&
                Objects.equals(getSpool4length(), updateErectionRequest.getSpool4length()) &&
                Objects.equals(getSpool5(), updateErectionRequest.getSpool5()) &&
                Objects.equals(getSpool5length(), updateErectionRequest.getSpool5length()) &&
                Objects.equals(getSpool6(), updateErectionRequest.getSpool6()) &&
                Objects.equals(getSpool6length(), updateErectionRequest.getSpool6length()) &&
                Objects.equals(getOnCords(), updateErectionRequest.getOnCords()) &&
                Objects.equals(getDrawingNumber(), updateErectionRequest.getDrawingNumber()) &&
                Objects.equals(getLineNumber(), updateErectionRequest.getLineNumber()) &&
                Objects.equals(getSheetNumber(), updateErectionRequest.getSheetNumber()) &&
                Objects.equals(getSize(), updateErectionRequest.getSize()) &&
                Objects.equals(getRework(), updateErectionRequest.getRework()) &&
                Objects.equals(getNotes(), updateErectionRequest.getNotes()) &&
                Objects.equals(getRowId(), updateErectionRequest.getRowId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getSpool1(),
                getSpool1length(),
                getSpool2(),
                getSpool2length(),
                getSpool3(),
                getSpool3length(),
                getSpool4(),
                getSpool4length(),
                getSpool5(),
                getSpool5length(),
                getSpool6(),
                getSpool6length(),
                getOnCords(),
                getDrawingNumber(),
                getLineNumber(),
                getSheetNumber(),
                getSize(),
                getRework(),
                getNotes(),
                getRowId());
    }
}
