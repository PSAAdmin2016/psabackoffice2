/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateCivilFaRequest implements Serializable {

    @JsonProperty("Description")
    private String description;
    @JsonProperty("Foundation")
    private String foundation;
    @JsonProperty("Drawing")
    private String drawing;
    @JsonProperty("DetailDrawing")
    private String detailDrawing;
    @JsonProperty("Percent")
    private BigDecimal percent;
    @JsonProperty("Quantity")
    private Integer quantity;
    @JsonProperty("Rework")
    private Integer rework;
    @JsonProperty("Notes")
    private String notes;
    @NotNull
    @JsonProperty("FieldActivityID")
    private Integer fieldActivityId;

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getFoundation() {
        return this.foundation;
    }

    public void setFoundation(String foundation) {
        this.foundation = foundation;
    }

    public String getDrawing() {
        return this.drawing;
    }

    public void setDrawing(String drawing) {
        this.drawing = drawing;
    }

    public String getDetailDrawing() {
        return this.detailDrawing;
    }

    public void setDetailDrawing(String detailDrawing) {
        this.detailDrawing = detailDrawing;
    }

    public BigDecimal getPercent() {
        return this.percent;
    }

    public void setPercent(BigDecimal percent) {
        this.percent = percent;
    }

    public Integer getQuantity() {
        return this.quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    public Integer getRework() {
        return this.rework;
    }

    public void setRework(Integer rework) {
        this.rework = rework;
    }

    public String getNotes() {
        return this.notes;
    }

    public void setNotes(String notes) {
        this.notes = notes;
    }

    public Integer getFieldActivityId() {
        return this.fieldActivityId;
    }

    public void setFieldActivityId(Integer fieldActivityId) {
        this.fieldActivityId = fieldActivityId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof UpdateCivilFaRequest)) return false;
        final UpdateCivilFaRequest updateCivilFaRequest = (UpdateCivilFaRequest) o;
        return Objects.equals(getDescription(), updateCivilFaRequest.getDescription()) &&
                Objects.equals(getFoundation(), updateCivilFaRequest.getFoundation()) &&
                Objects.equals(getDrawing(), updateCivilFaRequest.getDrawing()) &&
                Objects.equals(getDetailDrawing(), updateCivilFaRequest.getDetailDrawing()) &&
                Objects.equals(getPercent(), updateCivilFaRequest.getPercent()) &&
                Objects.equals(getQuantity(), updateCivilFaRequest.getQuantity()) &&
                Objects.equals(getRework(), updateCivilFaRequest.getRework()) &&
                Objects.equals(getNotes(), updateCivilFaRequest.getNotes()) &&
                Objects.equals(getFieldActivityId(), updateCivilFaRequest.getFieldActivityId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getDescription(),
                getFoundation(),
                getDrawing(),
                getDetailDrawing(),
                getPercent(),
                getQuantity(),
                getRework(),
                getNotes(),
                getFieldActivityId());
    }
}
