/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class GetActivitiesPendingApprovalResponse implements Serializable {

    @JsonProperty("SubmissionID")
    @ColumnAlias("SubmissionID")
    private Integer submissionId;
    @JsonProperty("ActivityID")
    @ColumnAlias("ActivityID")
    private Integer activityId;
    @JsonProperty("ActivityType")
    @ColumnAlias("ActivityType")
    private Short activityType;
    @JsonProperty("ActivityTypeName")
    @ColumnAlias("ActivityTypeName")
    private String activityTypeName;
    @JsonProperty("Status")
    @ColumnAlias("Status")
    private String status;
    @JsonProperty("Craft")
    @ColumnAlias("Craft")
    private String craft;
    @JsonProperty("Spool1")
    @ColumnAlias("Spool1")
    private String spool1;
    @JsonProperty("Spool2")
    @ColumnAlias("Spool2")
    private String spool2;
    @JsonProperty("Line1")
    @ColumnAlias("Line1")
    private String line1;
    @JsonProperty("Drawing1")
    @ColumnAlias("Drawing1")
    private String drawing1;
    @JsonProperty("Sheet1")
    @ColumnAlias("Sheet1")
    private String sheet1;
    @JsonProperty("Line2")
    @ColumnAlias("Line2")
    private String line2;
    @JsonProperty("Drawing2")
    @ColumnAlias("Drawing2")
    private String drawing2;
    @JsonProperty("Sheet2")
    @ColumnAlias("Sheet2")
    private String sheet2;
    @JsonProperty("Size")
    @ColumnAlias("Size")
    private String size;
    @JsonProperty("Notes")
    @ColumnAlias("Notes")
    private String notes;
    @JsonProperty("Quantity")
    @ColumnAlias("Quantity")
    private String quantity;
    @JsonProperty("Area")
    @ColumnAlias("Area")
    private String area;
    @JsonProperty("PercentClaim")
    @ColumnAlias("PercentClaim")
    private String percentClaim;
    @JsonProperty("Rework")
    @ColumnAlias("Rework")
    private Long rework;

    public Integer getSubmissionId() {
        return this.submissionId;
    }

    public void setSubmissionId(Integer submissionId) {
        this.submissionId = submissionId;
    }

    public Integer getActivityId() {
        return this.activityId;
    }

    public void setActivityId(Integer activityId) {
        this.activityId = activityId;
    }

    public Short getActivityType() {
        return this.activityType;
    }

    public void setActivityType(Short activityType) {
        this.activityType = activityType;
    }

    public String getActivityTypeName() {
        return this.activityTypeName;
    }

    public void setActivityTypeName(String activityTypeName) {
        this.activityTypeName = activityTypeName;
    }

    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public String getCraft() {
        return this.craft;
    }

    public void setCraft(String craft) {
        this.craft = craft;
    }

    public String getSpool1() {
        return this.spool1;
    }

    public void setSpool1(String spool1) {
        this.spool1 = spool1;
    }

    public String getSpool2() {
        return this.spool2;
    }

    public void setSpool2(String spool2) {
        this.spool2 = spool2;
    }

    public String getLine1() {
        return this.line1;
    }

    public void setLine1(String line1) {
        this.line1 = line1;
    }

    public String getDrawing1() {
        return this.drawing1;
    }

    public void setDrawing1(String drawing1) {
        this.drawing1 = drawing1;
    }

    public String getSheet1() {
        return this.sheet1;
    }

    public void setSheet1(String sheet1) {
        this.sheet1 = sheet1;
    }

    public String getLine2() {
        return this.line2;
    }

    public void setLine2(String line2) {
        this.line2 = line2;
    }

    public String getDrawing2() {
        return this.drawing2;
    }

    public void setDrawing2(String drawing2) {
        this.drawing2 = drawing2;
    }

    public String getSheet2() {
        return this.sheet2;
    }

    public void setSheet2(String sheet2) {
        this.sheet2 = sheet2;
    }

    public String getSize() {
        return this.size;
    }

    public void setSize(String size) {
        this.size = size;
    }

    public String getNotes() {
        return this.notes;
    }

    public void setNotes(String notes) {
        this.notes = notes;
    }

    public String getQuantity() {
        return this.quantity;
    }

    public void setQuantity(String quantity) {
        this.quantity = quantity;
    }

    public String getArea() {
        return this.area;
    }

    public void setArea(String area) {
        this.area = area;
    }

    public String getPercentClaim() {
        return this.percentClaim;
    }

    public void setPercentClaim(String percentClaim) {
        this.percentClaim = percentClaim;
    }

    public Long getRework() {
        return this.rework;
    }

    public void setRework(Long rework) {
        this.rework = rework;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof GetActivitiesPendingApprovalResponse)) return false;
        final GetActivitiesPendingApprovalResponse getActivitiesPendingApprovalResponse = (GetActivitiesPendingApprovalResponse) o;
        return Objects.equals(getSubmissionId(), getActivitiesPendingApprovalResponse.getSubmissionId()) &&
                Objects.equals(getActivityId(), getActivitiesPendingApprovalResponse.getActivityId()) &&
                Objects.equals(getActivityType(), getActivitiesPendingApprovalResponse.getActivityType()) &&
                Objects.equals(getActivityTypeName(), getActivitiesPendingApprovalResponse.getActivityTypeName()) &&
                Objects.equals(getStatus(), getActivitiesPendingApprovalResponse.getStatus()) &&
                Objects.equals(getCraft(), getActivitiesPendingApprovalResponse.getCraft()) &&
                Objects.equals(getSpool1(), getActivitiesPendingApprovalResponse.getSpool1()) &&
                Objects.equals(getSpool2(), getActivitiesPendingApprovalResponse.getSpool2()) &&
                Objects.equals(getLine1(), getActivitiesPendingApprovalResponse.getLine1()) &&
                Objects.equals(getDrawing1(), getActivitiesPendingApprovalResponse.getDrawing1()) &&
                Objects.equals(getSheet1(), getActivitiesPendingApprovalResponse.getSheet1()) &&
                Objects.equals(getLine2(), getActivitiesPendingApprovalResponse.getLine2()) &&
                Objects.equals(getDrawing2(), getActivitiesPendingApprovalResponse.getDrawing2()) &&
                Objects.equals(getSheet2(), getActivitiesPendingApprovalResponse.getSheet2()) &&
                Objects.equals(getSize(), getActivitiesPendingApprovalResponse.getSize()) &&
                Objects.equals(getNotes(), getActivitiesPendingApprovalResponse.getNotes()) &&
                Objects.equals(getQuantity(), getActivitiesPendingApprovalResponse.getQuantity()) &&
                Objects.equals(getArea(), getActivitiesPendingApprovalResponse.getArea()) &&
                Objects.equals(getPercentClaim(), getActivitiesPendingApprovalResponse.getPercentClaim()) &&
                Objects.equals(getRework(), getActivitiesPendingApprovalResponse.getRework());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getSubmissionId(),
                getActivityId(),
                getActivityType(),
                getActivityTypeName(),
                getStatus(),
                getCraft(),
                getSpool1(),
                getSpool2(),
                getLine1(),
                getDrawing1(),
                getSheet1(),
                getLine2(),
                getDrawing2(),
                getSheet2(),
                getSize(),
                getNotes(),
                getQuantity(),
                getArea(),
                getPercentClaim(),
                getRework());
    }
}
