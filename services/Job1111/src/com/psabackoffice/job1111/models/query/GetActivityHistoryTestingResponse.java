/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Objects;

import org.joda.time.LocalDateTime;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class GetActivityHistoryTestingResponse implements Serializable {

    @JsonProperty("ActivityType")
    @ColumnAlias("ActivityType")
    private Byte activityType;
    @JsonProperty("ID")
    @ColumnAlias("ID")
    private Integer id;
    @JsonProperty("Rev")
    @ColumnAlias("Rev")
    private Byte rev;
    @JsonProperty("TestingHoursSpent")
    @ColumnAlias("TestingHoursSpent")
    private String testingHoursSpent;
    @JsonProperty("TestingNotes")
    @ColumnAlias("TestingNotes")
    private String testingNotes;
    @JsonProperty("TestingRework")
    @ColumnAlias("TestingRework")
    private Byte testingRework;
    @JsonProperty("TestingTestPackageNumber")
    @ColumnAlias("TestingTestPackageNumber")
    private String testingTestPackageNumber;
    @JsonProperty("TestingTimeInForm")
    @ColumnAlias("TestingTimeInForm")
    private Short testingTimeInForm;
    @JsonProperty("TimeStamp")
    @ColumnAlias("TimeStamp")
    private Timestamp timeStamp;
    @JsonProperty("fk_SubmissionId")
    @ColumnAlias("fk_SubmissionId")
    private Integer fkSubmissionId;

    public Byte getActivityType() {
        return this.activityType;
    }

    public void setActivityType(Byte activityType) {
        this.activityType = activityType;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Byte getRev() {
        return this.rev;
    }

    public void setRev(Byte rev) {
        this.rev = rev;
    }

    public String getTestingHoursSpent() {
        return this.testingHoursSpent;
    }

    public void setTestingHoursSpent(String testingHoursSpent) {
        this.testingHoursSpent = testingHoursSpent;
    }

    public String getTestingNotes() {
        return this.testingNotes;
    }

    public void setTestingNotes(String testingNotes) {
        this.testingNotes = testingNotes;
    }

    public Byte getTestingRework() {
        return this.testingRework;
    }

    public void setTestingRework(Byte testingRework) {
        this.testingRework = testingRework;
    }

    public String getTestingTestPackageNumber() {
        return this.testingTestPackageNumber;
    }

    public void setTestingTestPackageNumber(String testingTestPackageNumber) {
        this.testingTestPackageNumber = testingTestPackageNumber;
    }

    public Short getTestingTimeInForm() {
        return this.testingTimeInForm;
    }

    public void setTestingTimeInForm(Short testingTimeInForm) {
        this.testingTimeInForm = testingTimeInForm;
    }

    public Timestamp getTimeStamp() {
        return this.timeStamp;
    }

    public void setTimeStamp(Timestamp timeStamp) {
        this.timeStamp = timeStamp;
    }

    public Integer getFkSubmissionId() {
        return this.fkSubmissionId;
    }

    public void setFkSubmissionId(Integer fkSubmissionId) {
        this.fkSubmissionId = fkSubmissionId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof GetActivityHistoryTestingResponse)) return false;
        final GetActivityHistoryTestingResponse getActivityHistoryTestingResponse = (GetActivityHistoryTestingResponse) o;
        return Objects.equals(getActivityType(), getActivityHistoryTestingResponse.getActivityType()) &&
                Objects.equals(getId(), getActivityHistoryTestingResponse.getId()) &&
                Objects.equals(getRev(), getActivityHistoryTestingResponse.getRev()) &&
                Objects.equals(getTestingHoursSpent(), getActivityHistoryTestingResponse.getTestingHoursSpent()) &&
                Objects.equals(getTestingNotes(), getActivityHistoryTestingResponse.getTestingNotes()) &&
                Objects.equals(getTestingRework(), getActivityHistoryTestingResponse.getTestingRework()) &&
                Objects.equals(getTestingTestPackageNumber(), getActivityHistoryTestingResponse.getTestingTestPackageNumber()) &&
                Objects.equals(getTestingTimeInForm(), getActivityHistoryTestingResponse.getTestingTimeInForm()) &&
                Objects.equals(getTimeStamp(), getActivityHistoryTestingResponse.getTimeStamp()) &&
                Objects.equals(getFkSubmissionId(), getActivityHistoryTestingResponse.getFkSubmissionId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getActivityType(),
                getId(),
                getRev(),
                getTestingHoursSpent(),
                getTestingNotes(),
                getTestingRework(),
                getTestingTestPackageNumber(),
                getTestingTimeInForm(),
                getTimeStamp(),
                getFkSubmissionId());
    }
}
