/*Copyright (c) 2016-2018 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class GetQuantitiesTestPackageSteelResponse implements Serializable {


    @JsonProperty("BidID")
    @ColumnAlias("BidID")
    private Integer bidId;

    @JsonProperty("TestPackageNumber")
    @ColumnAlias("TestPackageNumber")
    private String testPackageNumber;

    @JsonProperty("SellPunchCount")
    @ColumnAlias("SellPunchCount")
    private BigDecimal sellPunchCount;

    @JsonProperty("SellPunchHours")
    @ColumnAlias("SellPunchHours")
    private BigDecimal sellPunchHours;

    @JsonProperty("InstalledSell")
    @ColumnAlias("InstalledSell")
    private BigDecimal installedSell;

    @JsonProperty("EarnedSellPunchHours")
    @ColumnAlias("EarnedSellPunchHours")
    private BigDecimal earnedSellPunchHours;

    @JsonProperty("LooseHours")
    @ColumnAlias("LooseHours")
    private BigDecimal looseHours;

    public Integer getBidId() {
        return this.bidId;
    }

    public void setBidId(Integer bidId) {
        this.bidId = bidId;
    }

    public String getTestPackageNumber() {
        return this.testPackageNumber;
    }

    public void setTestPackageNumber(String testPackageNumber) {
        this.testPackageNumber = testPackageNumber;
    }

    public BigDecimal getSellPunchCount() {
        return this.sellPunchCount;
    }

    public void setSellPunchCount(BigDecimal sellPunchCount) {
        this.sellPunchCount = sellPunchCount;
    }

    public BigDecimal getSellPunchHours() {
        return this.sellPunchHours;
    }

    public void setSellPunchHours(BigDecimal sellPunchHours) {
        this.sellPunchHours = sellPunchHours;
    }

    public BigDecimal getInstalledSell() {
        return this.installedSell;
    }

    public void setInstalledSell(BigDecimal installedSell) {
        this.installedSell = installedSell;
    }

    public BigDecimal getEarnedSellPunchHours() {
        return this.earnedSellPunchHours;
    }

    public void setEarnedSellPunchHours(BigDecimal earnedSellPunchHours) {
        this.earnedSellPunchHours = earnedSellPunchHours;
    }

    public BigDecimal getLooseHours() {
        return this.looseHours;
    }

    public void setLooseHours(BigDecimal looseHours) {
        this.looseHours = looseHours;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof GetQuantitiesTestPackageSteelResponse)) return false;
        final GetQuantitiesTestPackageSteelResponse getQuantitiesTestPackageSteelResponse = (GetQuantitiesTestPackageSteelResponse) o;
        return Objects.equals(getBidId(), getQuantitiesTestPackageSteelResponse.getBidId()) &&
                Objects.equals(getTestPackageNumber(), getQuantitiesTestPackageSteelResponse.getTestPackageNumber()) &&
                Objects.equals(getSellPunchCount(), getQuantitiesTestPackageSteelResponse.getSellPunchCount()) &&
                Objects.equals(getSellPunchHours(), getQuantitiesTestPackageSteelResponse.getSellPunchHours()) &&
                Objects.equals(getInstalledSell(), getQuantitiesTestPackageSteelResponse.getInstalledSell()) &&
                Objects.equals(getEarnedSellPunchHours(), getQuantitiesTestPackageSteelResponse.getEarnedSellPunchHours()) &&
                Objects.equals(getLooseHours(), getQuantitiesTestPackageSteelResponse.getLooseHours());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getBidId(),
                getTestPackageNumber(),
                getSellPunchCount(),
                getSellPunchHours(),
                getInstalledSell(),
                getEarnedSellPunchHours(),
                getLooseHours());
    }
}
