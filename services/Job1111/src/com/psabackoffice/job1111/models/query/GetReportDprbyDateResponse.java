/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Objects;

import org.joda.time.LocalDateTime;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class GetReportDprbyDateResponse implements Serializable {

    @JsonProperty("FieldActivityId")
    @ColumnAlias("FieldActivityId")
    private Integer fieldActivityId;
    @JsonProperty("ActivityType")
    @ColumnAlias("ActivityType")
    private Short activityType;
    @JsonProperty("ActivityRowId")
    @ColumnAlias("ActivityRowId")
    private Integer activityRowId;
    @JsonProperty("ActivityTypeName")
    @ColumnAlias("ActivityTypeName")
    private String activityTypeName;
    @JsonProperty("DrawingNumber")
    @ColumnAlias("DrawingNumber")
    private String drawingNumber;
    @JsonProperty("SheetNumber")
    @ColumnAlias("SheetNumber")
    private String sheetNumber;
    @JsonProperty("Spool1")
    @ColumnAlias("Spool1")
    private String spool1;
    @JsonProperty("Spool2")
    @ColumnAlias("Spool2")
    private String spool2;
    @JsonProperty("Size")
    @ColumnAlias("Size")
    private String size;
    @JsonProperty("QuantityInstalled")
    @ColumnAlias("QuantityInstalled")
    private Double quantityInstalled;
    @JsonProperty("CurrentStatus")
    @ColumnAlias("CurrentStatus")
    private String currentStatus;
    @JsonProperty("Notes")
    @ColumnAlias("Notes")
    private String notes;
    @JsonProperty("Rework")
    @ColumnAlias("Rework")
    private Long rework;
    @JsonProperty("DateSubmitted")
    @ColumnAlias("DateSubmitted")
    private Date dateSubmitted;

    public Integer getFieldActivityId() {
        return this.fieldActivityId;
    }

    public void setFieldActivityId(Integer fieldActivityId) {
        this.fieldActivityId = fieldActivityId;
    }

    public Short getActivityType() {
        return this.activityType;
    }

    public void setActivityType(Short activityType) {
        this.activityType = activityType;
    }

    public Integer getActivityRowId() {
        return this.activityRowId;
    }

    public void setActivityRowId(Integer activityRowId) {
        this.activityRowId = activityRowId;
    }

    public String getActivityTypeName() {
        return this.activityTypeName;
    }

    public void setActivityTypeName(String activityTypeName) {
        this.activityTypeName = activityTypeName;
    }

    public String getDrawingNumber() {
        return this.drawingNumber;
    }

    public void setDrawingNumber(String drawingNumber) {
        this.drawingNumber = drawingNumber;
    }

    public String getSheetNumber() {
        return this.sheetNumber;
    }

    public void setSheetNumber(String sheetNumber) {
        this.sheetNumber = sheetNumber;
    }

    public String getSpool1() {
        return this.spool1;
    }

    public void setSpool1(String spool1) {
        this.spool1 = spool1;
    }

    public String getSpool2() {
        return this.spool2;
    }

    public void setSpool2(String spool2) {
        this.spool2 = spool2;
    }

    public String getSize() {
        return this.size;
    }

    public void setSize(String size) {
        this.size = size;
    }

    public Double getQuantityInstalled() {
        return this.quantityInstalled;
    }

    public void setQuantityInstalled(Double quantityInstalled) {
        this.quantityInstalled = quantityInstalled;
    }

    public String getCurrentStatus() {
        return this.currentStatus;
    }

    public void setCurrentStatus(String currentStatus) {
        this.currentStatus = currentStatus;
    }

    public String getNotes() {
        return this.notes;
    }

    public void setNotes(String notes) {
        this.notes = notes;
    }

    public Long getRework() {
        return this.rework;
    }

    public void setRework(Long rework) {
        this.rework = rework;
    }

    public Date getDateSubmitted() {
        return this.dateSubmitted;
    }

    public void setDateSubmitted(Date dateSubmitted) {
        this.dateSubmitted = dateSubmitted;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof GetReportDprbyDateResponse)) return false;
        final GetReportDprbyDateResponse getReportDprbyDateResponse = (GetReportDprbyDateResponse) o;
        return Objects.equals(getFieldActivityId(), getReportDprbyDateResponse.getFieldActivityId()) &&
                Objects.equals(getActivityType(), getReportDprbyDateResponse.getActivityType()) &&
                Objects.equals(getActivityRowId(), getReportDprbyDateResponse.getActivityRowId()) &&
                Objects.equals(getActivityTypeName(), getReportDprbyDateResponse.getActivityTypeName()) &&
                Objects.equals(getDrawingNumber(), getReportDprbyDateResponse.getDrawingNumber()) &&
                Objects.equals(getSheetNumber(), getReportDprbyDateResponse.getSheetNumber()) &&
                Objects.equals(getSpool1(), getReportDprbyDateResponse.getSpool1()) &&
                Objects.equals(getSpool2(), getReportDprbyDateResponse.getSpool2()) &&
                Objects.equals(getSize(), getReportDprbyDateResponse.getSize()) &&
                Objects.equals(getQuantityInstalled(), getReportDprbyDateResponse.getQuantityInstalled()) &&
                Objects.equals(getCurrentStatus(), getReportDprbyDateResponse.getCurrentStatus()) &&
                Objects.equals(getNotes(), getReportDprbyDateResponse.getNotes()) &&
                Objects.equals(getRework(), getReportDprbyDateResponse.getRework()) &&
                Objects.equals(getDateSubmitted(), getReportDprbyDateResponse.getDateSubmitted());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getFieldActivityId(),
                getActivityType(),
                getActivityRowId(),
                getActivityTypeName(),
                getDrawingNumber(),
                getSheetNumber(),
                getSpool1(),
                getSpool2(),
                getSize(),
                getQuantityInstalled(),
                getCurrentStatus(),
                getNotes(),
                getRework(),
                getDateSubmitted());
    }
}
