/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * PipeDemo generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`PipeDemo`")
public class PipeDemo implements Serializable {

    private Integer activityId;
    private Integer demoBidId;
    private String demoDescription;
    private Short demoQuantity;
    private String demoNotes;
    private Short activityType;
    private Short demoTimeInForm;
    private short rev;
    private Timestamp timeStamp;
    private SubmissionActivityStatus submissionActivityStatus;

    @Id
    @Column(name = "`ActivityID`", nullable = false, scale = 0, precision = 10)
    public Integer getActivityId() {
        return this.activityId;
    }

    public void setActivityId(Integer activityId) {
        this.activityId = activityId;
    }

    @Column(name = "`DemoBidID`", nullable = true, scale = 0, precision = 10)
    public Integer getDemoBidId() {
        return this.demoBidId;
    }

    public void setDemoBidId(Integer demoBidId) {
        this.demoBidId = demoBidId;
    }

    @Column(name = "`DemoDescription`", nullable = true, length = 255)
    public String getDemoDescription() {
        return this.demoDescription;
    }

    public void setDemoDescription(String demoDescription) {
        this.demoDescription = demoDescription;
    }

    @Column(name = "`DemoQuantity`", nullable = true, scale = 0, precision = 5)
    public Short getDemoQuantity() {
        return this.demoQuantity;
    }

    public void setDemoQuantity(Short demoQuantity) {
        this.demoQuantity = demoQuantity;
    }

    @Column(name = "`DemoNotes`", nullable = true, length = 255)
    public String getDemoNotes() {
        return this.demoNotes;
    }

    public void setDemoNotes(String demoNotes) {
        this.demoNotes = demoNotes;
    }

    @Column(name = "`ActivityType`", nullable = true, scale = 0, precision = 3)
    public Short getActivityType() {
        return this.activityType;
    }

    public void setActivityType(Short activityType) {
        this.activityType = activityType;
    }

    @Column(name = "`DemoTimeInForm`", nullable = true, scale = 0, precision = 5)
    public Short getDemoTimeInForm() {
        return this.demoTimeInForm;
    }

    public void setDemoTimeInForm(Short demoTimeInForm) {
        this.demoTimeInForm = demoTimeInForm;
    }

    @Column(name = "`Rev`", nullable = false, scale = 0, precision = 3)
    public short getRev() {
        return this.rev;
    }

    public void setRev(short rev) {
        this.rev = rev;
    }

    @Column(name = "`TimeStamp`", nullable = false)
    public Timestamp getTimeStamp() {
        return this.timeStamp;
    }

    public void setTimeStamp(Timestamp timeStamp) {
        this.timeStamp = timeStamp;
    }

    @OneToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`ActivityID`", referencedColumnName = "`ActivityID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`PipeDemo_ActivityID_to_SASActivityID`"))
    @Fetch(FetchMode.JOIN)
    public SubmissionActivityStatus getSubmissionActivityStatus() {
        return this.submissionActivityStatus;
    }

    public void setSubmissionActivityStatus(SubmissionActivityStatus submissionActivityStatus) {
        if(submissionActivityStatus != null) {
            this.activityId = submissionActivityStatus.getActivityId();
        }

        this.submissionActivityStatus = submissionActivityStatus;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof PipeDemo)) return false;
        final PipeDemo pipeDemo = (PipeDemo) o;
        return Objects.equals(getActivityId(), pipeDemo.getActivityId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getActivityId());
    }
}

