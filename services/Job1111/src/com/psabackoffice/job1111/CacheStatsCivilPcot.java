/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.job1111;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

/**
 * CacheStatsCivilPcot generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`CacheStats_CivilPCOT`")
public class CacheStatsCivilPcot implements Serializable {

    private Integer id;
    @Type(type = "DateTime")
    private LocalDateTime earnedDate;
    private Float civilWorkPercentComplete;
    private Float sellPunchPercentComplete;
    private Float totalPercentComplete;
    private Double totalHoursEarned;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`EarnedDate`", nullable = true)
    public LocalDateTime getEarnedDate() {
        return this.earnedDate;
    }

    public void setEarnedDate(LocalDateTime earnedDate) {
        this.earnedDate = earnedDate;
    }

    @Column(name = "`CivilWorkPercentComplete`", nullable = true, scale = 2, precision = 5)
    public Float getCivilWorkPercentComplete() {
        return this.civilWorkPercentComplete;
    }

    public void setCivilWorkPercentComplete(Float civilWorkPercentComplete) {
        this.civilWorkPercentComplete = civilWorkPercentComplete;
    }

    @Column(name = "`SellPunchPercentComplete`", nullable = true, scale = 2, precision = 5)
    public Float getSellPunchPercentComplete() {
        return this.sellPunchPercentComplete;
    }

    public void setSellPunchPercentComplete(Float sellPunchPercentComplete) {
        this.sellPunchPercentComplete = sellPunchPercentComplete;
    }

    @Column(name = "`TotalPercentComplete`", nullable = true, scale = 2, precision = 5)
    public Float getTotalPercentComplete() {
        return this.totalPercentComplete;
    }

    public void setTotalPercentComplete(Float totalPercentComplete) {
        this.totalPercentComplete = totalPercentComplete;
    }

    @Column(name = "`TotalHoursEarned`", nullable = true, scale = 6, precision = 16)
    public Double getTotalHoursEarned() {
        return this.totalHoursEarned;
    }

    public void setTotalHoursEarned(Double totalHoursEarned) {
        this.totalHoursEarned = totalHoursEarned;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CacheStatsCivilPcot)) return false;
        final CacheStatsCivilPcot cacheStatsCivilPcot = (CacheStatsCivilPcot) o;
        return Objects.equals(getId(), cacheStatsCivilPcot.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

