<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <sql-query name="UpdateCivilSellPackage">
        <![CDATA[
        UPDATE `CivilSellPackage` 
SET 
`SellTestPackageNumber`= :TestPackageNumber, 
`SellNotes`= :Notes 
WHERE `ID`= :RowID
        ]]>
    <query-param name="TestPackageNumber" type="java.lang.String"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetSuperRecentActivites">
        <![CDATA[
        SELECT ss.PSAActivityID, at.ActivityType, ats.Status, ss.TimeStamp
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	on at.ID = ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats 
	on ats.ID = ss.fk_ActivityStatus

WHERE ss.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW() 
AND ss.ActivityType <> 0
AND ss.fk_ActivityStatus <> 10 
AND ss.fk_ActivityStatus <> 11
AND (ss.fk_LastModifiedBy = :UserID OR ss.fk_LastModifiedBy = :SelectedSuper)
ORDER BY ss.TimeStamp DESC
        ]]>
    <query-param name="UserID" type="java.lang.Integer"/>
    <query-param name="SelectedSuper" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetSuperRecentActivites__count">
        <![CDATA[
        select count(*) from (SELECT ss.PSAActivityID, at.ActivityType, ats.Status, ss.TimeStamp
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	on at.ID = ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats 
	on ats.ID = ss.fk_ActivityStatus

WHERE ss.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW() 
AND ss.ActivityType <> 0
AND ss.fk_ActivityStatus <> 10 
AND ss.fk_ActivityStatus <> 11
AND (ss.fk_LastModifiedBy = :UserID OR ss.fk_LastModifiedBy = :SelectedSuper)
ORDER BY ss.TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="UserID" type="java.lang.Integer"/>
    <query-param name="SelectedSuper" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetErectionTotal">
        <![CDATA[
        SELECT e.ErectionLengthSpool1 + e.ErectionLengthSpool2 + e.ErectionLengthSpool3 + e.ErectionLengthSpool4 + e.ErectionLengthSpool5 + e.ErectionLengthSpool6 AS Total
FROM SubsErection e
WHERE ID = :ActivityId
        ]]>
    <query-param name="ActivityId" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetErectionTotal__count">
        <![CDATA[
        select count(*) from (SELECT e.ErectionLengthSpool1 + e.ErectionLengthSpool2 + e.ErectionLengthSpool3 + e.ErectionLengthSpool4 + e.ErectionLengthSpool5 + e.ErectionLengthSpool6 AS Total
FROM SubsErection e
WHERE ID = :ActivityId) wmTempTable
        ]]>
    <query-param name="ActivityId" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSettingSteelShake">
        <![CDATA[
        UPDATE SETTINGS
SET `Value1`= :Value1 
WHERE `Label`='SteelShakeHoursPercent'
        ]]>
    <query-param name="Value1" type="java.math.BigDecimal"/>
    </sql-query>

    <sql-query name="GetActivityHistoryOverride">
        <![CDATA[
        SELECT so.* 
FROM SubsOverride so
WHERE ID = :RowID

UNION ALL

SELECT  sor.fk_OrgActivityId,  
sor.ORQuantity, sor.ORNotes,
sor.CreatedBy, sor.ActivityType, sor.Rev, sor.TimeStamp
FROM SubsOverrideREV sor
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryOverride__count">
        <![CDATA[
        select count(*) from (SELECT so.* 
FROM SubsOverride so
WHERE ID = :RowID

UNION ALL

SELECT  sor.fk_OrgActivityId,  
sor.ORQuantity, sor.ORNotes,
sor.CreatedBy, sor.ActivityType, sor.Rev, sor.TimeStamp
FROM SubsOverrideREV sor
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetALLTotalsByCU">
        <![CDATA[
        SELECT *
FROM CacheTable_StatsByCU
        ]]>
    </sql-query>

    <sql-query name="GetALLTotalsByCU__count">
        <![CDATA[
        select count(*) from (SELECT *
FROM CacheTable_StatsByCU) wmTempTable
        ]]>
    </sql-query>

    <sql-query name="GetALLTotals">
        <![CDATA[
        SELECT *
FROM CacheTable_StatsByJob
        ]]>
    </sql-query>

    <sql-query name="GetALLTotals__count">
        <![CDATA[
        select count(*) from (SELECT *
FROM CacheTable_StatsByJob) wmTempTable
        ]]>
    </sql-query>

    <sql-query name="GetActivityHistoryDemo">
        <![CDATA[
        SELECT sd.* 
FROM SubsDemo sd
WHERE ID = :RowID

UNION ALL

SELECT  sdr.fk_OrgActivityId, sdr.SubmissionID, 
sdr.DemoDrawingNumber, sdr.DemoLineNumber, sdr.DemoSheetNumber, sdr.DemoQuantity, sdr.DemoSize, sdr.DemoNotes,
sdr.ActivityType, sdr.DemoTimeInForm, sdr.Rev, sdr.TimeStamp
FROM SubsDemoREV sdr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryDemo__count">
        <![CDATA[
        select count(*) from (SELECT sd.* 
FROM SubsDemo sd
WHERE ID = :RowID

UNION ALL

SELECT  sdr.fk_OrgActivityId, sdr.SubmissionID, 
sdr.DemoDrawingNumber, sdr.DemoLineNumber, sdr.DemoSheetNumber, sdr.DemoQuantity, sdr.DemoSize, sdr.DemoNotes,
sdr.ActivityType, sdr.DemoTimeInForm, sdr.Rev, sdr.TimeStamp
FROM SubsDemoREV sdr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelErect">
        <![CDATA[
        SELECT stle.* 
FROM SteelErect stle
WHERE ID = :RowID

UNION ALL

SELECT stler.fk_OrgActivityId, stler.SubmissionID, stler.FAArea, stler.FAPieceNumber, stler.FAErectQuantity, stler.FAErectPercent, stler.FARework, stler.FANotes, stler.ActivityType, stler.FATimeInForm, stler.Rev, stler.TimeStamp
FROM SteelErectREV stler
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelErect__count">
        <![CDATA[
        select count(*) from (SELECT stle.* 
FROM SteelErect stle
WHERE ID = :RowID

UNION ALL

SELECT stler.fk_OrgActivityId, stler.SubmissionID, stler.FAArea, stler.FAPieceNumber, stler.FAErectQuantity, stler.FAErectPercent, stler.FARework, stler.FANotes, stler.ActivityType, stler.FATimeInForm, stler.Rev, stler.TimeStamp
FROM SteelErectREV stler
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantityWeldInstalled">
        <![CDATA[
        SELECT SUM(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0)) AS Total

FROM SubmissionStatus ss

    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
	
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) sw
		ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smw
		ON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'

WHERE ss.ActivityType IN (22, 91) 
AND ss.fk_ActivityStatus IN (5,12)
AND fk_BidIDAssigned = :BidID
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantityWeldInstalled__count">
        <![CDATA[
        select count(*) from (SELECT SUM(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0)) AS Total

FROM SubmissionStatus ss

    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
	
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) sw
		ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smw
		ON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'

WHERE ss.ActivityType IN (22, 91) 
AND ss.fk_ActivityStatus IN (5,12)
AND fk_BidIDAssigned = :BidID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidWorkHistorySteelExpanded">
        <![CDATA[
        SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType AS ActivityTypeName,
COALESCE(stls.FAShakeQuantity,0) AS Quantity, 
'1' AS Percent,
stls.FANotes AS Notes,
stls.FARework AS Rework


FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 61
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 

LEFT JOIN SteelShake stls
	ON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID 

WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 61
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID


UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID,  ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType,
COALESCE(stle.FAErectQuantity,0) AS ErectQuantity,
COALESCE(stle.FAErectPercent,0) AS ErectPercent,
stle.FANotes,
stle.FARework


FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 62
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 


LEFT JOIN SteelErect stle
	ON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID


WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 62
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType,
COALESCE(stlb.FABoltOutQuantity,0) AS BoltoutQuantity,
COALESCE(stlb.FABoltOutPercent,0) AS BoltoutPercent, 
stlb.FANotes,
stlb.FARework


FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 63
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 


LEFT JOIN SteelBoltOut stlb
	ON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID
 

WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 63
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID



UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType,
COALESCE(stli.FAImpQuantity,0) AS ImpQuantity,
COALESCE(stli.FAImpPercent,0) AS ImpPercent, 
stli.FANotes,
stli.FARework


FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType =64
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 

LEFT JOIN SteelImp stli
	ON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID
 

WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 64
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID


UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID,  ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType,
COALESCE(stlw.FAWeldQuantity,0) AS WeldQuantity,
COALESCE(stlw.FAWeldPercent,0) AS WeldPercent,
stlw.FANotes,
stlw.FARework


FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 68
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 

LEFT JOIN SteelWeld stlw
	ON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID
 
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 68
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID


UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType,
COALESCE(stlsell.FASellQuantity,0) AS SellQuantity, 
'1' AS Percent, 
stlsell.FANotes,
stlsell.FARework

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 65
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 

    
LEFT JOIN SteelSell stlsell
	ON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID
 

WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 65
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID


UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType,
COALESCE(stld.DemoQuantity,0) AS DemoQuantity, 
'1' AS Percent, 
stld.DemoNotes,
0 AS Rework


FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 67
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 


LEFT JOIN SteelDemo stld
	ON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID
 
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 67
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID


UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID,  ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType,
COALESCE(stlm.MiscQuantity,0) AS MiscQuantity, 
'1' AS Percent,
stlm.MiscNotes,
stlm.MiscRework


FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 96
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 


LEFT JOIN SteelMisc stlm
	ON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID
    
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 96
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    <query-param name="SubID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidWorkHistorySteelExpanded__count">
        <![CDATA[
        select count(*) from (SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType AS ActivityTypeName,
COALESCE(stls.FAShakeQuantity,0) AS Quantity, 
'1' AS Percent,
stls.FANotes AS Notes,
stls.FARework AS Rework


FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 61
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 

LEFT JOIN SteelShake stls
	ON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID 

WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 61
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID


UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID,  ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType,
COALESCE(stle.FAErectQuantity,0) AS ErectQuantity,
COALESCE(stle.FAErectPercent,0) AS ErectPercent,
stle.FANotes,
stle.FARework


FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 62
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 


LEFT JOIN SteelErect stle
	ON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID


WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 62
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType,
COALESCE(stlb.FABoltOutQuantity,0) AS BoltoutQuantity,
COALESCE(stlb.FABoltOutPercent,0) AS BoltoutPercent, 
stlb.FANotes,
stlb.FARework


FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 63
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 


LEFT JOIN SteelBoltOut stlb
	ON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID
 

WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 63
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID



UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType,
COALESCE(stli.FAImpQuantity,0) AS ImpQuantity,
COALESCE(stli.FAImpPercent,0) AS ImpPercent, 
stli.FANotes,
stli.FARework


FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType =64
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 

LEFT JOIN SteelImp stli
	ON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID
 

WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 64
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID


UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID,  ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType,
COALESCE(stlw.FAWeldQuantity,0) AS WeldQuantity,
COALESCE(stlw.FAWeldPercent,0) AS WeldPercent,
stlw.FANotes,
stlw.FARework


FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 68
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 

LEFT JOIN SteelWeld stlw
	ON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID
 
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 68
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID


UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType,
COALESCE(stlsell.FASellQuantity,0) AS SellQuantity, 
'1' AS Percent, 
stlsell.FANotes,
stlsell.FARework

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 65
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 

    
LEFT JOIN SteelSell stlsell
	ON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID
 

WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 65
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID


UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType,
COALESCE(stld.DemoQuantity,0) AS DemoQuantity, 
'1' AS Percent, 
stld.DemoNotes,
0 AS Rework


FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 67
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 


LEFT JOIN SteelDemo stld
	ON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID
 
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 67
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID


UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID,  ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

at.ActivityType,
COALESCE(stlm.MiscQuantity,0) AS MiscQuantity, 
'1' AS Percent,
stlm.MiscNotes,
stlm.MiscRework


FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 96
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 


LEFT JOIN SteelMisc stlm
	ON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID
    
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_SubmissionID = :SubID
AND ss.ActivityType = 96
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.PSAActivityID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    <query-param name="SubID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetSettingPipeRFTPercent">
        <![CDATA[
        SELECT *
FROM SETTINGS
WHERE Label = 'CompleteForTestPercent'
        ]]>
    </sql-query>

    <sql-query name="GetSettingPipeRFTPercent__count">
        <![CDATA[
        select count(*) from (SELECT *
FROM SETTINGS
WHERE Label = 'CompleteForTestPercent') wmTempTable
        ]]>
    </sql-query>

    <sql-query name="UpdateSteelImpQuantity">
        <![CDATA[
        UPDATE `SteelImp` 
SET 

`FAImpQuantity`= :Quantity,
`FAImpPercent`= :Percent
WHERE `ID`= :RowID
        ]]>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Percent" type="java.math.BigDecimal"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateTrim">
        <![CDATA[
        UPDATE SubsTrim
SET
TrimSize = :Size,
TrimQuantity = :PlugQuantity,
TrimHandleType = :HandleType,
TrimInstrumentType = :InstType,
TrimDrawingNumber = :DrawingNumber,
TrimLineNumber = :LineNumber,
TrimSheetNumber = :SheetNumber,
TrimRework = :Rework,
TrimNotes = :Notes
WHERE ID = :RowId
        ]]>
    <query-param name="Size" type="java.math.BigDecimal"/>
    <query-param name="PlugQuantity" type="java.lang.Integer"/>
    <query-param name="HandleType" type="java.lang.String"/>
    <query-param name="InstType" type="java.lang.String"/>
    <query-param name="DrawingNumber" type="java.lang.String"/>
    <query-param name="LineNumber" type="java.lang.String"/>
    <query-param name="SheetNumber" type="java.lang.String"/>
    <query-param name="Rework" type="java.lang.Integer"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowId" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelShake">
        <![CDATA[
        SELECT stls.* 
FROM SteelShake stls
WHERE ID = :RowID

UNION ALL

SELECT stlsr.fk_OrgActivityId, stlsr.SubmissionID, stlsr.FAArea, stlsr.FAPieceNumber, stlsr.FAShakeQuantity, stlsr.FARework, stlsr.FANotes, stlsr.ActivityType, stlsr.FATimeInForm, stlsr.Rev, stlsr.TimeStamp
FROM SteelShakeREV stlsr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelShake__count">
        <![CDATA[
        select count(*) from (SELECT stls.* 
FROM SteelShake stls
WHERE ID = :RowID

UNION ALL

SELECT stlsr.fk_OrgActivityId, stlsr.SubmissionID, stlsr.FAArea, stlsr.FAPieceNumber, stlsr.FAShakeQuantity, stlsr.FARework, stlsr.FANotes, stlsr.ActivityType, stlsr.FATimeInForm, stlsr.Rev, stlsr.TimeStamp
FROM SteelShakeREV stlsr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSteelWeld">
        <![CDATA[
        UPDATE `SteelWeld` 
SET 
`FAArea`= :Area, 
`FAPieceNumber`= :Piece, 
`FAWeldQuantity`= :Quantity,
`FAWeldPercent`= :Percent,
`FARework`= :Rework, 
`FANotes`= :Notes 
WHERE `ID`= :RowID
        ]]>
    <query-param name="Area" type="java.lang.String"/>
    <query-param name="Piece" type="java.lang.String"/>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Percent" type="java.math.BigDecimal"/>
    <query-param name="Rework" type="java.lang.Character"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSettingCivilPunch">
        <![CDATA[
        UPDATE SETTINGS
SET `Value1`= :Value1 
WHERE `Label`='CivilSellPunchHoursPercent'
        ]]>
    <query-param name="Value1" type="java.math.BigDecimal"/>
    </sql-query>

    <sql-query name="GetActivityHistoryWeld">
        <![CDATA[
        SELECT sw.* 
FROM SubsWeld sw
WHERE ID = :RowID

UNION ALL

SELECT  swr.fk_OrgActivityId, swr.SubmissionID, 
swr.WeldSpool1, swr.WeldSpool2, swr.WeldDrawingNumber, swr.WeldLineNumber, swr.WeldSheetNumber, swr.WeldTimeInForm, swr.WeldLineSpec, swr.WeldNumber, swr.WeldStencil, swr.WeldSize, swr.WeldThickness, 
swr.WeldType, swr.WeldPosition, swr.WeldMaterial, swr.WeldProcedure, swr.WeldComplete, swr.WeldShared, swr.WeldPercentCompleteChoice, swr.WeldPercentCompleted, swr.WeldRework, swr.WeldNotes, 
swr.ActivityType, swr.Rev, swr.TimeStamp
FROM SubsWeldREV swr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryWeld__count">
        <![CDATA[
        select count(*) from (SELECT sw.* 
FROM SubsWeld sw
WHERE ID = :RowID

UNION ALL

SELECT  swr.fk_OrgActivityId, swr.SubmissionID, 
swr.WeldSpool1, swr.WeldSpool2, swr.WeldDrawingNumber, swr.WeldLineNumber, swr.WeldSheetNumber, swr.WeldTimeInForm, swr.WeldLineSpec, swr.WeldNumber, swr.WeldStencil, swr.WeldSize, swr.WeldThickness, 
swr.WeldType, swr.WeldPosition, swr.WeldMaterial, swr.WeldProcedure, swr.WeldComplete, swr.WeldShared, swr.WeldPercentCompleteChoice, swr.WeldPercentCompleted, swr.WeldRework, swr.WeldNotes, 
swr.ActivityType, swr.Rev, swr.TimeStamp
FROM SubsWeldREV swr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySupport">
        <![CDATA[
        SELECT ssu.* 
FROM SubsSupports ssu
WHERE ID = :RowID

UNION ALL

SELECT  ssur.fk_OrgActivityId, ssur.SubmissionID, 
ssur.SupportType, ssur.SupportPartNumber, ssur.SupportQuantity, ssur.SupportDrawingNumber, ssur.SupportLineNumber, ssur.SupportSheetNumber, ssur.SupportTimeInForm, ssur.SupportComplete, ssur.SupportShared, ssur.SupportPercentCompleted, ssur.SupportRework, ssur.SupportNotes,
ssur.ActivityType, ssur.Rev, ssur.TimeStamp
FROM SubsSupportsREV ssur
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySupport__count">
        <![CDATA[
        select count(*) from (SELECT ssu.* 
FROM SubsSupports ssu
WHERE ID = :RowID

UNION ALL

SELECT  ssur.fk_OrgActivityId, ssur.SubmissionID, 
ssur.SupportType, ssur.SupportPartNumber, ssur.SupportQuantity, ssur.SupportDrawingNumber, ssur.SupportLineNumber, ssur.SupportSheetNumber, ssur.SupportTimeInForm, ssur.SupportComplete, ssur.SupportShared, ssur.SupportPercentCompleted, ssur.SupportRework, ssur.SupportNotes,
ssur.ActivityType, ssur.Rev, ssur.TimeStamp
FROM SubsSupportsREV ssur
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryEquipFA">
        <![CDATA[
        SELECT efa.* 
FROM EquipFA efa
WHERE ID = :RowID

UNION

SELECT efar.fk_OrgID, efar.SubmissionID, efar.FABidID, efar.FATagNumber, efar.FAActivitySelect, efar.FAQuantity, efar.FAPercentComplete, efar.FARework, efar.FANotes, efar.ActivityType, efar.FATimeInForm, efar.Rev, efar.TimeStamp
FROM EquipFAREV efar
WHERE efar.fk_OrgID = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetActivityHistoryEquipFA__count">
        <![CDATA[
        select count(*) from (SELECT efa.* 
FROM EquipFA efa
WHERE ID = :RowID

UNION

SELECT efar.fk_OrgID, efar.SubmissionID, efar.FABidID, efar.FATagNumber, efar.FAActivitySelect, efar.FAQuantity, efar.FAPercentComplete, efar.FARework, efar.FANotes, efar.ActivityType, efar.FATimeInForm, efar.Rev, efar.TimeStamp
FROM EquipFAREV efar
WHERE efar.fk_OrgID = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.String"/>
    </sql-query>

    <sql-query name="UpdateSteelMiscQuantity">
        <![CDATA[
        UPDATE `SteelMisc` 
SET 

`MiscQuantity`= :Quantity
WHERE `ID`= :RowID
        ]]>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidWorkHistory">
        <![CDATA[
        SELECT ss.PSAActivityID, at.ActivityType, ss.ActivityRowId,
 
COALESCE((se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6),0) AS Quantity,
se.ErectionNotes AS Notes,
se.Rev,
se.ErectionRework AS Rework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN SubmissionStatusREV ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2

INNER JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11
	
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_ActivityStatus IN (5,12)

GROUP BY ss.PSAActivityID


UNION ALL


SELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,
 
sb.BoltUpInstalled AS Quantity,
sb.BoltUpNotes AS Notes,
sb.Rev,
sb.BoltUpRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN SubmissionStatusREV ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2

INNER JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled, sb.BoltUpNotes, sb.Rev, sb.BoltUpRework
			FROM SubsBoltUp sb) sb
	ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
	
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_ActivityStatus IN (5,12)

GROUP BY ss.PSAActivityID


UNION ALL


SELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,
 
sw.WeldInstalled AS Quantity,
sw.WeldNotes AS Notes,
sw.Rev,
sw.WeldRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN SubmissionStatusREV ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2

INNER JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled, sw.WeldNotes, sw.Rev, sw.WeldRework
			FROM SubsWeld sw) sw
	ON sw.ID = ss.ActivityRowId AND ss.ActivityType IN (22,23)
	
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_ActivityStatus IN (5,12)

GROUP BY ss.PSAActivityID


UNION ALL


SELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,
 
st.TrimInstalled AS Quantity,
st.TrimNotes AS Notes,  
st.Rev,
st.TrimRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN SubmissionStatusREV ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2

INNER JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled, st.TrimNotes, st.Rev, st.TrimRework
			FROM SubsTrim st) st
	ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)
	
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_ActivityStatus IN (5,12)

GROUP BY ss.PSAActivityID


UNION ALL


SELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,
 
ssu.SupportInstalled AS Quantity,
ssu.SupportNotes AS Notes,  
ssu.Rev,
ssu.SupportRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN SubmissionStatusREV ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2

INNER JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled, ssu.SupportNotes, ssu.Rev, ssu.SupportRework
			FROM SubsSupports ssu) ssu
	ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
	
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_ActivityStatus IN (5,12)

GROUP BY ss.PSAActivityID


UNION ALL


SELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,
 
d.DemoInstalled AS Quantity,
d.DemoNotes AS Notes, 
d.Rev,
'0',

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN SubmissionStatusREV ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2

INNER JOIN (SELECT d.ID, d.DemoQuantity AS DemoInstalled, d.DemoNotes, d.Rev
			FROM SubsDemo d) d
	ON d.ID = ss.ActivityRowId AND ss.ActivityType IN (50,51,52,53,54,59)
	
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_ActivityStatus IN (5,12)

GROUP BY ss.PSAActivityID


UNION ALL


SELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,
 
sm.MiscInstalled AS Quantity,
sm.MiscNotes AS Notes,
sm.Rev,
sm.MiscRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN SubmissionStatusREV ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2

INNER JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled, sm.MiscNotes, sm.Rev, sm.MiscRework
			FROM SubsMisc sm) sm
	ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91
	
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_ActivityStatus IN (5,12)

GROUP BY ss.PSAActivityID


UNION ALL


SELECT steR.PSAActivityID, at.ActivityType,  steR.ActivityRowId,
 
1 AS Quantity,
steR.TestingNotes AS Notes,
steR.Rev,
steR.TestingRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, ssr.TimeStamp AS ReviewedTime 

FROM trackerDetails td

	LEFT JOIN (SELECT ss.PSAActivityID, ss.fk_SubmissionId, ss.ActivityRowId,
				 ss.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework
			FROM SubsTesting ste
            INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 41 AND ss.fk_ActivityStatus IN (5,12)
			) steR
	ON steR.TestingTestPackageNumber = td.TestPackageNumber AND steR.ActivityType = 41 AND td.ECT != 'D'

	LEFT JOIN PSA.REF_ActivityTypes at
		ON at.ID = steR.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionID = steR.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
    LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp, ssr.fk_ActivityStatus
				FROM SubmissionStatusREV ssr
                WHERE ssr.fk_ActivityStatus = 2
                GROUP BY fk_PSAActivityID) ssr
		ON ssr.fk_PSAActivityID = steR.PSAActivityID 
WHERE td.BidID = :BidID
AND steR.PSAActivityID IS NOT NULL

UNION ALL


SELECT steH.PSAActivityID, at.ActivityType,  steH.ActivityRowId,
 
1 AS Quantity,
steH.TestingNotes AS Notes,
steH.Rev,
steH.TestingRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, ssr.TimeStamp AS ReviewedTime 

FROM trackerDetails td

	LEFT JOIN (SELECT ss.PSAActivityID, ss.fk_SubmissionId, ss.ActivityRowId, 
				 ss.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework
				FROM `Job1111`.SubsTesting ste
					INNER JOIN `Job1111`.SubmissionStatus ss
						ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 42 AND ss.fk_ActivityStatus IN (5,12) 
				) steH
		ON steH.TestingTestPackageNumber = td.TestPackageNumber AND steH.ActivityType = 42 AND td.ECT != 'D' 
	
    LEFT JOIN PSA.REF_ActivityTypes at
		ON at.ID = steH.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionID = steH.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
	LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp, ssr.fk_ActivityStatus
				FROM SubmissionStatusREV ssr
                WHERE ssr.fk_ActivityStatus = 2
                GROUP BY fk_PSAActivityID) ssr
		ON ssr.fk_PSAActivityID = steH.PSAActivityID 
        
WHERE td.BidID = :BidID
AND steH.PSAActivityID IS NOT NULL


UNION ALL


SELECT steC.PSAActivityID, at.ActivityType,  steC.ActivityRowId,
 
1 AS Quantity,
steC.TestingNotes AS Notes,
steC.Rev,
steC.TestingRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, ssr.TimeStamp AS ReviewedTime 

FROM trackerDetails td

	LEFT JOIN (SELECT ss.PSAActivityID, ss.fk_SubmissionId, ss.ActivityRowId,
				 ss.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework
			FROM SubsTesting ste
            INNER JOIN `Job1111`.SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 43 AND ss.fk_ActivityStatus IN (5,12)
			) steC
		ON steC.TestingTestPackageNumber = td.TestPackageNumber AND steC.ActivityType = 43 AND td.ECT != 'D'

	LEFT JOIN PSA.REF_ActivityTypes at
		ON at.ID = steC.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionID = steC.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
    LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp, ssr.fk_ActivityStatus
				FROM SubmissionStatusREV ssr
                WHERE ssr.fk_ActivityStatus = 2
                GROUP BY fk_PSAActivityID) ssr
		ON ssr.fk_PSAActivityID = steC.PSAActivityID 
WHERE td.BidID = :BidID
AND steC.PSAActivityID IS NOT NULL
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidWorkHistory__count">
        <![CDATA[
        select count(*) from (SELECT ss.PSAActivityID, at.ActivityType, ss.ActivityRowId,
 
COALESCE((se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6),0) AS Quantity,
se.ErectionNotes AS Notes,
se.Rev,
se.ErectionRework AS Rework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN SubmissionStatusREV ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2

INNER JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11
	
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_ActivityStatus IN (5,12)

GROUP BY ss.PSAActivityID


UNION ALL


SELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,
 
sb.BoltUpInstalled AS Quantity,
sb.BoltUpNotes AS Notes,
sb.Rev,
sb.BoltUpRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN SubmissionStatusREV ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2

INNER JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled, sb.BoltUpNotes, sb.Rev, sb.BoltUpRework
			FROM SubsBoltUp sb) sb
	ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
	
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_ActivityStatus IN (5,12)

GROUP BY ss.PSAActivityID


UNION ALL


SELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,
 
sw.WeldInstalled AS Quantity,
sw.WeldNotes AS Notes,
sw.Rev,
sw.WeldRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN SubmissionStatusREV ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2

INNER JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled, sw.WeldNotes, sw.Rev, sw.WeldRework
			FROM SubsWeld sw) sw
	ON sw.ID = ss.ActivityRowId AND ss.ActivityType IN (22,23)
	
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_ActivityStatus IN (5,12)

GROUP BY ss.PSAActivityID


UNION ALL


SELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,
 
st.TrimInstalled AS Quantity,
st.TrimNotes AS Notes,  
st.Rev,
st.TrimRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN SubmissionStatusREV ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2

INNER JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled, st.TrimNotes, st.Rev, st.TrimRework
			FROM SubsTrim st) st
	ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)
	
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_ActivityStatus IN (5,12)

GROUP BY ss.PSAActivityID


UNION ALL


SELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,
 
ssu.SupportInstalled AS Quantity,
ssu.SupportNotes AS Notes,  
ssu.Rev,
ssu.SupportRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN SubmissionStatusREV ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2

INNER JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled, ssu.SupportNotes, ssu.Rev, ssu.SupportRework
			FROM SubsSupports ssu) ssu
	ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
	
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_ActivityStatus IN (5,12)

GROUP BY ss.PSAActivityID


UNION ALL


SELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,
 
d.DemoInstalled AS Quantity,
d.DemoNotes AS Notes, 
d.Rev,
'0',

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN SubmissionStatusREV ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2

INNER JOIN (SELECT d.ID, d.DemoQuantity AS DemoInstalled, d.DemoNotes, d.Rev
			FROM SubsDemo d) d
	ON d.ID = ss.ActivityRowId AND ss.ActivityType IN (50,51,52,53,54,59)
	
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_ActivityStatus IN (5,12)

GROUP BY ss.PSAActivityID


UNION ALL


SELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,
 
sm.MiscInstalled AS Quantity,
sm.MiscNotes AS Notes,
sm.Rev,
sm.MiscRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime

FROM SubmissionStatus ss

LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN SubmissionStatusREV ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2

INNER JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled, sm.MiscNotes, sm.Rev, sm.MiscRework
			FROM SubsMisc sm) sm
	ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91
	
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.fk_ActivityStatus IN (5,12)

GROUP BY ss.PSAActivityID


UNION ALL


SELECT steR.PSAActivityID, at.ActivityType,  steR.ActivityRowId,
 
1 AS Quantity,
steR.TestingNotes AS Notes,
steR.Rev,
steR.TestingRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, ssr.TimeStamp AS ReviewedTime 

FROM trackerDetails td

	LEFT JOIN (SELECT ss.PSAActivityID, ss.fk_SubmissionId, ss.ActivityRowId,
				 ss.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework
			FROM SubsTesting ste
            INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 41 AND ss.fk_ActivityStatus IN (5,12)
			) steR
	ON steR.TestingTestPackageNumber = td.TestPackageNumber AND steR.ActivityType = 41 AND td.ECT != 'D'

	LEFT JOIN PSA.REF_ActivityTypes at
		ON at.ID = steR.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionID = steR.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
    LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp, ssr.fk_ActivityStatus
				FROM SubmissionStatusREV ssr
                WHERE ssr.fk_ActivityStatus = 2
                GROUP BY fk_PSAActivityID) ssr
		ON ssr.fk_PSAActivityID = steR.PSAActivityID 
WHERE td.BidID = :BidID
AND steR.PSAActivityID IS NOT NULL

UNION ALL


SELECT steH.PSAActivityID, at.ActivityType,  steH.ActivityRowId,
 
1 AS Quantity,
steH.TestingNotes AS Notes,
steH.Rev,
steH.TestingRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, ssr.TimeStamp AS ReviewedTime 

FROM trackerDetails td

	LEFT JOIN (SELECT ss.PSAActivityID, ss.fk_SubmissionId, ss.ActivityRowId, 
				 ss.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework
				FROM `Job1111`.SubsTesting ste
					INNER JOIN `Job1111`.SubmissionStatus ss
						ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 42 AND ss.fk_ActivityStatus IN (5,12) 
				) steH
		ON steH.TestingTestPackageNumber = td.TestPackageNumber AND steH.ActivityType = 42 AND td.ECT != 'D' 
	
    LEFT JOIN PSA.REF_ActivityTypes at
		ON at.ID = steH.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionID = steH.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
	LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp, ssr.fk_ActivityStatus
				FROM SubmissionStatusREV ssr
                WHERE ssr.fk_ActivityStatus = 2
                GROUP BY fk_PSAActivityID) ssr
		ON ssr.fk_PSAActivityID = steH.PSAActivityID 
        
WHERE td.BidID = :BidID
AND steH.PSAActivityID IS NOT NULL


UNION ALL


SELECT steC.PSAActivityID, at.ActivityType,  steC.ActivityRowId,
 
1 AS Quantity,
steC.TestingNotes AS Notes,
steC.Rev,
steC.TestingRework,

CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, ssr.TimeStamp AS ReviewedTime 

FROM trackerDetails td

	LEFT JOIN (SELECT ss.PSAActivityID, ss.fk_SubmissionId, ss.ActivityRowId,
				 ss.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework
			FROM SubsTesting ste
            INNER JOIN `Job1111`.SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 43 AND ss.fk_ActivityStatus IN (5,12)
			) steC
		ON steC.TestingTestPackageNumber = td.TestPackageNumber AND steC.ActivityType = 43 AND td.ECT != 'D'

	LEFT JOIN PSA.REF_ActivityTypes at
		ON at.ID = steC.ActivityType
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionID = steC.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
	LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
    LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp, ssr.fk_ActivityStatus
				FROM SubmissionStatusREV ssr
                WHERE ssr.fk_ActivityStatus = 2
                GROUP BY fk_PSAActivityID) ssr
		ON ssr.fk_PSAActivityID = steC.PSAActivityID 
WHERE td.BidID = :BidID
AND steC.PSAActivityID IS NOT NULL) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetDrawingsByTestPackage">
        <![CDATA[
        SELECT DISTINCT td.EngDrawingNumber, td.SheetNumber, td.LineNumber
FROM trackerDetails td
WHERE td.TestPackageNumber = :TestPackage
ORDER BY td.EngDrawingNumber, td.SheetNumber
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetDrawingsByTestPackage__count">
        <![CDATA[
        select count(*) from (SELECT DISTINCT td.EngDrawingNumber, td.SheetNumber, td.LineNumber
FROM trackerDetails td
WHERE td.TestPackageNumber = :TestPackage
ORDER BY td.EngDrawingNumber, td.SheetNumber) wmTempTable
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    </sql-query>

    <sql-query name="UpdateMisc">
        <![CDATA[
        UPDATE SubsMisc
SET
MiscDrawingNumber = :DrawingNumber,
MiscLineNumber = :LineNumber,
MiscSheetNumber = :SheetNumber,
MiscQuantity = :Quantity,
MiscRework = :Rework,
MiscNotes = :Notes
WHERE ID = :RowID
        ]]>
    <query-param name="DrawingNumber" type="java.lang.String"/>
    <query-param name="LineNumber" type="java.lang.String"/>
    <query-param name="SheetNumber" type="java.lang.String"/>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Rework" type="java.lang.Integer"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSteelMisc">
        <![CDATA[
        UPDATE `SteelMisc` 
SET 
`MiscArea`= :Area, 
`MiscPieceNumber`= :Piece, 
`MiscQuantity`= :Quantity, 
`MiscRework`= :Rework, 
`MiscNotes`= :Notes 
WHERE `ID`= :RowID
        ]]>
    <query-param name="Area" type="java.lang.String"/>
    <query-param name="Piece" type="java.lang.String"/>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Rework" type="java.lang.Byte"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSteelDemoQuantity">
        <![CDATA[
        UPDATE `SteelDemo` 
SET 

`DemoQuantity`= :Quantity
WHERE `ID`= :RowID
        ]]>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSteelDemo">
        <![CDATA[
        UPDATE `SteelDemo` 
SET 
`DemoArea`= :Area, 
`DemoSteelType`= :SteelType, 
`DemoSize`= :Size,
`DemoQuantity`= :Quantity,
`DemoNotes`= :Notes
WHERE `ID`= :RowID
        ]]>
    <query-param name="Area" type="java.lang.String"/>
    <query-param name="SteelType" type="java.lang.Integer"/>
    <query-param name="Size" type="java.lang.String"/>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateBoltupQuantity">
        <![CDATA[
        UPDATE SubsBoltUp 
SET BoltUpQuantity = :BoltUpQuantity
WHERE ID= :RowID
        ]]>
    <query-param name="BoltUpQuantity" type="java.lang.Integer"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryBoltup">
        <![CDATA[
        SELECT sb.* 
FROM SubsBoltUp sb
WHERE ID = :RowID

UNION ALL

SELECT sbr.fk_OrgActivityId, sbr.SubmissionID, sbr.BoltUpSpool1, sbr.BoltUpSpool2, sbr.BoltUpDrawingNumber, sbr.BoltUpLineNumber, sbr.BoltUpSheetNumber, sbr.BoltUpTimeInForm, 
sbr.BoltUpSize, sbr.BoltUpQuantity, sbr.BoltUpRework, sbr.BoltUpNotes, sbr.ActivityType, sbr.Rev, sbr.TimeStamp
FROM SubsBoltUpREV sbr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryBoltup__count">
        <![CDATA[
        select count(*) from (SELECT sb.* 
FROM SubsBoltUp sb
WHERE ID = :RowID

UNION ALL

SELECT sbr.fk_OrgActivityId, sbr.SubmissionID, sbr.BoltUpSpool1, sbr.BoltUpSpool2, sbr.BoltUpDrawingNumber, sbr.BoltUpLineNumber, sbr.BoltUpSheetNumber, sbr.BoltUpTimeInForm, 
sbr.BoltUpSize, sbr.BoltUpQuantity, sbr.BoltUpRework, sbr.BoltUpNotes, sbr.ActivityType, sbr.Rev, sbr.TimeStamp
FROM SubsBoltUpREV sbr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetReportDPRSteelCondensed">
        <![CDATA[
        SELECT Area, PieceNumber, 
sum(ShakeQuantity) AS ShakeQuantity, 
sum(ErectQuantity) AS ErectQuantity, 
sum(BoltoutQuantity) AS BoltoutQuantity, 
sum(ImpQuantity) AS ImpQuantity, 
sum(WeldQuantity) AS WeldQuantity, 
sum(SellQuantity) AS SellQuantity, 
sum(DemoQuantity) AS DemoQuantity, 
sum(MiscQuantity) AS MiscQuantity, 
ReceivedTime 
FROM(SELECT  
stls.FAArea AS Area, stls.FAPieceNumber AS PieceNumber, 
sum(COALESCE(stls.FAShakeQuantity,0)) AS ShakeQuantity,
0 AS ErectQuantity,
0 AS BoltoutQuantity,
0 AS ImpQuantity,
0 AS WeldQuantity,
0 AS SellQuantity,
0 AS DemoQuantity,
0 AS MiscQuantity,
sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelShake stls
	ON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate
GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   



UNION 



SELECT  
stle.FAArea AS Area, stle.FAPieceNumber AS PieceNumber,
0,
TRUNCATE(sum(COALESCE(stle.FAErectQuantity * stle.FAErectPercent,0)),2),
0,0,0,0,0,0,
sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelErect stle
	ON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate

GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   



UNION 



SELECT  
stlb.FAArea AS Area, stlb.FAPieceNumber AS PieceNumber,
0,0,
TRUNCATE(sum(COALESCE(stlb.FABoltoutQuantity * stlb.FABoltoutPercent,0)),2),
0,0,0,0,0,
sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelBoltOut stlb
	ON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate

GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   



UNION 



SELECT  
stli.FAArea AS Area, stli.FAPieceNumber AS PieceNumber,
0,0,0,
TRUNCATE(sum(COALESCE(stli.FAImpQuantity * stli.FAImpPercent,0)),2),
0,0,0,0,
sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelImp stli
	ON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate

GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   



UNION 



SELECT  
stlw.FAArea AS Area, stlw.FAPieceNumber AS PieceNumber,
0,0,0,0,
TRUNCATE(sum(COALESCE(stlw.FAWeldQuantity * stlw.FAWeldPercent,0)),2),
0,0,0,
sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelWeld stlw
	ON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate

GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   



UNION 



SELECT  
stlsell.FAArea AS Area, stlsell.FAPieceNumber AS PieceNumber,
0,0,0,0,0,
TRUNCATE(sum(COALESCE(stlsell.FASellQuantity,0)),2),
0,0,
sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelSell stlsell
	ON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate

GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   



UNION 



SELECT  
stld.DemoArea AS Area, 0 AS PieceNumber,
0,0,0,0,0,0,
TRUNCATE(sum(COALESCE(stld.DemoQuantity,0)),2),
0,
sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelDemo stld
	ON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate

GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   



UNION 



SELECT  
stlm.MiscArea AS Area, stlm.MiscPieceNumber AS PieceNumber,
0,0,0,0,0,0,0,
TRUNCATE(sum(COALESCE(stlm.MiscQuantity,0)),2),

sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelMisc stlm
	ON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate

GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)
) t
GROUP BY t.Area, t.PieceNumber, Date(t.ReceivedTime)
        ]]>
    <query-param name="PM" type="java.lang.String"/>
    <query-param name="ConstM" type="java.lang.String"/>
    <query-param name="SiteM" type="java.lang.String"/>
    <query-param name="AreaM" type="java.lang.String"/>
    <query-param name="Super" type="java.lang.String"/>
    <query-param name="GF" type="java.lang.String"/>
    <query-param name="Foreman" type="java.lang.String"/>
    <query-param name="StartDate" type="java.sql.Date"/>
    <query-param name="EndDate" type="java.sql.Date"/>
    </sql-query>

    <sql-query name="GetReportDPRSteelCondensed__count">
        <![CDATA[
        select count(*) from (SELECT Area, PieceNumber, 
sum(ShakeQuantity) AS ShakeQuantity, 
sum(ErectQuantity) AS ErectQuantity, 
sum(BoltoutQuantity) AS BoltoutQuantity, 
sum(ImpQuantity) AS ImpQuantity, 
sum(WeldQuantity) AS WeldQuantity, 
sum(SellQuantity) AS SellQuantity, 
sum(DemoQuantity) AS DemoQuantity, 
sum(MiscQuantity) AS MiscQuantity, 
ReceivedTime 
FROM(SELECT  
stls.FAArea AS Area, stls.FAPieceNumber AS PieceNumber, 
sum(COALESCE(stls.FAShakeQuantity,0)) AS ShakeQuantity,
0 AS ErectQuantity,
0 AS BoltoutQuantity,
0 AS ImpQuantity,
0 AS WeldQuantity,
0 AS SellQuantity,
0 AS DemoQuantity,
0 AS MiscQuantity,
sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelShake stls
	ON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate
GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   



UNION 



SELECT  
stle.FAArea AS Area, stle.FAPieceNumber AS PieceNumber,
0,
TRUNCATE(sum(COALESCE(stle.FAErectQuantity * stle.FAErectPercent,0)),2),
0,0,0,0,0,0,
sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelErect stle
	ON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate

GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   



UNION 



SELECT  
stlb.FAArea AS Area, stlb.FAPieceNumber AS PieceNumber,
0,0,
TRUNCATE(sum(COALESCE(stlb.FABoltoutQuantity * stlb.FABoltoutPercent,0)),2),
0,0,0,0,0,
sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelBoltOut stlb
	ON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate

GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   



UNION 



SELECT  
stli.FAArea AS Area, stli.FAPieceNumber AS PieceNumber,
0,0,0,
TRUNCATE(sum(COALESCE(stli.FAImpQuantity * stli.FAImpPercent,0)),2),
0,0,0,0,
sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelImp stli
	ON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate

GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   



UNION 



SELECT  
stlw.FAArea AS Area, stlw.FAPieceNumber AS PieceNumber,
0,0,0,0,
TRUNCATE(sum(COALESCE(stlw.FAWeldQuantity * stlw.FAWeldPercent,0)),2),
0,0,0,
sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelWeld stlw
	ON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate

GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   



UNION 



SELECT  
stlsell.FAArea AS Area, stlsell.FAPieceNumber AS PieceNumber,
0,0,0,0,0,
TRUNCATE(sum(COALESCE(stlsell.FASellQuantity,0)),2),
0,0,
sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelSell stlsell
	ON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate

GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   



UNION 



SELECT  
stld.DemoArea AS Area, 0 AS PieceNumber,
0,0,0,0,0,0,
TRUNCATE(sum(COALESCE(stld.DemoQuantity,0)),2),
0,
sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelDemo stld
	ON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate

GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   



UNION 



SELECT  
stlm.MiscArea AS Area, stlm.MiscPieceNumber AS PieceNumber,
0,0,0,0,0,0,0,
TRUNCATE(sum(COALESCE(stlm.MiscQuantity,0)),2),

sd.ReceivedTime

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
JOIN SteelMisc stlm
	ON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID 

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate

GROUP BY Area, PieceNumber, Date(sd.ReceivedTime)
) t
GROUP BY t.Area, t.PieceNumber, Date(t.ReceivedTime)) wmTempTable
        ]]>
    <query-param name="PM" type="java.lang.String"/>
    <query-param name="ConstM" type="java.lang.String"/>
    <query-param name="SiteM" type="java.lang.String"/>
    <query-param name="AreaM" type="java.lang.String"/>
    <query-param name="Super" type="java.lang.String"/>
    <query-param name="GF" type="java.lang.String"/>
    <query-param name="Foreman" type="java.lang.String"/>
    <query-param name="StartDate" type="java.sql.Date"/>
    <query-param name="EndDate" type="java.sql.Date"/>
    </sql-query>

    <sql-query name="UpdateSteelBoltout">
        <![CDATA[
        UPDATE `SteelBoltOut` 
SET 
`FAArea`= :Area, 
`FAPieceNumber`= :Piece, 
`FABoltOutQuantity`= :Quantity,
`FABoltOutPercent`= :Percent,
`FARework`= :Rework, 
`FANotes`= :Notes 
WHERE `ID`= :RowID
        ]]>
    <query-param name="Area" type="java.lang.String"/>
    <query-param name="Piece" type="java.lang.String"/>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Percent" type="java.math.BigDecimal"/>
    <query-param name="Rework" type="java.lang.Byte"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetUniqueDrawingNumber">
        <![CDATA[
        SELECT DISTINCT td.EngDrawingNumber 
FROM trackerDetails td
        ]]>
    </sql-query>

    <sql-query name="GetUniqueDrawingNumber__count">
        <![CDATA[
        select count(*) from (SELECT DISTINCT td.EngDrawingNumber 
FROM trackerDetails td) wmTempTable
        ]]>
    </sql-query>

    <sql-query name="UpdateSubDetails">
        <![CDATA[
        UPDATE SubsDetails
SET
Temperature = :Temp,
Precipitation = :Precipitation,
Wind = :Wind
WHERE SubmissionID = :SubmissionID
        ]]>
    <query-param name="Temp" type="java.lang.String"/>
    <query-param name="Precipitation" type="java.lang.String"/>
    <query-param name="Wind" type="java.lang.String"/>
    <query-param name="SubmissionID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UnLockSSActivity">
        <![CDATA[
        UPDATE SubmissionStatus ss
SET ss.LockField = null
WHERE ss.PSAActivityID = :PSAActivityID
        ]]>
    <query-param name="PSAActivityID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetSettingSteelImpPercent">
        <![CDATA[
        SELECT * 
FROM SETTINGS
WHERE Label = 'SteelImpHoursPercent'
        ]]>
    </sql-query>

    <sql-query name="GetSettingSteelImpPercent__count">
        <![CDATA[
        select count(*) from (SELECT * 
FROM SETTINGS
WHERE Label = 'SteelImpHoursPercent') wmTempTable
        ]]>
    </sql-query>

    <sql-query name="GetBidActivityMatchesByTestPackageCivil">
        <![CDATA[
        SELECT ctd.UID, ctd.BidID, ctd.EWONumber, ctd.Scope, ctd.Phase, ctd.Stage, ctd.TestPackageNumber, ctd.CostCode, ctd.P6ID, ctd.AssignedContractor, ctd.Area, ctd.Location, ctd.Structure, ctd.Grouping, 
ctd.FoundationDescription, ctd.CU, ctd.P6Description, ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DrawingRev, ctd.DetailDrawingNumber, ctd.DetailRev, ctd.DetailName, ctd.Description, ctd.ActivityType, 
ctd.ActivitySubType, ctd.System, ctd.Service, ctd.TakeOffQuantity, ctd.QuantityUnit, ctd.EstimatedHours, 
ctd.WBS1, ctd.WBS2, ctd.WBS3, ctd.WBS4, ctd.WBS5, ctd.WBS6, ctd.WBS7, ctd.WBS8, ctd.WBS9, ctd.WBS10, 


count(ctd.BidID) AS SellPunchCount,
sum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,
sum(COALESCE(ercs.InstalledSellPunch,0)) AS SellPunchInstalled,
sum(IF(ercs.InstalledSellPunch = 1, 
/*TRUE*/
(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')),
/*FALSE*/
0
)) AS EarnedSellPunchHours,

ctd.Rev, ctd.TimeStamp

FROM CivilTrackerDetails ctd

LEFT JOIN CivilSellPackage csp
	ON csp.SellTestPackageNumber = ctd.TestPackageNumber

LEFT JOIN (SELECT csp.SellTestPackageNumber, 1 AS InstalledSellPunch
			FROM CivilSellPackage csp
			INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = csp.ID AND ss.ActivityType = 72 AND ss.fk_ActivityStatus IN (5,12)) ercs
    ON ercs.SellTestPackageNumber = ctd.TestPackageNumber

WHERE ctd.TestPackageNumber = :TestPackage
GROUP BY BidID
ORDER By ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DetailDrawingNumber, ctd.DetailName, ctd.Description
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetBidActivityMatchesByTestPackageCivil__count">
        <![CDATA[
        select count(*) from (SELECT ctd.UID, ctd.BidID, ctd.EWONumber, ctd.Scope, ctd.Phase, ctd.Stage, ctd.TestPackageNumber, ctd.CostCode, ctd.P6ID, ctd.AssignedContractor, ctd.Area, ctd.Location, ctd.Structure, ctd.Grouping, 
ctd.FoundationDescription, ctd.CU, ctd.P6Description, ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DrawingRev, ctd.DetailDrawingNumber, ctd.DetailRev, ctd.DetailName, ctd.Description, ctd.ActivityType, 
ctd.ActivitySubType, ctd.System, ctd.Service, ctd.TakeOffQuantity, ctd.QuantityUnit, ctd.EstimatedHours, 
ctd.WBS1, ctd.WBS2, ctd.WBS3, ctd.WBS4, ctd.WBS5, ctd.WBS6, ctd.WBS7, ctd.WBS8, ctd.WBS9, ctd.WBS10, 


count(ctd.BidID) AS SellPunchCount,
sum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,
sum(COALESCE(ercs.InstalledSellPunch,0)) AS SellPunchInstalled,
sum(IF(ercs.InstalledSellPunch = 1, 
/*TRUE*/
(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')),
/*FALSE*/
0
)) AS EarnedSellPunchHours,

ctd.Rev, ctd.TimeStamp

FROM CivilTrackerDetails ctd

LEFT JOIN CivilSellPackage csp
	ON csp.SellTestPackageNumber = ctd.TestPackageNumber

LEFT JOIN (SELECT csp.SellTestPackageNumber, 1 AS InstalledSellPunch
			FROM CivilSellPackage csp
			INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = csp.ID AND ss.ActivityType = 72 AND ss.fk_ActivityStatus IN (5,12)) ercs
    ON ercs.SellTestPackageNumber = ctd.TestPackageNumber

WHERE ctd.TestPackageNumber = :TestPackage
GROUP BY BidID
ORDER By ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DetailDrawingNumber, ctd.DetailName, ctd.Description) wmTempTable
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetALLTotalsByTestPackage">
        <![CDATA[
        SELECT *
FROM CacheTable_StatsByTestPackage
        ]]>
    </sql-query>

    <sql-query name="GetALLTotalsByTestPackage__count">
        <![CDATA[
        select count(*) from (SELECT *
FROM CacheTable_StatsByTestPackage) wmTempTable
        ]]>
    </sql-query>

    <sql-query name="UpdateSettingCivilWork">
        <![CDATA[
        UPDATE SETTINGS
SET `Value1`= :Value1 
WHERE `Label`='CivilWorkHoursPercent'
        ]]>
    <query-param name="Value1" type="java.math.BigDecimal"/>
    </sql-query>

    <sql-query name="GetPSAActivityByUid">
        <![CDATA[
        SELECT ss.*, at.ActivityType AS ActivityTypeName, sd.ReceivedTime, sd.UserFirstName, sd.UserLastName, CONCAT(sd.UserFirstName, " ", sd.UserLastName) AS NameFull, ats.Status,
IF(ss.ActivityType IN (10,11,20,21,22,23,30,31,32,33,34,35,39,40,41,42,43,50,51,52,53,54,59,90,91,92,93),'PIPE',
IF(ss.ActivityType IN (60,61,62,63,64,65,66,67,68,96),'STEEL',
IF(ss.ActivityType IN (70,71,72,77,97),'CIVIL',
IF(ss.ActivityType IN (80,81,82,83,84,85,98),'EQUIP.',''
)))) AS Craft
FROM SubmissionStatus ss
	left JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	JOIN PSA.REF_ActivityTypes at
		ON  at.ID = ss.ActivityType
	JOIN PSA.REF_ActivityStatuses ats
	    ON ats.ID = ss.fk_ActivityStatus
WHERE ss.ActivityType != 0
AND ss.fk_ActivityStatus in (1,4,6,8,10)
AND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)
ORDER BY ss.PSAActivityID DESC
        ]]>
    <query-param name="SuperID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetPSAActivityByUid__count">
        <![CDATA[
        select count(*) from (SELECT ss.*, at.ActivityType AS ActivityTypeName, sd.ReceivedTime, sd.UserFirstName, sd.UserLastName, CONCAT(sd.UserFirstName, " ", sd.UserLastName) AS NameFull, ats.Status,
IF(ss.ActivityType IN (10,11,20,21,22,23,30,31,32,33,34,35,39,40,41,42,43,50,51,52,53,54,59,90,91,92,93),'PIPE',
IF(ss.ActivityType IN (60,61,62,63,64,65,66,67,68,96),'STEEL',
IF(ss.ActivityType IN (70,71,72,77,97),'CIVIL',
IF(ss.ActivityType IN (80,81,82,83,84,85,98),'EQUIP.',''
)))) AS Craft
FROM SubmissionStatus ss
	left JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	JOIN PSA.REF_ActivityTypes at
		ON  at.ID = ss.ActivityType
	JOIN PSA.REF_ActivityStatuses ats
	    ON ats.ID = ss.fk_ActivityStatus
WHERE ss.ActivityType != 0
AND ss.fk_ActivityStatus in (1,4,6,8,10)
AND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)
ORDER BY ss.PSAActivityID DESC) wmTempTable
        ]]>
    <query-param name="SuperID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetUniqueLineNumbers">
        <![CDATA[
        SELECT DISTINCT td.LineNumber 
FROM trackerDetails td
        ]]>
    </sql-query>

    <sql-query name="GetUniqueLineNumbers__count">
        <![CDATA[
        select count(*) from (SELECT DISTINCT td.LineNumber 
FROM trackerDetails td) wmTempTable
        ]]>
    </sql-query>

    <sql-query name="GetQuantitiesTestPackageSteel">
        <![CDATA[
        SELECT std.BidID, std.TestPackageNumber,

### Count ####
sum(std.TakeOffQuantity) AS SellPunchCount,

### Hours ####
sum(std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')) AS SellPunchHours,

### Installed Count ###
sum(COALESCE(er.InstalledSell,0)) AS InstalledSell,

### Earned Hours ###
sum(er.EarnedSellHours) AS EarnedSellPunchHours,

### Loose Hours ###
sum(
(
IF(std.ActivityType = "E"
,/*TRUE*/
(std.SteelHours * (1-(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')))
,/*FALSE*/
std.SteelHours)
) 
- COALESCE(er.EarnedFAHours,0)
) AS LooseHours

FROM (SELECT BidID, TestPackageNumber, ActivityType, 
		sum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,
        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10
		FROM SteelTrackerDetails 
		GROUP BY BidID) std
        
LEFT JOIN SubmissionStatus ss
	ON ss.fk_BidIDAssigned = std.BidID AND ss.ActivityType = 65 AND ss.fk_ActivityStatus IN (5,12)
        
### Earned/Installed Columns ###
LEFT JOIN (SELECT BidID, 

### Installed Quantities ###
sum(COALESCE(stlsell.FASellQuantity,0)) AS InstalledSell,

### Earned Hour Quantities ###
sum(IF((COALESCE(stlsell.FASellQuantity,0) + 
(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelSell 
			ON ss2.ActivityType = 65 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 65
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/
/*TRUE*/ 
GREATEST((COALESCE(std.TakeOffQuantity,0) - 
(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelSell 
			ON ss2.ActivityType = 65 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 65
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID))
,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity),
/*FALSE*/
(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity) * stlsell.FASellQuantity,0))
)) AS EarnedSellHours,

(
sum(IF((COALESCE(stls.FAShakeQuantity,0) + 
(SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelShake 
			ON ss2.ActivityType = 61 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 61
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/
/*TRUE*/ 
GREATEST((COALESCE(std.TakeOffQuantity,0) - 
((SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelShake 
			ON ss2.ActivityType = 61 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 61
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)))
,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity),
/*FALSE*/
(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity) * stls.FAShakeQuantity,0))
)) 
+
sum(IF((COALESCE(stle.FAErectQuantity,0) * COALESCE(stle.FAErectPercent,0) + 
(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelErect 
			ON ss2.ActivityType = 62 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 62
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/
/*TRUE*/ 
GREATEST((COALESCE(std.TakeOffQuantity,0) - 
(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelErect 
			ON ss2.ActivityType = 62 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 62
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID))
,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity),
/*FALSE*/
(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity) * (stle.FAErectQuantity * stle.FAErectPercent),0))
)) 
+
sum(IF((COALESCE(stlb.FABoltOutQuantity,0) * COALESCE(stlb.FABoltOutPercent,0) + 
(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelBoltOut 
			ON ss2.ActivityType = 63 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 63
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/
/*TRUE*/ 
GREATEST((COALESCE(std.TakeOffQuantity,0) - 
(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelBoltOut 
			ON ss2.ActivityType = 63 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 63
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID))
,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity),
/*FALSE*/
(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity) * (stlb.FABoltOutQuantity * stlb.FABoltOutPercent),0))
)) 
+
sum(IF((COALESCE(stli.FAImpQuantity,0) * COALESCE(stli.FAImpPercent,0) + 
(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelImp 
			ON ss2.ActivityType = 64 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 64
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/
/*TRUE*/ 
GREATEST((COALESCE(std.TakeOffQuantity,0) - 
(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelImp 
			ON ss2.ActivityType = 64 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 64
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID))
,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity),
/*FALSE*/
(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity) * (stli.FAImpQuantity * stli.FAImpPercent),0))
)) 
+
sum(IF((COALESCE(stlw.FAWeldQuantity,0) * COALESCE(stlw.FAWeldPercent,0) + 
(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelWeld 
			ON ss2.ActivityType = 68 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 68
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.WeldCount,/*Is New + cumlitive quantity greater then WeldCount*/
/*TRUE*/ 
GREATEST((COALESCE(std.WeldCount,0) - 
(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelWeld 
			ON ss2.ActivityType = 68 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 68
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID))
,0) * (std.WeldHours / std.WeldCount),
/*FALSE*/
(COALESCE((std.WeldHours / std.WeldCount) * (stlw.FAWeldQuantity * stlw.FAWeldPercent),0))
)) 
+
sum(IF((COALESCE(stld.DemoLength,0) + 
(SELECT COALESCE(sum(COALESCE(DemoLength,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelDemo 
			ON ss2.ActivityType = 67 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 67
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/
/*TRUE*/ 
GREATEST((COALESCE(std.TakeOffQuantity,0) - 
(SELECT COALESCE(sum(COALESCE(DemoLength,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelDemo 
			ON ss2.ActivityType = 67 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 67
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID))
,0) * (std.DemoHours / std.TakeOffQuantity),
/*FALSE*/
(COALESCE((std.DemoHours / std.TakeOffQuantity) * stld.DemoLength ,0))
)) 
+
sum(IF((COALESCE(stlm.MiscQuantity,0) + 
(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelMisc
			ON ss2.ActivityType = 96 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 96
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/
/*TRUE*/ 
GREATEST((COALESCE(std.TakeOffQuantity,0) - 
(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelMisc 
			ON ss2.ActivityType = 96 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 96
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID))
,0) * (std.MiscHours / std.TakeOffQuantity),
/*FALSE*/
(COALESCE((std.MiscHours / std.TakeOffQuantity) * stlm.MiscQuantity ,0))
))
) AS EarnedFAHours
 

FROM SubmissionStatus ss
        
JOIN (SELECT BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours, sum(WeldCount) AS WeldCount, 
		IF(ActivityType = "D", sum(SteelHours), 0) AS DemoHours,
		IF(ActivityType = "Misc", sum(SteelHours), 0) AS MiscHours
		FROM SteelTrackerDetails 
		GROUP BY BidID) std
	ON std.BidID = ss.fk_BidIDAssigned

LEFT JOIN SteelShake stls
	ON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID AND stls.FARework = 0

LEFT JOIN SteelErect stle
	ON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID AND stle.FARework = 0

LEFT JOIN SteelBoltOut stlb
	ON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID AND stlb.FARework = 0

LEFT JOIN SteelImp stli
	ON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID AND stli.FARework = 0
    
LEFT JOIN SteelWeld stlw
	ON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID AND stlw.FARework = 0

LEFT JOIN SteelSell stlsell
	ON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID AND stlsell.FARework = 0

LEFT JOIN SteelDemo stld
	ON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID
    
LEFT JOIN SteelMisc stlm
	ON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID AND stlm.MiscRework = 0

WHERE ss.fk_ActivityStatus IN (5,12)
AND ss.ActivityType IN (60,61,62,63,64,65,66,67,68,69,96) 
GROUP BY std.BidID
) er
	ON er.BidID = std.BidID
  
WHERE std.TestPackageNumber = :TestPackage
GROUP BY std.TestPackageNumber
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetQuantitiesTestPackageSteel__count">
        <![CDATA[
        select count(*) from (SELECT std.BidID, std.TestPackageNumber,

### Count ####
sum(std.TakeOffQuantity) AS SellPunchCount,

### Hours ####
sum(std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')) AS SellPunchHours,

### Installed Count ###
sum(COALESCE(er.InstalledSell,0)) AS InstalledSell,

### Earned Hours ###
sum(er.EarnedSellHours) AS EarnedSellPunchHours,

### Loose Hours ###
sum(
(
IF(std.ActivityType = "E"
,/*TRUE*/
(std.SteelHours * (1-(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')))
,/*FALSE*/
std.SteelHours)
) 
- COALESCE(er.EarnedFAHours,0)
) AS LooseHours

FROM (SELECT BidID, TestPackageNumber, ActivityType, 
		sum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,
        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10
		FROM SteelTrackerDetails 
		GROUP BY BidID) std
        
LEFT JOIN SubmissionStatus ss
	ON ss.fk_BidIDAssigned = std.BidID AND ss.ActivityType = 65 AND ss.fk_ActivityStatus IN (5,12)
        
### Earned/Installed Columns ###
LEFT JOIN (SELECT BidID, 

### Installed Quantities ###
sum(COALESCE(stlsell.FASellQuantity,0)) AS InstalledSell,

### Earned Hour Quantities ###
sum(IF((COALESCE(stlsell.FASellQuantity,0) + 
(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelSell 
			ON ss2.ActivityType = 65 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 65
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/
/*TRUE*/ 
GREATEST((COALESCE(std.TakeOffQuantity,0) - 
(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelSell 
			ON ss2.ActivityType = 65 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 65
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID))
,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity),
/*FALSE*/
(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity) * stlsell.FASellQuantity,0))
)) AS EarnedSellHours,

(
sum(IF((COALESCE(stls.FAShakeQuantity,0) + 
(SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelShake 
			ON ss2.ActivityType = 61 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 61
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/
/*TRUE*/ 
GREATEST((COALESCE(std.TakeOffQuantity,0) - 
((SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelShake 
			ON ss2.ActivityType = 61 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 61
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)))
,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity),
/*FALSE*/
(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity) * stls.FAShakeQuantity,0))
)) 
+
sum(IF((COALESCE(stle.FAErectQuantity,0) * COALESCE(stle.FAErectPercent,0) + 
(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelErect 
			ON ss2.ActivityType = 62 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 62
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/
/*TRUE*/ 
GREATEST((COALESCE(std.TakeOffQuantity,0) - 
(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelErect 
			ON ss2.ActivityType = 62 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 62
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID))
,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity),
/*FALSE*/
(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity) * (stle.FAErectQuantity * stle.FAErectPercent),0))
)) 
+
sum(IF((COALESCE(stlb.FABoltOutQuantity,0) * COALESCE(stlb.FABoltOutPercent,0) + 
(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelBoltOut 
			ON ss2.ActivityType = 63 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 63
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/
/*TRUE*/ 
GREATEST((COALESCE(std.TakeOffQuantity,0) - 
(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelBoltOut 
			ON ss2.ActivityType = 63 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 63
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID))
,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity),
/*FALSE*/
(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity) * (stlb.FABoltOutQuantity * stlb.FABoltOutPercent),0))
)) 
+
sum(IF((COALESCE(stli.FAImpQuantity,0) * COALESCE(stli.FAImpPercent,0) + 
(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelImp 
			ON ss2.ActivityType = 64 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 64
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/
/*TRUE*/ 
GREATEST((COALESCE(std.TakeOffQuantity,0) - 
(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelImp 
			ON ss2.ActivityType = 64 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 64
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID))
,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity),
/*FALSE*/
(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity) * (stli.FAImpQuantity * stli.FAImpPercent),0))
)) 
+
sum(IF((COALESCE(stlw.FAWeldQuantity,0) * COALESCE(stlw.FAWeldPercent,0) + 
(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelWeld 
			ON ss2.ActivityType = 68 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 68
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.WeldCount,/*Is New + cumlitive quantity greater then WeldCount*/
/*TRUE*/ 
GREATEST((COALESCE(std.WeldCount,0) - 
(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelWeld 
			ON ss2.ActivityType = 68 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 68
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID))
,0) * (std.WeldHours / std.WeldCount),
/*FALSE*/
(COALESCE((std.WeldHours / std.WeldCount) * (stlw.FAWeldQuantity * stlw.FAWeldPercent),0))
)) 
+
sum(IF((COALESCE(stld.DemoLength,0) + 
(SELECT COALESCE(sum(COALESCE(DemoLength,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelDemo 
			ON ss2.ActivityType = 67 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 67
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/
/*TRUE*/ 
GREATEST((COALESCE(std.TakeOffQuantity,0) - 
(SELECT COALESCE(sum(COALESCE(DemoLength,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelDemo 
			ON ss2.ActivityType = 67 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 67
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID))
,0) * (std.DemoHours / std.TakeOffQuantity),
/*FALSE*/
(COALESCE((std.DemoHours / std.TakeOffQuantity) * stld.DemoLength ,0))
)) 
+
sum(IF((COALESCE(stlm.MiscQuantity,0) + 
(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelMisc
			ON ss2.ActivityType = 96 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 96
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID)
) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/
/*TRUE*/ 
GREATEST((COALESCE(std.TakeOffQuantity,0) - 
(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity
	FROM SubmissionStatus ss2
		LEFT JOIN SteelMisc 
			ON ss2.ActivityType = 96 AND ss2.ActivityRowId = ID
	WHERE ss2.fk_ActivityStatus IN (5,12)
	AND ss2.ActivityType = 96
	AND ss2.PSAActivityID < ss.PSAActivityID
	AND ss2.fk_BidIDAssigned = std.BidID))
,0) * (std.MiscHours / std.TakeOffQuantity),
/*FALSE*/
(COALESCE((std.MiscHours / std.TakeOffQuantity) * stlm.MiscQuantity ,0))
))
) AS EarnedFAHours
 

FROM SubmissionStatus ss
        
JOIN (SELECT BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours, sum(WeldCount) AS WeldCount, 
		IF(ActivityType = "D", sum(SteelHours), 0) AS DemoHours,
		IF(ActivityType = "Misc", sum(SteelHours), 0) AS MiscHours
		FROM SteelTrackerDetails 
		GROUP BY BidID) std
	ON std.BidID = ss.fk_BidIDAssigned

LEFT JOIN SteelShake stls
	ON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID AND stls.FARework = 0

LEFT JOIN SteelErect stle
	ON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID AND stle.FARework = 0

LEFT JOIN SteelBoltOut stlb
	ON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID AND stlb.FARework = 0

LEFT JOIN SteelImp stli
	ON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID AND stli.FARework = 0
    
LEFT JOIN SteelWeld stlw
	ON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID AND stlw.FARework = 0

LEFT JOIN SteelSell stlsell
	ON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID AND stlsell.FARework = 0

LEFT JOIN SteelDemo stld
	ON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID
    
LEFT JOIN SteelMisc stlm
	ON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID AND stlm.MiscRework = 0

WHERE ss.fk_ActivityStatus IN (5,12)
AND ss.ActivityType IN (60,61,62,63,64,65,66,67,68,69,96) 
GROUP BY std.BidID
) er
	ON er.BidID = std.BidID
  
WHERE std.TestPackageNumber = :TestPackage
GROUP BY std.TestPackageNumber) wmTempTable
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetBidActivityMatches">
        <![CDATA[
        SELECT min(td.ID) AS ID, td.BidID, td.Scope, td.Phase, td.Area, td.Location, td.Structure, td.Elevation, td.CU, td.P6ID, td.P6Description, td.Stage, td.TestPackageNumber, td.AssignedContractor, td.CostCode, td.LineNumber, td.EngDrawingNumber, td.SheetNumber, 
td.RevisionNumber, td.System, td.Service, td.ClientPipeSpec, td.MaterialCode, td.Description, td.ComponentNumber, td.ECT, td.PipingActivityType, td.PipeSize, sum(td.TakeOffQuantity) AS TakeOffQuantity, td.QuantityUnit, sum(td.EstimatedHours) AS EstimatedHours, 
td.WBS1, td.WBS2, td.WBS3, td.WBS4, td.WBS5, td.WBS6, td.WBS7, td.WBS8, td.WBS9, td.WBS10, td.Rev, td.TimeStamp,

sum(COALESCE(td.TakeOffQuantity,0)
-COALESCE(er.InstalledFootage,0)
-COALESCE(er.InstalledBoltUps,0)
-COALESCE(er.InstalledWelds,0)
-COALESCE(er.InstalledCuts,0)
-COALESCE(er.InstalledTrim,0)
-COALESCE(er.InstalledSupports,0)
-COALESCE(er.InstalledMisc,0)
-COALESCE(er.InstalledDemo,0)) AS RemainingQuant


FROM trackerDetails td

	LEFT JOIN (SELECT td.ID, td.BidID,
sum(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0)) AS InstalledFootage,
sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) AS InstalledBoltUps, 
sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0)) AS InstalledWelds,
sum(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0)) AS InstalledCuts,
(sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) + sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))) AS InstalledBasicConnections, 
sum(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0)) AS InstalledTrim,
sum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0)) AS InstalledSupports,
sum(COALESCE(IF(td.PipingActivityType = 'MISC' AND td.ECT != 'D', sm.MiscInstalled,0),0)) AS InstalledMisc,
sum(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0)) AS InstalledDemo,

(sum(COALESCE(st.TrimInstalled,0)) + sum(COALESCE(sm.MiscInstalled,0)) + sum(COALESCE(ssu.SupportInstalled,0))) AS InstalledBasicTrim

FROM SubmissionStatus ss
	JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0
	
    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled
				FROM SubsBoltUp sb 
                WHERE sb.BoltUpRework = 0) sb
		ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
        
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) sw
		ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
	LEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0
                GROUP BY sw.ID) scut
		ON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23
        
    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled
				FROM SubsTrim st
                WHERE st.TrimRework = 0) st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  
        
	LEFT JOIN (SELECT ssu.ID, COALESCE((ssu.SupportPercentCompleted * .01 * ssu.SupportQuantity),0) AS SupportInstalled
				FROM SubsSupports ssu
                WHERE ssu.SupportRework = 0) ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
	
    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled
				FROM SubsDemo sd) sd
		ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) 

    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sm
		ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 

	
    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM`trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        
	
    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sme
		ON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'
       
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smb
		ON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'
		
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smw
		ON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'
	
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smc
		ON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smt
		ON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smssu
		ON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smd
		ON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'
        

        
WHERE fk_ActivityStatus IN (5,12)
GROUP BY td.BidID) er
		ON er.ID = td.ID
WHERE `LineNumber` LIKE :LineNumber
AND `EngDrawingNumber` LIKE :DrawingNumber
AND `SheetNumber` LIKE :SheetNumber
AND `ECT` LIKE :ECT
AND `PipingActivityType` LIKE :ECTType

GROUP BY td.BidID
        ]]>
    <query-param name="LineNumber" type="java.lang.String"/>
    <query-param name="DrawingNumber" type="java.lang.String"/>
    <query-param name="SheetNumber" type="java.lang.String"/>
    <query-param name="ECT" type="java.lang.String"/>
    <query-param name="ECTType" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetBidActivityMatches__count">
        <![CDATA[
        select count(*) from (SELECT min(td.ID) AS ID, td.BidID, td.Scope, td.Phase, td.Area, td.Location, td.Structure, td.Elevation, td.CU, td.P6ID, td.P6Description, td.Stage, td.TestPackageNumber, td.AssignedContractor, td.CostCode, td.LineNumber, td.EngDrawingNumber, td.SheetNumber, 
td.RevisionNumber, td.System, td.Service, td.ClientPipeSpec, td.MaterialCode, td.Description, td.ComponentNumber, td.ECT, td.PipingActivityType, td.PipeSize, sum(td.TakeOffQuantity) AS TakeOffQuantity, td.QuantityUnit, sum(td.EstimatedHours) AS EstimatedHours, 
td.WBS1, td.WBS2, td.WBS3, td.WBS4, td.WBS5, td.WBS6, td.WBS7, td.WBS8, td.WBS9, td.WBS10, td.Rev, td.TimeStamp,

sum(COALESCE(td.TakeOffQuantity,0)
-COALESCE(er.InstalledFootage,0)
-COALESCE(er.InstalledBoltUps,0)
-COALESCE(er.InstalledWelds,0)
-COALESCE(er.InstalledCuts,0)
-COALESCE(er.InstalledTrim,0)
-COALESCE(er.InstalledSupports,0)
-COALESCE(er.InstalledMisc,0)
-COALESCE(er.InstalledDemo,0)) AS RemainingQuant


FROM trackerDetails td

	LEFT JOIN (SELECT td.ID, td.BidID,
sum(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0)) AS InstalledFootage,
sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) AS InstalledBoltUps, 
sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0)) AS InstalledWelds,
sum(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0)) AS InstalledCuts,
(sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) + sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))) AS InstalledBasicConnections, 
sum(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0)) AS InstalledTrim,
sum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0)) AS InstalledSupports,
sum(COALESCE(IF(td.PipingActivityType = 'MISC' AND td.ECT != 'D', sm.MiscInstalled,0),0)) AS InstalledMisc,
sum(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0)) AS InstalledDemo,

(sum(COALESCE(st.TrimInstalled,0)) + sum(COALESCE(sm.MiscInstalled,0)) + sum(COALESCE(ssu.SupportInstalled,0))) AS InstalledBasicTrim

FROM SubmissionStatus ss
	JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0
	
    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled
				FROM SubsBoltUp sb 
                WHERE sb.BoltUpRework = 0) sb
		ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
        
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) sw
		ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
	LEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0
                GROUP BY sw.ID) scut
		ON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23
        
    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled
				FROM SubsTrim st
                WHERE st.TrimRework = 0) st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  
        
	LEFT JOIN (SELECT ssu.ID, COALESCE((ssu.SupportPercentCompleted * .01 * ssu.SupportQuantity),0) AS SupportInstalled
				FROM SubsSupports ssu
                WHERE ssu.SupportRework = 0) ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
	
    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled
				FROM SubsDemo sd) sd
		ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) 

    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sm
		ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 

	
    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM`trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        
	
    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sme
		ON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'
       
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smb
		ON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'
		
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smw
		ON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'
	
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smc
		ON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smt
		ON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smssu
		ON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smd
		ON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'
        

        
WHERE fk_ActivityStatus IN (5,12)
GROUP BY td.BidID) er
		ON er.ID = td.ID
WHERE `LineNumber` LIKE :LineNumber
AND `EngDrawingNumber` LIKE :DrawingNumber
AND `SheetNumber` LIKE :SheetNumber
AND `ECT` LIKE :ECT
AND `PipingActivityType` LIKE :ECTType

GROUP BY td.BidID) wmTempTable
        ]]>
    <query-param name="LineNumber" type="java.lang.String"/>
    <query-param name="DrawingNumber" type="java.lang.String"/>
    <query-param name="SheetNumber" type="java.lang.String"/>
    <query-param name="ECT" type="java.lang.String"/>
    <query-param name="ECTType" type="java.lang.String"/>
    </sql-query>

    <sql-query name="UpdateSteelErectQuantity">
        <![CDATA[
        UPDATE `SteelErect` 
SET 

`FAErectQuantity`= :Quantity,
`FAErectPercent`= :Percent

WHERE `ID`= :RowID
        ]]>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Percent" type="java.math.BigDecimal"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSteelShake">
        <![CDATA[
        UPDATE `SteelShake` 
SET 
`FAArea`= :Area, 
`FAPieceNumber`= :Piece, 
`FAShakeQuantity`= :Quantity, 
`FARework`= :Rework, 
`FANotes`= :Notes 
WHERE `ID`= :RowID
        ]]>
    <query-param name="Area" type="java.lang.String"/>
    <query-param name="Piece" type="java.lang.String"/>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Rework" type="java.lang.Byte"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetALLTotalsByArea">
        <![CDATA[
        SELECT *
FROM CacheTable_StatsByArea
        ]]>
    </sql-query>

    <sql-query name="GetALLTotalsByArea__count">
        <![CDATA[
        select count(*) from (SELECT *
FROM CacheTable_StatsByArea) wmTempTable
        ]]>
    </sql-query>

    <sql-query name="UpdateSettingPipeCTOPercent">
        <![CDATA[
        UPDATE SETTINGS
SET `Value1`= :Value1 
WHERE `Label`='ClientTurnoverPercent'
        ]]>
    <query-param name="Value1" type="java.math.BigDecimal"/>
    </sql-query>

    <sql-query name="GetSettingSteelErectPercent">
        <![CDATA[
        SELECT * 
FROM SETTINGS
WHERE Label = 'SteelErectHoursPercent'
        ]]>
    </sql-query>

    <sql-query name="GetSettingSteelErectPercent__count">
        <![CDATA[
        select count(*) from (SELECT * 
FROM SETTINGS
WHERE Label = 'SteelErectHoursPercent') wmTempTable
        ]]>
    </sql-query>

    <sql-query name="GetPSAActivityByUidCount">
        <![CDATA[
        SELECT count(*) AS Count
FROM SubmissionStatus ss
	left JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	left JOIN PSA.tblUserPSA u
		ON u.ID = tc.Superintendent OR u.ID = tcr.Superintendent 
WHERE ss.ActivityType != 0
AND ss.fk_ActivityStatus in (1,4,6,8,10)
AND u.ID = :SuperID
        ]]>
    <query-param name="SuperID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetPSAActivityByUidCount__count">
        <![CDATA[
        select count(*) from (SELECT count(*) AS Count
FROM SubmissionStatus ss
	left JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	left JOIN PSA.tblUserPSA u
		ON u.ID = tc.Superintendent OR u.ID = tcr.Superintendent 
WHERE ss.ActivityType != 0
AND ss.fk_ActivityStatus in (1,4,6,8,10)
AND u.ID = :SuperID) wmTempTable
        ]]>
    <query-param name="SuperID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateTrimQuantity">
        <![CDATA[
        UPDATE SubsTrim
SET
TrimQuantity = :Quantity
WHERE ID = :RowId
        ]]>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="RowId" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetSettingCivilWork">
        <![CDATA[
        SELECT * 
FROM SETTINGS
WHERE Label = 'CivilWorkHoursPercent'
        ]]>
    </sql-query>

    <sql-query name="GetSettingCivilWork__count">
        <![CDATA[
        select count(*) from (SELECT * 
FROM SETTINGS
WHERE Label = 'CivilWorkHoursPercent') wmTempTable
        ]]>
    </sql-query>

    <sql-query name="UpdateSteelShakeQuantity">
        <![CDATA[
        UPDATE `SteelShake` 
SET 

`FAShakeQuantity`= :Quantity

WHERE `ID`= :RowID
        ]]>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSettingSteelImp">
        <![CDATA[
        UPDATE SETTINGS
SET `Value1`= :Value1 
WHERE `Label`='SteelImpHoursPercent'
        ]]>
    <query-param name="Value1" type="java.math.BigDecimal"/>
    </sql-query>

    <sql-query name="GetSettingPipeMechPercent">
        <![CDATA[
        SELECT *
FROM SETTINGS
WHERE Label = 'MechHoursPercent'
        ]]>
    </sql-query>

    <sql-query name="GetSettingPipeMechPercent__count">
        <![CDATA[
        select count(*) from (SELECT *
FROM SETTINGS
WHERE Label = 'MechHoursPercent') wmTempTable
        ]]>
    </sql-query>

    <sql-query name="UpdateSteelWeldQuantity">
        <![CDATA[
        UPDATE `SteelWeld` 
SET 

`FAWeldQuantity`= :Quantity,
`FAWeldPercent`= :Percent
WHERE `ID`= :RowID
        ]]>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Percent" type="java.math.BigDecimal"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSteelImp">
        <![CDATA[
        UPDATE `SteelImp` 
SET 
`FAArea`= :Area, 
`FAPieceNumber`= :Piece, 
`FAImpQuantity`= :Quantity,
`FAImpPercent`= :Percent,
`FARework`= :Rework, 
`FANotes`= :Notes 
WHERE `ID`= :RowID
        ]]>
    <query-param name="Area" type="java.lang.String"/>
    <query-param name="Piece" type="java.lang.String"/>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Percent" type="java.math.BigDecimal"/>
    <query-param name="Rework" type="java.lang.Byte"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSteelSell">
        <![CDATA[
        UPDATE `SteelSell` 
SET 
`FAArea`= :Area, 
`FAPieceNumber`= :Piece, 
`FASellQuantity`= :Quantity,
`FARework`= :Rework, 
`FANotes`= :Notes 
WHERE `ID`= :RowID
        ]]>
    <query-param name="Area" type="java.lang.String"/>
    <query-param name="Piece" type="java.lang.String"/>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Rework" type="java.lang.Byte"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetSettingPipeTestingPercent">
        <![CDATA[
        SELECT *
FROM SETTINGS
WHERE Label = 'TestingHoursPercent'
        ]]>
    </sql-query>

    <sql-query name="GetSettingPipeTestingPercent__count">
        <![CDATA[
        select count(*) from (SELECT *
FROM SETTINGS
WHERE Label = 'TestingHoursPercent') wmTempTable
        ]]>
    </sql-query>

    <sql-query name="UpdateErectionQuantity">
        <![CDATA[
        UPDATE SubsErection
SET
ErectionLengthSpool1 = :Spool1Length
WHERE ID = :RowID
        ]]>
    <query-param name="Spool1Length" type="java.lang.Integer"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidActivityMatchesCivil">
        <![CDATA[
        SELECT 
min(UID) AS UID, min(BidID) AS BidID, EWONumber, Scope, Phase, Stage, TestPackageNumber, CostCode, P6ID, AssignedContractor, Area, Location, Structure, Grouping, FoundationDescription, CU, P6Description, 
EngDrawingNumber, SheetNumber, DrawingRev, DetailDrawingNumber, DetailRev, DetailName, Description, ActivityType, ActivitySubType, System, Service, 
sum(TakeOffQuantity) AS TakeOffQuantity, QuantityUnit, sum(EstimatedHours) AS EstimatedHours, 
WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10

FROM CivilTrackerDetails
WHERE BidID = :BidID
OR 
(FoundationDescription LIKE :Foundation
AND EngDrawingNumber LIKE :DrawingNumber
AND DetailDrawingNumber LIKE :DetailDrawingNumber)
GROUP BY BidID
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    <query-param name="Foundation" type="java.lang.String"/>
    <query-param name="DrawingNumber" type="java.lang.String"/>
    <query-param name="DetailDrawingNumber" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetBidActivityMatchesCivil__count">
        <![CDATA[
        select count(*) from (SELECT 
min(UID) AS UID, min(BidID) AS BidID, EWONumber, Scope, Phase, Stage, TestPackageNumber, CostCode, P6ID, AssignedContractor, Area, Location, Structure, Grouping, FoundationDescription, CU, P6Description, 
EngDrawingNumber, SheetNumber, DrawingRev, DetailDrawingNumber, DetailRev, DetailName, Description, ActivityType, ActivitySubType, System, Service, 
sum(TakeOffQuantity) AS TakeOffQuantity, QuantityUnit, sum(EstimatedHours) AS EstimatedHours, 
WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10

FROM CivilTrackerDetails
WHERE BidID = :BidID
OR 
(FoundationDescription LIKE :Foundation
AND EngDrawingNumber LIKE :DrawingNumber
AND DetailDrawingNumber LIKE :DetailDrawingNumber)
GROUP BY BidID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    <query-param name="Foundation" type="java.lang.String"/>
    <query-param name="DrawingNumber" type="java.lang.String"/>
    <query-param name="DetailDrawingNumber" type="java.lang.String"/>
    </sql-query>

    <sql-query name="UpdateSteelErect">
        <![CDATA[
        UPDATE `SteelErect` 
SET 
`FAArea`= :Area, 
`FAPieceNumber`= :Piece, 
`FAErectQuantity`= :Quantity,
`FAErectPercent`= :Percent,
`FARework`= :Rework, 
`FANotes`= :Notes 
WHERE `ID`= :RowID
        ]]>
    <query-param name="Area" type="java.lang.String"/>
    <query-param name="Piece" type="java.lang.String"/>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Percent" type="java.math.BigDecimal"/>
    <query-param name="Rework" type="java.lang.Byte"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSupports">
        <![CDATA[
        UPDATE SubsSupports
SET
SupportPartNumber = :PartNumber,
SupportQuantity = :Quantity,
SupportDrawingNumber = :DrawingNumber,
SupportLineNumber = :LineNumber,
SupportSheetNumber = :Sheet,
SupportComplete = :Complete,
SupportShared = :Shared,
SupportPercentCompleted = :PercentComplete,
SupportRework = :Rework,
SupportNotes = :Notes
WHERE ID = :RowID
        ]]>
    <query-param name="PartNumber" type="java.lang.String"/>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="DrawingNumber" type="java.lang.String"/>
    <query-param name="LineNumber" type="java.lang.String"/>
    <query-param name="Sheet" type="java.lang.String"/>
    <query-param name="Complete" type="java.lang.Byte"/>
    <query-param name="Shared" type="java.lang.Byte"/>
    <query-param name="PercentComplete" type="java.lang.Integer"/>
    <query-param name="Rework" type="java.lang.Integer"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantityLFInstalled">
        <![CDATA[
        SELECT sum(
COALESCE(se.ErectionLengthSpool1,0) + 
COALESCE(se.ErectionLengthSpool2,0) + 
COALESCE(se.ErectionLengthSpool3,0) + 
COALESCE(se.ErectionLengthSpool4,0) + 
COALESCE(se.ErectionLengthSpool5,0) + 
COALESCE(se.ErectionLengthSpool6,0) +
COALESCE(sme.MiscErectionInstalled,0)
) AS Total 
FROM SubmissionStatus ss

	LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0
		
    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        
    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sme
		ON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'



WHERE ss.ActivityType IN (11, 91)
AND ss.fk_ActivityStatus IN (5,12)
AND fk_BidIDAssigned = :BidID
GROUP BY BidID
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantityLFInstalled__count">
        <![CDATA[
        select count(*) from (SELECT sum(
COALESCE(se.ErectionLengthSpool1,0) + 
COALESCE(se.ErectionLengthSpool2,0) + 
COALESCE(se.ErectionLengthSpool3,0) + 
COALESCE(se.ErectionLengthSpool4,0) + 
COALESCE(se.ErectionLengthSpool5,0) + 
COALESCE(se.ErectionLengthSpool6,0) +
COALESCE(sme.MiscErectionInstalled,0)
) AS Total 
FROM SubmissionStatus ss

	LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0
		
    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        
    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sme
		ON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'



WHERE ss.ActivityType IN (11, 91)
AND ss.fk_ActivityStatus IN (5,12)
AND fk_BidIDAssigned = :BidID
GROUP BY BidID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateDemoQuantity">
        <![CDATA[
        UPDATE SubsDemo
SET 
DemoQuantity = :Quantity
WHERE ID= :RowID
        ]]>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelSell">
        <![CDATA[
        SELECT stlsell.* 
FROM SteelSell stlsell
WHERE ID = :RowID

UNION ALL

SELECT stlsellr.fk_OrgActivityId, stlsellr.SubmissionID, stlsellr.FAArea, stlsellr.FAPieceNumber, stlsellr.FASellQuantity, stlsellr.FARework, stlsellr.FANotes, stlsellr.ActivityType, stlsellr.FATimeInForm, stlsellr.Rev, stlsellr.TimeStamp
FROM SteelSellREV stlsellr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelSell__count">
        <![CDATA[
        select count(*) from (SELECT stlsell.* 
FROM SteelSell stlsell
WHERE ID = :RowID

UNION ALL

SELECT stlsellr.fk_OrgActivityId, stlsellr.SubmissionID, stlsellr.FAArea, stlsellr.FAPieceNumber, stlsellr.FASellQuantity, stlsellr.FARework, stlsellr.FANotes, stlsellr.ActivityType, stlsellr.FATimeInForm, stlsellr.Rev, stlsellr.TimeStamp
FROM SteelSellREV stlsellr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSettingPipeRFTPercent">
        <![CDATA[
        UPDATE SETTINGS
SET `Value1`= :Value1 
WHERE `Label`='CompleteForTestPercent'
        ]]>
    <query-param name="Value1" type="java.math.BigDecimal"/>
    </sql-query>

    <sql-query name="UpdateCutPrep">
        <![CDATA[
        UPDATE SubsWeld
SET
WeldDrawingNumber = :DrawingNumber,
WeldLineNumber = :LineNumber,
WeldSheetNumber = :SheetNumber,
WeldSize = :Size,
WeldThickness = :Thickness,
WeldRework = :Rework,
WeldNotes = :Notes
WHERE ID = :RowID
        ]]>
    <query-param name="DrawingNumber" type="java.lang.String"/>
    <query-param name="LineNumber" type="java.lang.String"/>
    <query-param name="SheetNumber" type="java.lang.String"/>
    <query-param name="Size" type="java.math.BigDecimal"/>
    <query-param name="Thickness" type="java.lang.String"/>
    <query-param name="Rework" type="java.lang.Integer"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateCivilMisc">
        <![CDATA[
        UPDATE `CivilMisc` 
SET 
`MiscFoundation` = :Foundation,
`MiscDrawingNumber` = :Drawing,
`MiscDetailDrawingNumber` = :DetailDrawing,
`MiscPercentComplete`= :Percent,
`MiscRework` = :Rework,
`MiscNotes` = :Notes
WHERE `ID`= :RowID
        ]]>
    <query-param name="Foundation" type="java.lang.String"/>
    <query-param name="Drawing" type="java.lang.String"/>
    <query-param name="DetailDrawing" type="java.lang.String"/>
    <query-param name="Percent" type="java.math.BigDecimal"/>
    <query-param name="Rework" type="java.lang.Integer"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantitySupportsInstalled">
        <![CDATA[
        SELECT sum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0)) AS Total

FROM SubmissionStatus ss

    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
	
	LEFT JOIN (SELECT ssu.ID, COALESCE((ssu.SupportPercentCompleted * .01 * ssu.SupportQuantity),0) AS SupportInstalled
				FROM SubsSupports ssu
                WHERE ssu.SupportRework = 0) ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smssu
		ON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'

WHERE ss.ActivityType IN (32, 91)
AND ss.fk_ActivityStatus IN (5,12)
AND fk_BidIDAssigned = :BidID
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantitySupportsInstalled__count">
        <![CDATA[
        select count(*) from (SELECT sum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0)) AS Total

FROM SubmissionStatus ss

    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
	
	LEFT JOIN (SELECT ssu.ID, COALESCE((ssu.SupportPercentCompleted * .01 * ssu.SupportQuantity),0) AS SupportInstalled
				FROM SubsSupports ssu
                WHERE ssu.SupportRework = 0) ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smssu
		ON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'

WHERE ss.ActivityType IN (32, 91)
AND ss.fk_ActivityStatus IN (5,12)
AND fk_BidIDAssigned = :BidID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="CreateSSNote">
        <![CDATA[
        INSERT INTO SSNotes (`fk_PSAActivityID`, `fk_uid` ,`Notes`) 
VALUES (:PSAActivityID, :CreatedBy ,:Note)
        ]]>
    <query-param name="PSAActivityID" type="java.lang.Integer"/>
    <query-param name="CreatedBy" type="java.lang.Integer"/>
    <query-param name="Note" type="java.lang.String"/>
    </sql-query>

    <sql-query name="UpdateSettingPipeMechPercent">
        <![CDATA[
        UPDATE SETTINGS
SET `Value1`= :Value1 
WHERE `Label`='MechHoursPercent'
        ]]>
    <query-param name="Value1" type="java.math.BigDecimal"/>
    </sql-query>

    <sql-query name="GetSettingPipeCTOPercent">
        <![CDATA[
        SELECT *
FROM SETTINGS
WHERE Label = 'ClientTurnoverPercent'
        ]]>
    </sql-query>

    <sql-query name="GetSettingPipeCTOPercent__count">
        <![CDATA[
        select count(*) from (SELECT *
FROM SETTINGS
WHERE Label = 'ClientTurnoverPercent') wmTempTable
        ]]>
    </sql-query>

    <sql-query name="UpdateSettingPipeHydroPercent">
        <![CDATA[
        UPDATE SETTINGS
SET `Value1`= :Value1 
WHERE `Label`='HydroHoursPercent'
        ]]>
    <query-param name="Value1" type="java.math.BigDecimal"/>
    </sql-query>

    <sql-query name="UpdateTesting">
        <![CDATA[
        UPDATE SubsTesting
SET 

TestingTestPackageNumber = :TestPackageNumber,
TestingRework = :Rework,
TestingNotes = :Notes
WHERE ID= :RowID
        ]]>
    <query-param name="TestPackageNumber" type="java.lang.String"/>
    <query-param name="Rework" type="java.lang.Integer"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateCivilFA">
        <![CDATA[
        UPDATE `CivilFA` 
SET 
`FADescription`= :Description, 
`FAFoundation`= :Foundation, 
`FADrawingNumber`= :Drawing,
`FADetailDrawingNumber`= :DetailDrawing,
`FAPercentComplete`= :Percent,
`FAQuantity`= :Quantity,
`FARework`= :Rework,
`FANotes`= :Notes 
WHERE `ID`= :RowID
        ]]>
    <query-param name="Description" type="java.lang.String"/>
    <query-param name="Foundation" type="java.lang.String"/>
    <query-param name="Drawing" type="java.lang.String"/>
    <query-param name="DetailDrawing" type="java.lang.String"/>
    <query-param name="Percent" type="java.math.BigDecimal"/>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Rework" type="java.lang.Integer"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetEarnedHoursReport">
        <![CDATA[
        SELECT 21d.UserName, COALESCE(1d.EarnedHours, 0) AS 1dEarnedHours, COALESCE(7d.EarnedHours, 0) AS 7dEarnedHours, COALESCE(14d.EarnedHours, 0) AS 14dEarnedHours, COALESCE(21d.EarnedHours, 0) AS 21dEarnedHours
FROM (
SELECT u.ID, CONCAT(u.Firstname, ' ', u.Lastname) AS UserName,  
sum(
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +
(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +
COALESCE(stR.EarnedReadyForTestingHours,0) +
COALESCE(stH.EarnedHydroHours,0) +
COALESCE(stC.EarnedClientTurnoverHours,0)
) AS EarnedHours 
FROM SubmissionStatus ss

	LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	left JOIN PSA.tblUserPSA u
		ON u.ID = tc.Foreman OR u.ID = tcr.Foreman
		
    	LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0
	
    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled
				FROM SubsBoltUp sb 
                WHERE sb.BoltUpRework = 0) sb
		ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
        
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) sw
		ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
	LEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0
                GROUP BY sw.ID) scut
		ON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23
        
    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled
				FROM SubsTrim st
                WHERE st.TrimRework = 0) st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  
        
	LEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled
				FROM SubsSupports ssu
                WHERE ssu.SupportRework = 0) ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
	
    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled
				FROM SubsDemo sd) sd
		ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) 



	
    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sm
		ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'
        
    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sme
		ON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'
       
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smb
		ON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'
		
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smw
		ON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'
	
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smc
		ON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smt
		ON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smssu
		ON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smd
		ON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stR
						ON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stR.TestingTestPackageNumber
				WHERE stR.TestingRework = 0
				GROUP BY ss.PSAActivityID) stR
        ON stR.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stH
						ON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stH.TestingTestPackageNumber
				WHERE stH.TestingRework = 0
				GROUP BY ss.PSAActivityID) stH
        ON stH.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stC
						ON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stC.TestingTestPackageNumber
				WHERE stC.TestingRework = 0
				GROUP BY ss.PSAActivityID) stC
        ON stC.PSAActivityID = ss.PSAActivityID
        
WHERE ss.fk_ActivityStatus IN (5,12)
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)
AND sd.ReceivedTime < :Date 
+ INTERVAL 1 day
AND sd.ReceivedTime >= :Date - INTERVAL 20 DAY
GROUP BY u.ID
) 21d

LEFT JOIN (
SELECT u.ID,  
sum(
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +
(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +
COALESCE(stR.EarnedReadyForTestingHours,0) +
COALESCE(stH.EarnedHydroHours,0) +
COALESCE(stC.EarnedClientTurnoverHours,0)
) AS EarnedHours 
FROM SubmissionStatus ss

	LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	left JOIN PSA.tblUserPSA u
		ON u.ID = tc.Foreman OR u.ID = tcr.Foreman
	
    	LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0
	
    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled
				FROM SubsBoltUp sb 
                WHERE sb.BoltUpRework = 0) sb
		ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
        
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) sw
		ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
	LEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0
                GROUP BY sw.ID) scut
		ON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23
        
    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled
				FROM SubsTrim st
                WHERE st.TrimRework = 0) st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  
        
	LEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled
				FROM SubsSupports ssu
                WHERE ssu.SupportRework = 0) ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
	
    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled
				FROM SubsDemo sd) sd
		ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) 



	
    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sm
		ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'
        
    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sme
		ON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'
       
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smb
		ON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'
		
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smw
		ON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'
	
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smc
		ON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smt
		ON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smssu
		ON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smd
		ON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stR
						ON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stR.TestingTestPackageNumber
				WHERE stR.TestingRework = 0
				GROUP BY ss.PSAActivityID) stR
        ON stR.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stH
						ON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stH.TestingTestPackageNumber
				WHERE stH.TestingRework = 0
				GROUP BY ss.PSAActivityID) stH
        ON stH.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stC
						ON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stC.TestingTestPackageNumber
				WHERE stC.TestingRework = 0
				GROUP BY ss.PSAActivityID) stC
        ON stC.PSAActivityID = ss.PSAActivityID
        
WHERE ss.fk_ActivityStatus IN (5,12)
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)
AND sd.ReceivedTime < :Date + INTERVAL 1 day
AND sd.ReceivedTime >= :Date - INTERVAL 6 DAY
GROUP BY u.ID
) 7d
ON 7d.ID = 21d.ID

LEFT JOIN (
SELECT u.ID,  
sum(
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +
(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +
COALESCE(stR.EarnedReadyForTestingHours,0) +
COALESCE(stH.EarnedHydroHours,0) +
COALESCE(stC.EarnedClientTurnoverHours,0)
) AS EarnedHours 
FROM SubmissionStatus ss

	LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	left JOIN PSA.tblUserPSA u
		ON u.ID = tc.Foreman OR u.ID = tcr.Foreman
	
    	LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0
	
    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled
				FROM SubsBoltUp sb 
                WHERE sb.BoltUpRework = 0) sb
		ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
        
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) sw
		ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
	LEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0
                GROUP BY sw.ID) scut
		ON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23
        
    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled
				FROM SubsTrim st
                WHERE st.TrimRework = 0) st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  
        
	LEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled
				FROM SubsSupports ssu
                WHERE ssu.SupportRework = 0) ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
	
    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled
				FROM SubsDemo sd) sd
		ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) 



	
    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sm
		ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'
        
    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sme
		ON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'
       
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smb
		ON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'
		
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smw
		ON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'
	
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smc
		ON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smt
		ON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smssu
		ON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smd
		ON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stR
						ON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stR.TestingTestPackageNumber
				WHERE stR.TestingRework = 0
				GROUP BY ss.PSAActivityID) stR
        ON stR.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stH
						ON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stH.TestingTestPackageNumber
				WHERE stH.TestingRework = 0
				GROUP BY ss.PSAActivityID) stH
        ON stH.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stC
						ON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stC.TestingTestPackageNumber
				WHERE stC.TestingRework = 0
				GROUP BY ss.PSAActivityID) stC
        ON stC.PSAActivityID = ss.PSAActivityID
        
WHERE ss.fk_ActivityStatus IN (5,12)
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)
AND sd.ReceivedTime < :Date + INTERVAL 1 day
AND sd.ReceivedTime >= :Date - INTERVAL 13 DAY
GROUP BY u.ID
) 14d
ON 14d.ID = 21d.ID

LEFT JOIN (
SELECT u.ID,  
sum(
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +
(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +
COALESCE(stR.EarnedReadyForTestingHours,0) +
COALESCE(stH.EarnedHydroHours,0) +
COALESCE(stC.EarnedClientTurnoverHours,0)
) AS EarnedHours 
FROM SubmissionStatus ss

	LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	left JOIN PSA.tblUserPSA u
		ON u.ID = tc.Foreman OR u.ID = tcr.Foreman
	
    	LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0
	
    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled
				FROM SubsBoltUp sb 
                WHERE sb.BoltUpRework = 0) sb
		ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
        
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) sw
		ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
	LEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0
                GROUP BY sw.ID) scut
		ON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23
        
    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled
				FROM SubsTrim st
                WHERE st.TrimRework = 0) st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  
        
	LEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled
				FROM SubsSupports ssu
                WHERE ssu.SupportRework = 0) ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
	
    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled
				FROM SubsDemo sd) sd
		ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) 



	
    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sm
		ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'
        
    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sme
		ON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'
       
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smb
		ON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'
		
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smw
		ON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'
	
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smc
		ON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smt
		ON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smssu
		ON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smd
		ON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stR
						ON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stR.TestingTestPackageNumber
				WHERE stR.TestingRework = 0
				GROUP BY ss.PSAActivityID) stR
        ON stR.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stH
						ON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stH.TestingTestPackageNumber
				WHERE stH.TestingRework = 0
				GROUP BY ss.PSAActivityID) stH
        ON stH.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stC
						ON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stC.TestingTestPackageNumber
				WHERE stC.TestingRework = 0
				GROUP BY ss.PSAActivityID) stC
        ON stC.PSAActivityID = ss.PSAActivityID
        
WHERE ss.fk_ActivityStatus IN (5,12)
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)
AND sd.ReceivedTime < :Date + INTERVAL 1 day
AND sd.ReceivedTime >= :Date
GROUP BY u.ID
) 1d
ON 1d.ID = 21d.ID
        ]]>
    <query-param name="ForemanID" type="java.lang.String"/>
    <query-param name="SuperID" type="java.lang.String"/>
    <query-param name="ManagerID" type="java.lang.String"/>
    <query-param name="Date" type="java.sql.Date"/>
    </sql-query>

    <sql-query name="GetEarnedHoursReport__count">
        <![CDATA[
        select count(*) from (SELECT 21d.UserName, COALESCE(1d.EarnedHours, 0) AS 1dEarnedHours, COALESCE(7d.EarnedHours, 0) AS 7dEarnedHours, COALESCE(14d.EarnedHours, 0) AS 14dEarnedHours, COALESCE(21d.EarnedHours, 0) AS 21dEarnedHours
FROM (
SELECT u.ID, CONCAT(u.Firstname, ' ', u.Lastname) AS UserName,  
sum(
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +
(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +
COALESCE(stR.EarnedReadyForTestingHours,0) +
COALESCE(stH.EarnedHydroHours,0) +
COALESCE(stC.EarnedClientTurnoverHours,0)
) AS EarnedHours 
FROM SubmissionStatus ss

	LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	left JOIN PSA.tblUserPSA u
		ON u.ID = tc.Foreman OR u.ID = tcr.Foreman
		
    	LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0
	
    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled
				FROM SubsBoltUp sb 
                WHERE sb.BoltUpRework = 0) sb
		ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
        
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) sw
		ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
	LEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0
                GROUP BY sw.ID) scut
		ON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23
        
    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled
				FROM SubsTrim st
                WHERE st.TrimRework = 0) st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  
        
	LEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled
				FROM SubsSupports ssu
                WHERE ssu.SupportRework = 0) ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
	
    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled
				FROM SubsDemo sd) sd
		ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) 



	
    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sm
		ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'
        
    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sme
		ON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'
       
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smb
		ON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'
		
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smw
		ON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'
	
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smc
		ON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smt
		ON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smssu
		ON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smd
		ON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stR
						ON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stR.TestingTestPackageNumber
				WHERE stR.TestingRework = 0
				GROUP BY ss.PSAActivityID) stR
        ON stR.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stH
						ON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stH.TestingTestPackageNumber
				WHERE stH.TestingRework = 0
				GROUP BY ss.PSAActivityID) stH
        ON stH.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stC
						ON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stC.TestingTestPackageNumber
				WHERE stC.TestingRework = 0
				GROUP BY ss.PSAActivityID) stC
        ON stC.PSAActivityID = ss.PSAActivityID
        
WHERE ss.fk_ActivityStatus IN (5,12)
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)
AND sd.ReceivedTime < :Date 
+ INTERVAL 1 day
AND sd.ReceivedTime >= :Date - INTERVAL 20 DAY
GROUP BY u.ID
) 21d

LEFT JOIN (
SELECT u.ID,  
sum(
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +
(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +
COALESCE(stR.EarnedReadyForTestingHours,0) +
COALESCE(stH.EarnedHydroHours,0) +
COALESCE(stC.EarnedClientTurnoverHours,0)
) AS EarnedHours 
FROM SubmissionStatus ss

	LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	left JOIN PSA.tblUserPSA u
		ON u.ID = tc.Foreman OR u.ID = tcr.Foreman
	
    	LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0
	
    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled
				FROM SubsBoltUp sb 
                WHERE sb.BoltUpRework = 0) sb
		ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
        
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) sw
		ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
	LEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0
                GROUP BY sw.ID) scut
		ON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23
        
    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled
				FROM SubsTrim st
                WHERE st.TrimRework = 0) st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  
        
	LEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled
				FROM SubsSupports ssu
                WHERE ssu.SupportRework = 0) ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
	
    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled
				FROM SubsDemo sd) sd
		ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) 



	
    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sm
		ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'
        
    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sme
		ON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'
       
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smb
		ON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'
		
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smw
		ON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'
	
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smc
		ON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smt
		ON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smssu
		ON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smd
		ON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stR
						ON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stR.TestingTestPackageNumber
				WHERE stR.TestingRework = 0
				GROUP BY ss.PSAActivityID) stR
        ON stR.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stH
						ON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stH.TestingTestPackageNumber
				WHERE stH.TestingRework = 0
				GROUP BY ss.PSAActivityID) stH
        ON stH.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stC
						ON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stC.TestingTestPackageNumber
				WHERE stC.TestingRework = 0
				GROUP BY ss.PSAActivityID) stC
        ON stC.PSAActivityID = ss.PSAActivityID
        
WHERE ss.fk_ActivityStatus IN (5,12)
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)
AND sd.ReceivedTime < :Date + INTERVAL 1 day
AND sd.ReceivedTime >= :Date - INTERVAL 6 DAY
GROUP BY u.ID
) 7d
ON 7d.ID = 21d.ID

LEFT JOIN (
SELECT u.ID,  
sum(
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +
(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +
COALESCE(stR.EarnedReadyForTestingHours,0) +
COALESCE(stH.EarnedHydroHours,0) +
COALESCE(stC.EarnedClientTurnoverHours,0)
) AS EarnedHours 
FROM SubmissionStatus ss

	LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	left JOIN PSA.tblUserPSA u
		ON u.ID = tc.Foreman OR u.ID = tcr.Foreman
	
    	LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0
	
    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled
				FROM SubsBoltUp sb 
                WHERE sb.BoltUpRework = 0) sb
		ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
        
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) sw
		ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
	LEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0
                GROUP BY sw.ID) scut
		ON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23
        
    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled
				FROM SubsTrim st
                WHERE st.TrimRework = 0) st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  
        
	LEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled
				FROM SubsSupports ssu
                WHERE ssu.SupportRework = 0) ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
	
    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled
				FROM SubsDemo sd) sd
		ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) 



	
    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sm
		ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'
        
    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sme
		ON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'
       
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smb
		ON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'
		
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smw
		ON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'
	
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smc
		ON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smt
		ON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smssu
		ON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smd
		ON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stR
						ON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stR.TestingTestPackageNumber
				WHERE stR.TestingRework = 0
				GROUP BY ss.PSAActivityID) stR
        ON stR.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stH
						ON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stH.TestingTestPackageNumber
				WHERE stH.TestingRework = 0
				GROUP BY ss.PSAActivityID) stH
        ON stH.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stC
						ON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stC.TestingTestPackageNumber
				WHERE stC.TestingRework = 0
				GROUP BY ss.PSAActivityID) stC
        ON stC.PSAActivityID = ss.PSAActivityID
        
WHERE ss.fk_ActivityStatus IN (5,12)
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)
AND sd.ReceivedTime < :Date + INTERVAL 1 day
AND sd.ReceivedTime >= :Date - INTERVAL 13 DAY
GROUP BY u.ID
) 14d
ON 14d.ID = 21d.ID

LEFT JOIN (
SELECT u.ID,  
sum(
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +
(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +
(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +
COALESCE(stR.EarnedReadyForTestingHours,0) +
COALESCE(stH.EarnedHydroHours,0) +
COALESCE(stC.EarnedClientTurnoverHours,0)
) AS EarnedHours 
FROM SubmissionStatus ss

	LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
	left JOIN PSA.tblUserPSA u
		ON u.ID = tc.Foreman OR u.ID = tcr.Foreman
	
    	LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0
	
    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled
				FROM SubsBoltUp sb 
                WHERE sb.BoltUpRework = 0) sb
		ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
        
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) sw
		ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
	LEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0
                GROUP BY sw.ID) scut
		ON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23
        
    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled
				FROM SubsTrim st
                WHERE st.TrimRework = 0) st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  
        
	LEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled
				FROM SubsSupports ssu
                WHERE ssu.SupportRework = 0) ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
	
    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled
				FROM SubsDemo sd) sd
		ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) 



	
    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sm
		ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'
        
    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sme
		ON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'
       
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smb
		ON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'
		
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smw
		ON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'
	
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smc
		ON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smt
		ON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smssu
		ON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smd
		ON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stR
						ON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stR.TestingTestPackageNumber
				WHERE stR.TestingRework = 0
				GROUP BY ss.PSAActivityID) stR
        ON stR.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stH
						ON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stH.TestingTestPackageNumber
				WHERE stH.TestingRework = 0
				GROUP BY ss.PSAActivityID) stH
        ON stH.PSAActivityID = ss.PSAActivityID
        
	LEFT JOIN (SELECT ss.PSAActivityID, 
					sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')
						*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours
				FROM SubmissionStatus ss
					LEFT JOIN SubsTesting stC
						ON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43
					LEFT JOIN trackerDetails td
						ON td.TestPackageNumber = stC.TestingTestPackageNumber
				WHERE stC.TestingRework = 0
				GROUP BY ss.PSAActivityID) stC
        ON stC.PSAActivityID = ss.PSAActivityID
        
WHERE ss.fk_ActivityStatus IN (5,12)
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)
AND sd.ReceivedTime < :Date + INTERVAL 1 day
AND sd.ReceivedTime >= :Date
GROUP BY u.ID
) 1d
ON 1d.ID = 21d.ID) wmTempTable
        ]]>
    <query-param name="ForemanID" type="java.lang.String"/>
    <query-param name="SuperID" type="java.lang.String"/>
    <query-param name="ManagerID" type="java.lang.String"/>
    <query-param name="Date" type="java.sql.Date"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelWeld">
        <![CDATA[
        SELECT stlw.* 
FROM SteelWeld stlw
WHERE ID = :RowID

UNION ALL

SELECT stlwr.fk_OrgActivityId, stlwr.SubmissionID, stlwr.FAArea, stlwr.FAPieceNumber, stlwr.FAWeldQuantity, stlwr.FAWeldPercent, stlwr.FARework, stlwr.FANotes, stlwr.ActivityType, stlwr.FATimeInForm, stlwr.Rev, stlwr.TimeStamp
FROM SteelWeldREV stlwr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelWeld__count">
        <![CDATA[
        select count(*) from (SELECT stlw.* 
FROM SteelWeld stlw
WHERE ID = :RowID

UNION ALL

SELECT stlwr.fk_OrgActivityId, stlwr.SubmissionID, stlwr.FAArea, stlwr.FAPieceNumber, stlwr.FAWeldQuantity, stlwr.FAWeldPercent, stlwr.FARework, stlwr.FANotes, stlwr.ActivityType, stlwr.FATimeInForm, stlwr.Rev, stlwr.TimeStamp
FROM SteelWeldREV stlwr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidActivityQuantity">
        <![CDATA[
        SELECT sum(td.TakeOffQuantity) AS TakeOffQuantity , td.QuantityUnit, 
IF(td.ECT = 'D', sum(COALESCE(td.EstimatedHours,0)), 
    sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),0)) 
)AS EstimatedHours
FROM trackerDetails td
WHERE BidID = :BidID
GROUP BY BidID
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidActivityQuantity__count">
        <![CDATA[
        select count(*) from (SELECT sum(td.TakeOffQuantity) AS TakeOffQuantity , td.QuantityUnit, 
IF(td.ECT = 'D', sum(COALESCE(td.EstimatedHours,0)), 
    sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),0)) 
)AS EstimatedHours
FROM trackerDetails td
WHERE BidID = :BidID
GROUP BY BidID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelImp">
        <![CDATA[
        SELECT stli.* 
FROM SteelImp stli
WHERE ID = :RowID

UNION ALL

SELECT stlir.fk_OrgActivityId, stlir.SubmissionID, stlir.FAArea, stlir.FAPieceNumber, stlir.FAImpQuantity, stlir.FAImpPercent, stlir.FARework, stlir.FANotes, stlir.ActivityType, stlir.FATimeInForm, stlir.Rev, stlir.TimeStamp
FROM SteelImpREV stlir
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelImp__count">
        <![CDATA[
        select count(*) from (SELECT stli.* 
FROM SteelImp stli
WHERE ID = :RowID

UNION ALL

SELECT stlir.fk_OrgActivityId, stlir.SubmissionID, stlir.FAArea, stlir.FAPieceNumber, stlir.FAImpQuantity, stlir.FAImpPercent, stlir.FARework, stlir.FANotes, stlir.ActivityType, stlir.FATimeInForm, stlir.Rev, stlir.TimeStamp
FROM SteelImpREV stlir
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantityMiscInstalled">
        <![CDATA[
        SELECT COALESCE(sum(sm.MiscQuantity),0) AS Total
FROM SubmissionStatus ss
	JOIN SubsMisc sm
		ON sm.ID = ss.ActivityRowID
WHERE ss.ActivityType = '91' 
AND sm.MiscRework = 0
AND ss.fk_ActivityStatus IN (5,12) 
AND fk_BidIDAssigned = :BidID
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantityMiscInstalled__count">
        <![CDATA[
        select count(*) from (SELECT COALESCE(sum(sm.MiscQuantity),0) AS Total
FROM SubmissionStatus ss
	JOIN SubsMisc sm
		ON sm.ID = ss.ActivityRowID
WHERE ss.ActivityType = '91' 
AND sm.MiscRework = 0
AND ss.fk_ActivityStatus IN (5,12) 
AND fk_BidIDAssigned = :BidID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantityDemoRemoved">
        <![CDATA[
        SELECT sum(COALESCE(sd.DemoInstalled, 0) + COALESCE(smd.MiscDemoInstalled,0)) AS Total
FROM SubmissionStatus ss

    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
	
    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled
				FROM SubsDemo sd) sd
		ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) 
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smd
		ON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'



WHERE ss.ActivityType IN (51,52,53,59,91)
AND ss.fk_ActivityStatus IN (5,12)
AND fk_BidIDAssigned = :BidID
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantityDemoRemoved__count">
        <![CDATA[
        select count(*) from (SELECT sum(COALESCE(sd.DemoInstalled, 0) + COALESCE(smd.MiscDemoInstalled,0)) AS Total
FROM SubmissionStatus ss

    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
	
    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled
				FROM SubsDemo sd) sd
		ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) 
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smd
		ON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'



WHERE ss.ActivityType IN (51,52,53,59,91)
AND ss.fk_ActivityStatus IN (5,12)
AND fk_BidIDAssigned = :BidID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetDrawingByTestPackageSteel">
        <![CDATA[
        SELECT DISTINCT std.Area, std.PieceMark, std.Description
FROM SteelTrackerDetails std
WHERE std.TestPackageNumber = :TestPackage
ORDER BY std.Area, std.PieceMark
        ]]>
    <query-param name="TestPackage" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetDrawingByTestPackageSteel__count">
        <![CDATA[
        select count(*) from (SELECT DISTINCT std.Area, std.PieceMark, std.Description
FROM SteelTrackerDetails std
WHERE std.TestPackageNumber = :TestPackage
ORDER BY std.Area, std.PieceMark) wmTempTable
        ]]>
    <query-param name="TestPackage" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelDemo">
        <![CDATA[
        SELECT stld.* 
FROM SteelDemo stld
WHERE ID = :RowID

UNION ALL

SELECT stldr.fk_OrgActivityId, stldr.SubmissionID, stldr.DemoArea, stldr.DemoSteelType, stldr.DemoSize, stldr.DemoQuantity, stldr.DemoNotes, stldr.ActivityType, stldr.DemoTimeInForm, stldr.Rev, stldr.TimeStamp
FROM SteelDemoREV stldr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelDemo__count">
        <![CDATA[
        select count(*) from (SELECT stld.* 
FROM SteelDemo stld
WHERE ID = :RowID

UNION ALL

SELECT stldr.fk_OrgActivityId, stldr.SubmissionID, stldr.DemoArea, stldr.DemoSteelType, stldr.DemoSize, stldr.DemoQuantity, stldr.DemoNotes, stldr.ActivityType, stldr.DemoTimeInForm, stldr.Rev, stldr.TimeStamp
FROM SteelDemoREV stldr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSteelSellPackage">
        <![CDATA[
        UPDATE `SteelSellPackage` 
SET 
`SellTestPackageNumber`= :TestPackage,
`SellNotes`= :Notes 
WHERE `ID`= :RowID
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateEquipFA">
        <![CDATA[
        UPDATE `EquipFA` 
SET 
`FATagNumber`= :TagNumber, 
`FAActivitySelect`= :Activity, 
`FAQuantity`= :Quantity,
`FAPercentComplete`= :Percent,
`FARework`= :Rework,
`FANotes`= :Notes 
WHERE `ID`= :RowID
        ]]>
    <query-param name="TagNumber" type="java.lang.String"/>
    <query-param name="Activity" type="java.lang.String"/>
    <query-param name="Quantity" type="java.math.BigDecimal"/>
    <query-param name="Percent" type="java.lang.String"/>
    <query-param name="Rework" type="java.lang.String"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetBidWorkHistorySteel">
        <![CDATA[
        SELECT ss.fk_SubmissionId, 
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

sum(COALESCE(stls.FAShakeQuantity,0)) AS ShakeQuantity,
sum(COALESCE(stle.FAErectQuantity,0)) AS ErectQuantity,
sum(COALESCE(stle.FAErectPercent,0)) AS ErectPercent,
sum(COALESCE(stlb.FABoltOutQuantity,0)) AS BoltoutQuantity,
sum(COALESCE(stlb.FABoltOutPercent,0)) AS BoltoutPercent,
sum(COALESCE(stli.FAImpQuantity,0)) AS ImpQuantity,
sum(COALESCE(stli.FAImpPercent,0)) AS ImpPercent,
sum(COALESCE(stlw.FAWeldQuantity,0)) AS WeldQuantity,
sum(COALESCE(stlw.FAWeldPercent,0)) AS WeldPercent,
sum(COALESCE(stlsell.FASellQuantity,0)) AS SellQuantity,
sum(COALESCE(stld.DemoQuantity,0)) AS DemoQuantity,
sum(COALESCE(stlm.MiscQuantity,0)) AS MiscQuantity


FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType IN (61,62,63,64,65,67,68,96)
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 

LEFT JOIN SteelShake stls
	ON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID 
    
LEFT JOIN SteelErect stle
	ON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID
    
LEFT JOIN SteelBoltOut stlb
	ON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID
    
LEFT JOIN SteelImp stli
	ON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID
    
LEFT JOIN SteelWeld stlw
	ON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID
    
LEFT JOIN SteelSell stlsell
	ON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID
    
LEFT JOIN SteelDemo stld
	ON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID
    
LEFT JOIN SteelMisc stlm
	ON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID



WHERE ss.fk_BidIDAssigned = :BidID
AND ss.ActivityType IN (61,62,63,64,65,67,68,96)
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.fk_SubmissionId
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidWorkHistorySteel__count">
        <![CDATA[
        select count(*) from (SELECT ss.fk_SubmissionId, 
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,

sum(COALESCE(stls.FAShakeQuantity,0)) AS ShakeQuantity,
sum(COALESCE(stle.FAErectQuantity,0)) AS ErectQuantity,
sum(COALESCE(stle.FAErectPercent,0)) AS ErectPercent,
sum(COALESCE(stlb.FABoltOutQuantity,0)) AS BoltoutQuantity,
sum(COALESCE(stlb.FABoltOutPercent,0)) AS BoltoutPercent,
sum(COALESCE(stli.FAImpQuantity,0)) AS ImpQuantity,
sum(COALESCE(stli.FAImpPercent,0)) AS ImpPercent,
sum(COALESCE(stlw.FAWeldQuantity,0)) AS WeldQuantity,
sum(COALESCE(stlw.FAWeldPercent,0)) AS WeldPercent,
sum(COALESCE(stlsell.FASellQuantity,0)) AS SellQuantity,
sum(COALESCE(stld.DemoQuantity,0)) AS DemoQuantity,
sum(COALESCE(stlm.MiscQuantity,0)) AS MiscQuantity


FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType IN (61,62,63,64,65,67,68,96)
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 

LEFT JOIN SteelShake stls
	ON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID 
    
LEFT JOIN SteelErect stle
	ON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID
    
LEFT JOIN SteelBoltOut stlb
	ON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID
    
LEFT JOIN SteelImp stli
	ON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID
    
LEFT JOIN SteelWeld stlw
	ON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID
    
LEFT JOIN SteelSell stlsell
	ON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID
    
LEFT JOIN SteelDemo stld
	ON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID
    
LEFT JOIN SteelMisc stlm
	ON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID



WHERE ss.fk_BidIDAssigned = :BidID
AND ss.ActivityType IN (61,62,63,64,65,67,68,96)
AND ss.fk_ActivityStatus IN (5,12)
GROUP BY ss.fk_SubmissionId) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateEWO">
        <![CDATA[
        UPDATE SubsEWO
SET 

EWONumber = :EWONumber,
EWOHours = :EWOHours,
EWODrawingNumber = :DrawingNumber,
EWOLineNumber = :LineNumber,
EWOSheetNumber = :SheetNumber,
EWORework = :Rework,
EWONotes = :Notes
WHERE ID= :RowID
        ]]>
    <query-param name="EWONumber" type="java.lang.String"/>
    <query-param name="EWOHours" type="java.lang.Integer"/>
    <query-param name="DrawingNumber" type="java.lang.String"/>
    <query-param name="LineNumber" type="java.lang.String"/>
    <query-param name="SheetNumber" type="java.lang.String"/>
    <query-param name="Rework" type="java.lang.Integer"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetSettingProductivityIntervals">
        <![CDATA[
        SELECT s1.Value1 AS Interval1 , s2.Value1 AS Interval2, s3.Value1 AS Interval3, s4.Value1 AS Interval4
FROM SETTINGS s1
JOIN (SELECT Value1 FROM SETTINGS WHERE Label = 'ProductivityInterval2') s2
JOIN (SELECT Value1 FROM SETTINGS WHERE Label = 'ProductivityInterval3') s3
JOIN (SELECT Value1 FROM SETTINGS WHERE Label = 'ProductivityInterval4') s4
WHERE Label = 'ProductivityInterval1'
        ]]>
    </sql-query>

    <sql-query name="GetSettingProductivityIntervals__count">
        <![CDATA[
        select count(*) from (SELECT s1.Value1 AS Interval1 , s2.Value1 AS Interval2, s3.Value1 AS Interval3, s4.Value1 AS Interval4
FROM SETTINGS s1
JOIN (SELECT Value1 FROM SETTINGS WHERE Label = 'ProductivityInterval2') s2
JOIN (SELECT Value1 FROM SETTINGS WHERE Label = 'ProductivityInterval3') s3
JOIN (SELECT Value1 FROM SETTINGS WHERE Label = 'ProductivityInterval4') s4
WHERE Label = 'ProductivityInterval1') wmTempTable
        ]]>
    </sql-query>

    <sql-query name="GetPSRecentActivities">
        <![CDATA[
        SELECT ss.PSAActivityID, at.ActivityType, ats.Status, ss.TimeStamp
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	on at.ID = ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats 
	on ats.ID = ss.fk_ActivityStatus

WHERE ss.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW()
AND ss.fk_ActivityStatus IN (5,6,13)
AND ss.fk_LastModifiedBy = :UserID
ORDER BY ss.TimeStamp DESC
        ]]>
    <query-param name="UserID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetPSRecentActivities__count">
        <![CDATA[
        select count(*) from (SELECT ss.PSAActivityID, at.ActivityType, ats.Status, ss.TimeStamp
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	on at.ID = ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats 
	on ats.ID = ss.fk_ActivityStatus

WHERE ss.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW()
AND ss.fk_ActivityStatus IN (5,6,13)
AND ss.fk_LastModifiedBy = :UserID
ORDER BY ss.TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="UserID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivitiesPendingApprovalCount">
        <![CDATA[
        SELECT count(*) AS Count 
FROM SubmissionStatus ss

WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)
        ]]>
    <query-param name="UserID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivitiesPendingApprovalCount__count">
        <![CDATA[
        select count(*) from (SELECT count(*) AS Count 
FROM SubmissionStatus ss

WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)) wmTempTable
        ]]>
    <query-param name="UserID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetReportDPREquip">
        <![CDATA[
        SELECT 
ss.PSAActivityId AS FieldActivityId, at.ActivityType AS ActivityTypeName,  

efa.FATagNumber AS TagNumber, 
efa.FAActivitySelect AS Description,
CONCAT(efa.FAPercentComplete*100,"%") AS QuantityInstalled,
ats.Status AS CurrentStatus,
efa.FARework AS Rework,
efa.FANotes AS Notes,
DATE(sd.ReceivedTime) AS DateSubmitted


FROM SubmissionStatus ss
JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
        
JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

JOIN SubsDetails sd
	ON sd.SubmissionId = ss.fk_SubmissionId
left JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
left JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

JOIN EquipFA efa
	ON efa.ID = ss.ActivityRowId AND ss.ActivityType = 80
        



AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day
        ]]>
    <query-param name="ForemanID" type="java.lang.String"/>
    <query-param name="SuperID" type="java.lang.String"/>
    <query-param name="ManagerID" type="java.lang.String"/>
    <query-param name="StartDate" type="java.sql.Date"/>
    <query-param name="EndDate" type="java.sql.Date"/>
    </sql-query>

    <sql-query name="GetReportDPREquip__count">
        <![CDATA[
        select count(*) from (SELECT 
ss.PSAActivityId AS FieldActivityId, at.ActivityType AS ActivityTypeName,  

efa.FATagNumber AS TagNumber, 
efa.FAActivitySelect AS Description,
CONCAT(efa.FAPercentComplete*100,"%") AS QuantityInstalled,
ats.Status AS CurrentStatus,
efa.FARework AS Rework,
efa.FANotes AS Notes,
DATE(sd.ReceivedTime) AS DateSubmitted


FROM SubmissionStatus ss
JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
        
JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

JOIN SubsDetails sd
	ON sd.SubmissionId = ss.fk_SubmissionId
left JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
left JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

JOIN EquipFA efa
	ON efa.ID = ss.ActivityRowId AND ss.ActivityType = 80
        



AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day) wmTempTable
        ]]>
    <query-param name="ForemanID" type="java.lang.String"/>
    <query-param name="SuperID" type="java.lang.String"/>
    <query-param name="ManagerID" type="java.lang.String"/>
    <query-param name="StartDate" type="java.sql.Date"/>
    <query-param name="EndDate" type="java.sql.Date"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelBoltout">
        <![CDATA[
        SELECT stlb.* 
FROM SteelBoltOut stlb
WHERE ID = :RowID

UNION ALL

SELECT stlbr.fk_OrgActivityId, stlbr.SubmissionID, stlbr.FAArea, stlbr.FAPieceNumber, stlbr.FABoltoutQuantity, stlbr.FABoltoutPercent, stlbr.FARework, stlbr.FANotes, stlbr.ActivityType, stlbr.FATimeInForm, stlbr.Rev, stlbr.TimeStamp
FROM SteelBoltOutREV stlbr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelBoltout__count">
        <![CDATA[
        select count(*) from (SELECT stlb.* 
FROM SteelBoltOut stlb
WHERE ID = :RowID

UNION ALL

SELECT stlbr.fk_OrgActivityId, stlbr.SubmissionID, stlbr.FAArea, stlbr.FAPieceNumber, stlbr.FABoltoutQuantity, stlbr.FABoltoutPercent, stlbr.FARework, stlbr.FANotes, stlbr.ActivityType, stlbr.FATimeInForm, stlbr.Rev, stlbr.TimeStamp
FROM SteelBoltOutREV stlbr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidChangeLogByID">
        <![CDATA[
        SELECT ID,BidID,Scope,Phase,Area,Location,Elevation,CU,P6ID,P6Description,Stage,TestPackageNumber,CostCode,LineNumber,EngDrawingNumber,SheetNumber,RevisionNumber,System,Service,ClientPipeSpec,MaterialCode,Description,ComponentNumber,ECT,PipingActivityType,PipeSize,TakeOffQuantity,QuantityUnit,EstimatedHours,WBS1,WBS2,WBS3,WBS4,WBS5,WBS6,WBS7,WBS8,WBS9,WBS10,Rev,TimeStamp 
FROM trackerDetails td
WHERE ID = :ID
UNION
SELECT fk_OrgId,BidID,Scope,Phase,Area,Location,Elevation,CU,P6ID,P6Description,Stage,TestPackageNumber,CostCode,LineNumber,EngDrawingNumber,SheetNumber,RevisionNumber,System,Service,ClientPipeSpec,MaterialCode,Description,ComponentNumber,ECT,PipingActivityType,PipeSize,TakeOffQuantity,QuantityUnit,EstimatedHours,WBS1,WBS2,WBS3,WBS4,WBS5,WBS6,WBS7,WBS8,WBS9,WBS10,Rev,TimeStamp
FROM trackerDetailsREV tdr
WHERE tdr.fk_OrgID = :ID
Order By TimeStamp DESC
        ]]>
    <query-param name="ID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidChangeLogByID__count">
        <![CDATA[
        select count(*) from (SELECT ID,BidID,Scope,Phase,Area,Location,Elevation,CU,P6ID,P6Description,Stage,TestPackageNumber,CostCode,LineNumber,EngDrawingNumber,SheetNumber,RevisionNumber,System,Service,ClientPipeSpec,MaterialCode,Description,ComponentNumber,ECT,PipingActivityType,PipeSize,TakeOffQuantity,QuantityUnit,EstimatedHours,WBS1,WBS2,WBS3,WBS4,WBS5,WBS6,WBS7,WBS8,WBS9,WBS10,Rev,TimeStamp 
FROM trackerDetails td
WHERE ID = :ID
UNION
SELECT fk_OrgId,BidID,Scope,Phase,Area,Location,Elevation,CU,P6ID,P6Description,Stage,TestPackageNumber,CostCode,LineNumber,EngDrawingNumber,SheetNumber,RevisionNumber,System,Service,ClientPipeSpec,MaterialCode,Description,ComponentNumber,ECT,PipingActivityType,PipeSize,TakeOffQuantity,QuantityUnit,EstimatedHours,WBS1,WBS2,WBS3,WBS4,WBS5,WBS6,WBS7,WBS8,WBS9,WBS10,Rev,TimeStamp
FROM trackerDetailsREV tdr
WHERE tdr.fk_OrgID = :ID
Order By TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="ID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateEquipFAQuantity">
        <![CDATA[
        UPDATE `EquipFA` 
SET 
`FAPercentComplete`= :Percent
WHERE `ID`= :RowID
        ]]>
    <query-param name="Percent" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetSteelBidActivityQuantities">
        <![CDATA[
        SELECT std.BidID,
### Quantities ###
(std.TakeOffQuantity) AS SteelQuantity,
(std.WeldCount) AS WeldQuantity,  

### Hours ###
(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent'),0)) AS ShakeHours,
(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent'),0)) AS ErectHours,
(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent'),0)) AS BoltoutHours,
(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent'),0)) AS ImpHours,
(COALESCE(std.WeldHours,0)) AS WeldHours,
(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent'),0)) AS SellHours,
(COALESCE(IF(std.ActivityType = 'D', std.SteelHours, 0),0)) AS DemoHours,
(COALESCE(IF(std.ActivityType = 'MISC', std.SteelHours, 0),0)) AS MiscHours,

### Installed Quantities ###
sum(COALESCE(er.InstalledShake,0)) AS InstalledShake,
sum(COALESCE(er.InstalledErect,0)) AS InstalledErect,
sum(COALESCE(er.InstalledBoltout,0)) AS InstalledBoltout,
sum(COALESCE(er.InstalledImp,0)) AS InstalledImp,
sum(COALESCE(er.InstalledWeld,0)) AS InstalledWeld,
sum(COALESCE(er.InstalledSell,0)) AS InstalledSell,
sum(COALESCE(er.InstalledDemo,0)) AS InstalledDemo,
sum(COALESCE(er.InstalledMisc,0)) AS InstalledMisc

FROM (SELECT BidID, TestPackageNumber, ActivityType, 
		sum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours  
		FROM SteelTrackerDetails
        GROUP BY BidID) std

LEFT JOIN(SELECT std.BidID,
COALESCE(stls.FAShakeQuantity,0) AS InstalledShake,
COALESCE(stle.FAErectQuantity,0) AS InstalledErect,
COALESCE(stlb.FABoltOutQuantity,0) AS InstalledBoltout,
COALESCE(stli.FAImpQuantity,0) AS InstalledImp,
COALESCE(stlw.FAWeldQuantity,0) AS InstalledWeld,
COALESCE(stlsell.FASellQuantity,0) AS InstalledSell,
COALESCE(stld.DemoQuantity,0) AS InstalledDemo,
COALESCE(stlm.MiscQuantity,0) AS InstalledMisc
FROM SteelTrackerDetails std

LEFT JOIN SubmissionStatus ss
	ON ss.ActivityType IN (60,61,62,63,64,65,66,67,68,96)
    AND ss.fk_BidIDAssigned = std.BidID
LEFT JOIN SteelShake stls
	ON stls.ID = ss.ActivityRowId AND ss.ActivityType = 61 AND stls.FARework = 0
LEFT JOIN SteelErect stle
	ON stle.ID = ss.ActivityRowId AND ss.ActivityType = 62 AND stle.FARework = 0
LEFT JOIN SteelBoltOut stlb
	ON stlb.ID = ss.ActivityRowId AND ss.ActivityType = 63 AND stlb.FARework = 0
LEFT JOIN SteelImp stli
	ON stli.ID = ss.ActivityRowId AND ss.ActivityType = 64 AND stli.FARework = 0
LEFT JOIN SteelSell stlsell
	ON stlsell.ID = ss.ActivityRowId AND ss.ActivityType = 65 AND stlsell.FARework = 0
LEFT JOIN SteelDemo stld
	ON stld.ID = ss.ActivityRowId AND ss.ActivityType = 67
LEFT JOIN SteelWeld stlw
	ON stlw.ID = ss.ActivityRowId AND ss.ActivityType = 68 AND stlw.FARework = 0
LEFT JOIN SteelMisc stlm
	ON stlm.ID = ss.ActivityRowId AND ss.ActivityType = 96 AND stlm.MiscRework = 0
WHERE ss.fk_ActivityStatus IN (5,12)
) er
	ON er.BidID = std.BidID

WHERE std.BidID = :BidID
GROUP BY BidID
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetSteelBidActivityQuantities__count">
        <![CDATA[
        select count(*) from (SELECT std.BidID,
### Quantities ###
(std.TakeOffQuantity) AS SteelQuantity,
(std.WeldCount) AS WeldQuantity,  

### Hours ###
(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent'),0)) AS ShakeHours,
(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent'),0)) AS ErectHours,
(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent'),0)) AS BoltoutHours,
(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent'),0)) AS ImpHours,
(COALESCE(std.WeldHours,0)) AS WeldHours,
(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent'),0)) AS SellHours,
(COALESCE(IF(std.ActivityType = 'D', std.SteelHours, 0),0)) AS DemoHours,
(COALESCE(IF(std.ActivityType = 'MISC', std.SteelHours, 0),0)) AS MiscHours,

### Installed Quantities ###
sum(COALESCE(er.InstalledShake,0)) AS InstalledShake,
sum(COALESCE(er.InstalledErect,0)) AS InstalledErect,
sum(COALESCE(er.InstalledBoltout,0)) AS InstalledBoltout,
sum(COALESCE(er.InstalledImp,0)) AS InstalledImp,
sum(COALESCE(er.InstalledWeld,0)) AS InstalledWeld,
sum(COALESCE(er.InstalledSell,0)) AS InstalledSell,
sum(COALESCE(er.InstalledDemo,0)) AS InstalledDemo,
sum(COALESCE(er.InstalledMisc,0)) AS InstalledMisc

FROM (SELECT BidID, TestPackageNumber, ActivityType, 
		sum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours  
		FROM SteelTrackerDetails
        GROUP BY BidID) std

LEFT JOIN(SELECT std.BidID,
COALESCE(stls.FAShakeQuantity,0) AS InstalledShake,
COALESCE(stle.FAErectQuantity,0) AS InstalledErect,
COALESCE(stlb.FABoltOutQuantity,0) AS InstalledBoltout,
COALESCE(stli.FAImpQuantity,0) AS InstalledImp,
COALESCE(stlw.FAWeldQuantity,0) AS InstalledWeld,
COALESCE(stlsell.FASellQuantity,0) AS InstalledSell,
COALESCE(stld.DemoQuantity,0) AS InstalledDemo,
COALESCE(stlm.MiscQuantity,0) AS InstalledMisc
FROM SteelTrackerDetails std

LEFT JOIN SubmissionStatus ss
	ON ss.ActivityType IN (60,61,62,63,64,65,66,67,68,96)
    AND ss.fk_BidIDAssigned = std.BidID
LEFT JOIN SteelShake stls
	ON stls.ID = ss.ActivityRowId AND ss.ActivityType = 61 AND stls.FARework = 0
LEFT JOIN SteelErect stle
	ON stle.ID = ss.ActivityRowId AND ss.ActivityType = 62 AND stle.FARework = 0
LEFT JOIN SteelBoltOut stlb
	ON stlb.ID = ss.ActivityRowId AND ss.ActivityType = 63 AND stlb.FARework = 0
LEFT JOIN SteelImp stli
	ON stli.ID = ss.ActivityRowId AND ss.ActivityType = 64 AND stli.FARework = 0
LEFT JOIN SteelSell stlsell
	ON stlsell.ID = ss.ActivityRowId AND ss.ActivityType = 65 AND stlsell.FARework = 0
LEFT JOIN SteelDemo stld
	ON stld.ID = ss.ActivityRowId AND ss.ActivityType = 67
LEFT JOIN SteelWeld stlw
	ON stlw.ID = ss.ActivityRowId AND ss.ActivityType = 68 AND stlw.FARework = 0
LEFT JOIN SteelMisc stlm
	ON stlm.ID = ss.ActivityRowId AND ss.ActivityType = 96 AND stlm.MiscRework = 0
WHERE ss.fk_ActivityStatus IN (5,12)
) er
	ON er.BidID = std.BidID

WHERE std.BidID = :BidID
GROUP BY BidID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryCivilMisc">
        <![CDATA[
        SELECT cm.* 
FROM CivilMisc cm
WHERE ID = :RowID

UNION ALL

SELECT cmr.fk_OrgActivityId, cmr.SubmissionID, cmr.MiscFoundation, cmr.MiscDrawingNumber, cmr.MiscDetailDrawingNumber, cmr.MiscPercentComplete, cmr.MiscRework, cmr.MiscNotes, cmr.ActivityType, 
cmr.MiscTimeInForm, cmr.Rev, cmr.TimeStamp
FROM CivilMiscREV cmr
WHERE cmr.fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryCivilMisc__count">
        <![CDATA[
        select count(*) from (SELECT cm.* 
FROM CivilMisc cm
WHERE ID = :RowID

UNION ALL

SELECT cmr.fk_OrgActivityId, cmr.SubmissionID, cmr.MiscFoundation, cmr.MiscDrawingNumber, cmr.MiscDetailDrawingNumber, cmr.MiscPercentComplete, cmr.MiscRework, cmr.MiscNotes, cmr.ActivityType, 
cmr.MiscTimeInForm, cmr.Rev, cmr.TimeStamp
FROM CivilMiscREV cmr
WHERE cmr.fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantityBoltUpInstalled">
        <![CDATA[
        SELECT sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) AS Total
FROM SubmissionStatus ss

    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        
		LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled
				FROM SubsBoltUp sb 
                WHERE sb.BoltUpRework = 0) sb
		ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smb
		ON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'


WHERE ss.ActivityType IN (21, 91)
AND ss.fk_ActivityStatus IN (5,12) 
AND fk_BidIDAssigned = :BidID
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantityBoltUpInstalled__count">
        <![CDATA[
        select count(*) from (SELECT sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) AS Total
FROM SubmissionStatus ss

    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        
		LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled
				FROM SubsBoltUp sb 
                WHERE sb.BoltUpRework = 0) sb
		ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smb
		ON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'


WHERE ss.ActivityType IN (21, 91)
AND ss.fk_ActivityStatus IN (5,12) 
AND fk_BidIDAssigned = :BidID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidActivityMatchesByTestPackageSteel">
        <![CDATA[
        SELECT std.BidID, std.Scope, std.EWONumber, std.Phase, std.Area, std.Location, std.Elevation, std.CU, std.P6ID, std.P6Description, std.Stage, std.TestPackageNumber, std.CostCode, std.PieceMark, 
std.RevisionNumber, std.Description, std.ActivityType, std.SteelType, std.MaterialCode, std.Length, std.Weight, 
std.WeldCount, std.TakeOffQuantity, std.SteelHours, std.WeldHours, 
std.WBS1, std.WBS2, std.WBS3, std.WBS4, std.WBS5, std.WBS6, std.WBS7, std.WBS8, std.WBS9, std.WBS10,

### Installed Quantities ###
sum(COALESCE(stlsell.FASellQuantity,0)) AS InstalledSell,

### Remaining Quantities ###
(COALESCE(std.TakeOffQuantity,0) - sum(COALESCE(stlsell.FASellQuantity,0))) AS RemainingSell

FROM (SELECT BidID, Scope, EWONumber, Phase, Area, Location, Elevation, CU, P6ID, P6Description, Stage, TestPackageNumber, CostCode, PieceMark, RevisionNumber, Description, ActivityType, SteelType, 
		MaterialCode, Length, Weight, 
		sum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,
        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10
		FROM SteelTrackerDetails 
		GROUP BY BidID) std
        
LEFT JOIN SubmissionStatus ss
	ON ss.fk_BidIDAssigned = std.BidID AND ss.ActivityType = 65 AND ss.fk_ActivityStatus IN (5,12)
    
LEFT JOIN SteelSell stlsell
	ON stlsell.ID = ss.ActivityRowId AND stlsell.FARework = 0
  
WHERE TestPackageNumber = :TestPackage
GROUP BY BidID
ORDER BY std.Area, std.PieceMark
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetBidActivityMatchesByTestPackageSteel__count">
        <![CDATA[
        select count(*) from (SELECT std.BidID, std.Scope, std.EWONumber, std.Phase, std.Area, std.Location, std.Elevation, std.CU, std.P6ID, std.P6Description, std.Stage, std.TestPackageNumber, std.CostCode, std.PieceMark, 
std.RevisionNumber, std.Description, std.ActivityType, std.SteelType, std.MaterialCode, std.Length, std.Weight, 
std.WeldCount, std.TakeOffQuantity, std.SteelHours, std.WeldHours, 
std.WBS1, std.WBS2, std.WBS3, std.WBS4, std.WBS5, std.WBS6, std.WBS7, std.WBS8, std.WBS9, std.WBS10,

### Installed Quantities ###
sum(COALESCE(stlsell.FASellQuantity,0)) AS InstalledSell,

### Remaining Quantities ###
(COALESCE(std.TakeOffQuantity,0) - sum(COALESCE(stlsell.FASellQuantity,0))) AS RemainingSell

FROM (SELECT BidID, Scope, EWONumber, Phase, Area, Location, Elevation, CU, P6ID, P6Description, Stage, TestPackageNumber, CostCode, PieceMark, RevisionNumber, Description, ActivityType, SteelType, 
		MaterialCode, Length, Weight, 
		sum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,
        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10
		FROM SteelTrackerDetails 
		GROUP BY BidID) std
        
LEFT JOIN SubmissionStatus ss
	ON ss.fk_BidIDAssigned = std.BidID AND ss.ActivityType = 65 AND ss.fk_ActivityStatus IN (5,12)
    
LEFT JOIN SteelSell stlsell
	ON stlsell.ID = ss.ActivityRowId AND stlsell.FARework = 0
  
WHERE TestPackageNumber = :TestPackage
GROUP BY BidID
ORDER BY std.Area, std.PieceMark) wmTempTable
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetALLTotalsByP6ID">
        <![CDATA[
        SELECT *
FROM CacheTable_StatsByP6ID
        ]]>
    </sql-query>

    <sql-query name="GetALLTotalsByP6ID__count">
        <![CDATA[
        select count(*) from (SELECT *
FROM CacheTable_StatsByP6ID) wmTempTable
        ]]>
    </sql-query>

    <sql-query name="GetBidWorkHistoryEquip">
        <![CDATA[
        SELECT ss.fk_SubmissionId, ss.PSAActivityID, at.ActivityType, ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,


### Quantities Installed ###
sum(COALESCE(efa.FAQuantity,0)) AS Quantity,

(COALESCE(efa.FAPercentComplete,0) * 100) AS PercentClaimed,

IF(efa.FANotes IS NOT NULL, efa.FANotes, '') AS Notes,
(efa.FARework = 1) AS Rework



FROM SubmissionStatus ss

####User Info Joins ####
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 80
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 

#### Assigned Activities Joins #####    
JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN EquipFA efa
	ON efa.ID = ss.ActivityRowId AND ss.ActivityType = 80

LEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours
			FROM `EquipTrackerDetails`
			GROUP BY BidID) etd
	ON etd.BidID = ss.fk_BidIDAssigned

WHERE ss.fk_BidIDAssigned = :BidID        
AND fk_ActivityStatus IN (5,12)
AND ss.ActivityType = 80

GROUP BY ss.PSAActivityID
        ]]>
    <query-param name="BidID" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetBidWorkHistoryEquip__count">
        <![CDATA[
        select count(*) from (SELECT ss.fk_SubmissionId, ss.PSAActivityID, at.ActivityType, ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,


### Quantities Installed ###
sum(COALESCE(efa.FAQuantity,0)) AS Quantity,

(COALESCE(efa.FAPercentComplete,0) * 100) AS PercentClaimed,

IF(efa.FANotes IS NOT NULL, efa.FANotes, '') AS Notes,
(efa.FARework = 1) AS Rework



FROM SubmissionStatus ss

####User Info Joins ####
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType = 80
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 

#### Assigned Activities Joins #####    
JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN EquipFA efa
	ON efa.ID = ss.ActivityRowId AND ss.ActivityType = 80

LEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours
			FROM `EquipTrackerDetails`
			GROUP BY BidID) etd
	ON etd.BidID = ss.fk_BidIDAssigned

WHERE ss.fk_BidIDAssigned = :BidID        
AND fk_ActivityStatus IN (5,12)
AND ss.ActivityType = 80

GROUP BY ss.PSAActivityID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetEquipBidActivityQuantites">
        <![CDATA[
        SELECT etd.BidID,
sum(etd.TakeOffQuantity) AS TakeOffQuantity, etd.QuantityUnit,

sum(COALESCE(etd.EstimatedHours,0)) AS FAHours,
sum(COALESCE(er.InstalledPercent,0)) AS InstalledPercent

FROM (SELECT BidID, TakeOffQuantity, QuantityUnit, EstimatedHours FROM EquipTrackerDetails WHERE BidID = :BidID GROUP BY BidID) etd
LEFT JOIN(SELECT etd.BidID,
COALESCE(efa.FAPercentComplete,0) AS InstalledPercent

FROM SubmissionStatus ss 
LEFT JOIN EquipTrackerDetails etd
    ON etd.BidID = ss.fk_BidIDAssigned
LEFT JOIN EquipFA efa
	ON efa.ID = ss.ActivityRowId AND ss.ActivityType = 80 AND efa.FARework = 0

WHERE ss.fk_BidIDAssigned = :BidID
AND ss.ActivityType = 80
AND ss.fk_ActivityStatus IN(5,12)
) er
	ON er.BidID = etd.BidID
GROUP BY etd.BidID
        ]]>
    <query-param name="BidID" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetEquipBidActivityQuantites__count">
        <![CDATA[
        select count(*) from (SELECT etd.BidID,
sum(etd.TakeOffQuantity) AS TakeOffQuantity, etd.QuantityUnit,

sum(COALESCE(etd.EstimatedHours,0)) AS FAHours,
sum(COALESCE(er.InstalledPercent,0)) AS InstalledPercent

FROM (SELECT BidID, TakeOffQuantity, QuantityUnit, EstimatedHours FROM EquipTrackerDetails WHERE BidID = :BidID GROUP BY BidID) etd
LEFT JOIN(SELECT etd.BidID,
COALESCE(efa.FAPercentComplete,0) AS InstalledPercent

FROM SubmissionStatus ss 
LEFT JOIN EquipTrackerDetails etd
    ON etd.BidID = ss.fk_BidIDAssigned
LEFT JOIN EquipFA efa
	ON efa.ID = ss.ActivityRowId AND ss.ActivityType = 80 AND efa.FARework = 0

WHERE ss.fk_BidIDAssigned = :BidID
AND ss.ActivityType = 80
AND ss.fk_ActivityStatus IN(5,12)
) er
	ON er.BidID = etd.BidID
GROUP BY etd.BidID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.String"/>
    </sql-query>

    <sql-query name="UpdateSteelBoltoutQuantity">
        <![CDATA[
        UPDATE `SteelBoltOut` 
SET 
 
`FABoltOutQuantity`= :Quantity,
`FABoltOutPercent`= :Percent
WHERE `ID`= :RowID
        ]]>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Percent" type="java.math.BigDecimal"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetReportDPRSteelDetailed">
        <![CDATA[
        SELECT  
(IF(stls.FAArea IS NOT NULL, stls.FAArea,
IF(stle.FAArea IS NOT NULL, stle.FAArea,
IF(stlb.FAArea IS NOT NULL, stlb.FAArea,
IF(stli.FAArea IS NOT NULL, stli.FAArea,
IF(stlw.FAArea IS NOT NULL, stlw.FAArea,
IF(stlsell.FAArea IS NOT NULL, stlsell.FAArea,
IF(stlm.MiscArea IS NOT NULL, stlm.MiscArea,0)
))))))) AS Area,

(IF(stls.FAPieceNumber IS NOT NULL, stls.FAPieceNumber,
IF(stle.FAPieceNumber IS NOT NULL, stle.FAPieceNumber,
IF(stlb.FAPieceNumber IS NOT NULL, stlb.FAPieceNumber,
IF(stli.FAPieceNumber IS NOT NULL, stli.FAPieceNumber,
IF(stlw.FAPieceNumber IS NOT NULL, stlw.FAPieceNumber,
IF(stlsell.FAPieceNumber IS NOT NULL, stlsell.FAPieceNumber,
IF(stlm.MiscPieceNumber IS NOT NULL, stlm.MiscPieceNumber,0)
))))))) AS PieceNumber,

COALESCE(stls.FAShakeQuantity,0) AS ShakeQuantity,
COALESCE(stle.FAErectQuantity,0) AS ErectQuantity,
CONCAT(TRUNCATE(COALESCE(stle.FAErectPercent,0) * 100,0), '%') AS ErectPercent,
COALESCE(stlb.FABoltOutQuantity,0) AS BoltoutQuantity,
CONCAT(TRUNCATE(COALESCE(stlb.FABoltOutPercent,0) * 100,0), '%') AS BoltoutPercent,
COALESCE(stli.FAImpQuantity,0) AS ImpQuantity,
CONCAT(TRUNCATE(COALESCE(stli.FAImpPercent,0) * 100,0), '%') AS ImpPercent,
COALESCE(stlw.FAWeldQuantity,0) AS WeldQuantity,
CONCAT(TRUNCATE(COALESCE(stlw.FAWeldPercent,0) * 100,0), '%') AS WeldPercent,
COALESCE(stlsell.FASellQuantity,0) AS SellQuantity,
COALESCE(stld.DemoQuantity,0) AS DemoQuantity,
COALESCE(stlm.MiscQuantity,0) AS MiscQuantity,
DATE(sd.ReceivedTime) AS ReceivedTime,
(ats.Status) AS CurrentStatus

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.REF_ActivityStatuses ats
    ON ats.ID = ss.fk_ActivityStatus
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

LEFT JOIN SteelShake stls
	ON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID 
LEFT JOIN SteelErect stle
	ON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID
LEFT JOIN SteelBoltOut stlb
	ON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID
LEFT JOIN SteelImp stli
	ON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID
LEFT JOIN SteelWeld stlw
	ON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID
LEFT JOIN SteelSell stlsell
	ON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID
LEFT JOIN SteelDemo stld
	ON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID
LEFT JOIN SteelMisc stlm
	ON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND ss.ActivityType IN (61,62,63,64,65,67,68,96)
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate
GROUP BY ss.PSAActivityID, Date(sd.ReceivedTime)
        ]]>
    <query-param name="PM" type="java.lang.String"/>
    <query-param name="ConstM" type="java.lang.String"/>
    <query-param name="SiteM" type="java.lang.String"/>
    <query-param name="AreaM" type="java.lang.String"/>
    <query-param name="Super" type="java.lang.String"/>
    <query-param name="GF" type="java.lang.String"/>
    <query-param name="Foreman" type="java.lang.String"/>
    <query-param name="StartDate" type="java.sql.Date"/>
    <query-param name="EndDate" type="java.sql.Date"/>
    </sql-query>

    <sql-query name="GetReportDPRSteelDetailed__count">
        <![CDATA[
        select count(*) from (SELECT  
(IF(stls.FAArea IS NOT NULL, stls.FAArea,
IF(stle.FAArea IS NOT NULL, stle.FAArea,
IF(stlb.FAArea IS NOT NULL, stlb.FAArea,
IF(stli.FAArea IS NOT NULL, stli.FAArea,
IF(stlw.FAArea IS NOT NULL, stlw.FAArea,
IF(stlsell.FAArea IS NOT NULL, stlsell.FAArea,
IF(stlm.MiscArea IS NOT NULL, stlm.MiscArea,0)
))))))) AS Area,

(IF(stls.FAPieceNumber IS NOT NULL, stls.FAPieceNumber,
IF(stle.FAPieceNumber IS NOT NULL, stle.FAPieceNumber,
IF(stlb.FAPieceNumber IS NOT NULL, stlb.FAPieceNumber,
IF(stli.FAPieceNumber IS NOT NULL, stli.FAPieceNumber,
IF(stlw.FAPieceNumber IS NOT NULL, stlw.FAPieceNumber,
IF(stlsell.FAPieceNumber IS NOT NULL, stlsell.FAPieceNumber,
IF(stlm.MiscPieceNumber IS NOT NULL, stlm.MiscPieceNumber,0)
))))))) AS PieceNumber,

COALESCE(stls.FAShakeQuantity,0) AS ShakeQuantity,
COALESCE(stle.FAErectQuantity,0) AS ErectQuantity,
CONCAT(TRUNCATE(COALESCE(stle.FAErectPercent,0) * 100,0), '%') AS ErectPercent,
COALESCE(stlb.FABoltOutQuantity,0) AS BoltoutQuantity,
CONCAT(TRUNCATE(COALESCE(stlb.FABoltOutPercent,0) * 100,0), '%') AS BoltoutPercent,
COALESCE(stli.FAImpQuantity,0) AS ImpQuantity,
CONCAT(TRUNCATE(COALESCE(stli.FAImpPercent,0) * 100,0), '%') AS ImpPercent,
COALESCE(stlw.FAWeldQuantity,0) AS WeldQuantity,
CONCAT(TRUNCATE(COALESCE(stlw.FAWeldPercent,0) * 100,0), '%') AS WeldPercent,
COALESCE(stlsell.FASellQuantity,0) AS SellQuantity,
COALESCE(stld.DemoQuantity,0) AS DemoQuantity,
COALESCE(stlm.MiscQuantity,0) AS MiscQuantity,
DATE(sd.ReceivedTime) AS ReceivedTime,
(ats.Status) AS CurrentStatus

FROM SubmissionStatus ss

LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.REF_ActivityStatuses ats
    ON ats.ID = ss.fk_ActivityStatus
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

LEFT JOIN SteelShake stls
	ON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID 
LEFT JOIN SteelErect stle
	ON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID
LEFT JOIN SteelBoltOut stlb
	ON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID
LEFT JOIN SteelImp stli
	ON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID
LEFT JOIN SteelWeld stlw
	ON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID
LEFT JOIN SteelSell stlsell
	ON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID
LEFT JOIN SteelDemo stld
	ON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID
LEFT JOIN SteelMisc stlm
	ON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID

WHERE ((
	(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) 
	AND tc.Superintendent LIKE :Super 
	AND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) 
    ) OR (
	(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) 
	AND tcr.Superintendent LIKE :Super 
	AND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)
    ))
AND ss.ActivityType IN (61,62,63,64,65,67,68,96)
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate
GROUP BY ss.PSAActivityID, Date(sd.ReceivedTime)) wmTempTable
        ]]>
    <query-param name="PM" type="java.lang.String"/>
    <query-param name="ConstM" type="java.lang.String"/>
    <query-param name="SiteM" type="java.lang.String"/>
    <query-param name="AreaM" type="java.lang.String"/>
    <query-param name="Super" type="java.lang.String"/>
    <query-param name="GF" type="java.lang.String"/>
    <query-param name="Foreman" type="java.lang.String"/>
    <query-param name="StartDate" type="java.sql.Date"/>
    <query-param name="EndDate" type="java.sql.Date"/>
    </sql-query>

    <sql-query name="UpdateSettingSteelBoltout">
        <![CDATA[
        UPDATE SETTINGS
SET `Value1`= :Value1 
WHERE `Label`='SteelBoltoutHoursPercent'
        ]]>
    <query-param name="Value1" type="java.math.BigDecimal"/>
    </sql-query>

    <sql-query name="GetNotesByPSAActivityID">
        <![CDATA[
        SELECT ssn.Notes, ssn.TimeStamp, u.Email
FROM SSNotes ssn
	JOIN PSA.tblUserPSA u
		ON u.ID = ssn.fk_uid
WHERE ssn.fk_PSAActivityID = :ActivityID
        ]]>
    <query-param name="ActivityID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetNotesByPSAActivityID__count">
        <![CDATA[
        select count(*) from (SELECT ssn.Notes, ssn.TimeStamp, u.Email
FROM SSNotes ssn
	JOIN PSA.tblUserPSA u
		ON u.ID = ssn.fk_uid
WHERE ssn.fk_PSAActivityID = :ActivityID) wmTempTable
        ]]>
    <query-param name="ActivityID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetReportDPRCivil">
        <![CDATA[
        SELECT 
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  

cfa.FAFoundation AS Foundation, 
cfa.FADescription AS Description, 
cfa.FADrawingNumber AS DrawingNumber, 
cfa.FADetailDrawingNumber AS DetailDrawing,
CONCAT(cfa.FAPercentComplete*100,"%") AS QuantityInstalled,
ats.Status AS CurrentStatus,
cfa.FARework AS Rework,
cfa.FANotes AS Notes,
DATE(sd.ReceivedTime) AS DateSubmitted


FROM SubmissionStatus ss
JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
        
JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

JOIN SubsDetails sd
	ON sd.SubmissionId = ss.fk_SubmissionId
left JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
left JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

JOIN CivilFA cfa
	ON cfa.ID = ss.ActivityRowId AND ss.ActivityType = 70
        


WHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day




UNION



SELECT 
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  

cfa.FAFoundation AS Foundation, 
cfa.FADescription AS Description, 
cfa.FADrawingNumber AS DrawingNumber, 
cfa.FADetailDrawingNumber AS DetailDrawing,
CONCAT(cfa.FAQuantity," yds") AS QuantityInstalled,
ats.Status AS CurrentStatus,
cfa.FARework AS Rework,
cfa.FANotes AS Notes,
DATE(sd.ReceivedTime) AS DateSubmitted


FROM SubmissionStatus ss
JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
        
JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

JOIN SubsDetails sd
	ON sd.SubmissionId = ss.fk_SubmissionId
left JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
left JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

JOIN CivilFA cfa
	ON cfa.ID = ss.ActivityRowId AND ss.ActivityType = 71
        



WHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day




UNION




SELECT 
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  

'N/A' AS Foundation, 
CONCAT('Test Package: ',csell.SellTestPackageNumber) AS Description, 
'N/A' AS DrawingNumber, 
'N/A' AS DetailDrawing,
1 AS QuantityInstalled,
ats.Status AS CurrentStatus,
'0' AS Rework,
csell.SellNotes AS Notes,
DATE(sd.ReceivedTime) AS DateSubmitted


FROM SubmissionStatus ss
JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
        
JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

JOIN SubsDetails sd
	ON sd.SubmissionId = ss.fk_SubmissionId
left JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
left JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

JOIN CivilSellPackage csell
	ON csell.ID = ss.ActivityRowId AND ss.ActivityType = 72


AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day
        ]]>
    <query-param name="ForemanID" type="java.lang.String"/>
    <query-param name="SuperID" type="java.lang.String"/>
    <query-param name="ManagerID" type="java.lang.String"/>
    <query-param name="StartDate" type="java.sql.Date"/>
    <query-param name="EndDate" type="java.sql.Date"/>
    </sql-query>

    <sql-query name="GetReportDPRCivil__count">
        <![CDATA[
        select count(*) from (SELECT 
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  

cfa.FAFoundation AS Foundation, 
cfa.FADescription AS Description, 
cfa.FADrawingNumber AS DrawingNumber, 
cfa.FADetailDrawingNumber AS DetailDrawing,
CONCAT(cfa.FAPercentComplete*100,"%") AS QuantityInstalled,
ats.Status AS CurrentStatus,
cfa.FARework AS Rework,
cfa.FANotes AS Notes,
DATE(sd.ReceivedTime) AS DateSubmitted


FROM SubmissionStatus ss
JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
        
JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

JOIN SubsDetails sd
	ON sd.SubmissionId = ss.fk_SubmissionId
left JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
left JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

JOIN CivilFA cfa
	ON cfa.ID = ss.ActivityRowId AND ss.ActivityType = 70
        


WHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day




UNION



SELECT 
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  

cfa.FAFoundation AS Foundation, 
cfa.FADescription AS Description, 
cfa.FADrawingNumber AS DrawingNumber, 
cfa.FADetailDrawingNumber AS DetailDrawing,
CONCAT(cfa.FAQuantity," yds") AS QuantityInstalled,
ats.Status AS CurrentStatus,
cfa.FARework AS Rework,
cfa.FANotes AS Notes,
DATE(sd.ReceivedTime) AS DateSubmitted


FROM SubmissionStatus ss
JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
        
JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

JOIN SubsDetails sd
	ON sd.SubmissionId = ss.fk_SubmissionId
left JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
left JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

JOIN CivilFA cfa
	ON cfa.ID = ss.ActivityRowId AND ss.ActivityType = 71
        



WHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day




UNION




SELECT 
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  

'N/A' AS Foundation, 
CONCAT('Test Package: ',csell.SellTestPackageNumber) AS Description, 
'N/A' AS DrawingNumber, 
'N/A' AS DetailDrawing,
1 AS QuantityInstalled,
ats.Status AS CurrentStatus,
'0' AS Rework,
csell.SellNotes AS Notes,
DATE(sd.ReceivedTime) AS DateSubmitted


FROM SubmissionStatus ss
JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
        
JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

JOIN SubsDetails sd
	ON sd.SubmissionId = ss.fk_SubmissionId
left JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
left JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

JOIN CivilSellPackage csell
	ON csell.ID = ss.ActivityRowId AND ss.ActivityType = 72


AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day) wmTempTable
        ]]>
    <query-param name="ForemanID" type="java.lang.String"/>
    <query-param name="SuperID" type="java.lang.String"/>
    <query-param name="ManagerID" type="java.lang.String"/>
    <query-param name="StartDate" type="java.sql.Date"/>
    <query-param name="EndDate" type="java.sql.Date"/>
    </sql-query>

    <sql-query name="GetBidActivityMatchesSteel">
        <![CDATA[
        SELECT 
min(std.UID) AS UID, min(std.BidID) AS BidID, std.EWONumber, std.Scope, std.Phase,  std.Stage, std.TestPackageNumber, std.CostCode, std.P6ID, std.AssignedContractor, std.Area, std.Location, std.Structure, std.CU, 
std.Elevation, std.P6Description, std.PieceMark, std.PieceMarkRev, std.Description, std.ActivityType, std.ClientMaterialSpec, std.PerformanceMaterialSpec, std.MaterialType, sum(std.Length) AS Length, 
sum(std.Weight) AS Weight, std.System, std.Service, sum(std.TakeOffQuantity) AS TakeOffQuantity, sum(std.WeldCount) AS WeldCount, sum(std.SteelHours) AS SteelHours, sum(std.WeldHours) WeldHours,
std.WBS1, std.WBS2, std.WBS3, std.WBS4, std.WBS5, std.WBS6, std.WBS7, std.WBS8, std.WBS9, std.WBS10

FROM SteelTrackerDetails std
WHERE Area LIKE :Area
AND PieceMark LIKE :PieceMark
AND ActivityType LIKE :BidActivityType
AND MaterialType LIKE :SteelType
GROUP BY Area, PieceMark
        ]]>
    <query-param name="Area" type="java.lang.String"/>
    <query-param name="PieceMark" type="java.lang.String"/>
    <query-param name="BidActivityType" type="java.lang.String"/>
    <query-param name="SteelType" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetBidActivityMatchesSteel__count">
        <![CDATA[
        select count(*) from (SELECT 
min(std.UID) AS UID, min(std.BidID) AS BidID, std.EWONumber, std.Scope, std.Phase,  std.Stage, std.TestPackageNumber, std.CostCode, std.P6ID, std.AssignedContractor, std.Area, std.Location, std.Structure, std.CU, 
std.Elevation, std.P6Description, std.PieceMark, std.PieceMarkRev, std.Description, std.ActivityType, std.ClientMaterialSpec, std.PerformanceMaterialSpec, std.MaterialType, sum(std.Length) AS Length, 
sum(std.Weight) AS Weight, std.System, std.Service, sum(std.TakeOffQuantity) AS TakeOffQuantity, sum(std.WeldCount) AS WeldCount, sum(std.SteelHours) AS SteelHours, sum(std.WeldHours) WeldHours,
std.WBS1, std.WBS2, std.WBS3, std.WBS4, std.WBS5, std.WBS6, std.WBS7, std.WBS8, std.WBS9, std.WBS10

FROM SteelTrackerDetails std
WHERE Area LIKE :Area
AND PieceMark LIKE :PieceMark
AND ActivityType LIKE :BidActivityType
AND MaterialType LIKE :SteelType
GROUP BY Area, PieceMark) wmTempTable
        ]]>
    <query-param name="Area" type="java.lang.String"/>
    <query-param name="PieceMark" type="java.lang.String"/>
    <query-param name="BidActivityType" type="java.lang.String"/>
    <query-param name="SteelType" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetSettingSteelBoltoutPercent">
        <![CDATA[
        SELECT * 
FROM SETTINGS
WHERE Label = 'SteelBoltoutHoursPercent'
        ]]>
    </sql-query>

    <sql-query name="GetSettingSteelBoltoutPercent__count">
        <![CDATA[
        select count(*) from (SELECT * 
FROM SETTINGS
WHERE Label = 'SteelBoltoutHoursPercent') wmTempTable
        ]]>
    </sql-query>

    <sql-query name="UpdateCivilFAQuantity">
        <![CDATA[
        UPDATE `CivilFA` 
SET 
`FAPercentComplete`= :Percent,
`FAQuantity`= :Quantity
WHERE `ID`= :RowID
        ]]>
    <query-param name="Percent" type="java.math.BigDecimal"/>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetCivilBidActivityQuantities">
        <![CDATA[
        SELECT ctd.BidID,
sum(ctd.TakeOffQuantity) AS TakeOffQuantity, ctd.QuantityUnit,

sum(COALESCE(ctd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent'),0)) AS FAHours,
sum(COALESCE(er.InstalledQuantity,0)) AS InstalledQuantity,
sum(COALESCE(er.InstalledPercent,0)) AS InstalledPercent

FROM (SELECT BidID, TakeOffQuantity, QuantityUnit, EstimatedHours FROM CivilTrackerDetails WHERE BidID = :BidID GROUP BY BidID) ctd
LEFT JOIN(SELECT ctd.BidID,
COALESCE(
IF(cfa.ActivityType = 70, 
/*TRUE*/((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cm.MiscPercentComplete,0)) * ctd.TakeOffQuantity),
/*FALSE*/cfa.FAQuantity)
,0) AS InstalledQuantity,
(COALESCE(cfa.FAPercentComplete,0) + COALESCE(cm.MiscPercentComplete,0)) AS InstalledPercent

FROM SubmissionStatus ss 
LEFT JOIN CivilTrackerDetails ctd
    ON ctd.BidID = ss.fk_BidIDAssigned
LEFT JOIN CivilFA cfa
	ON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71) AND cfa.FARework = 0
LEFT JOIN CivilMisc cm
	ON cm.ID = ss.ActivityRowId AND ss.ActivityType = 97 AND cm.MiscRework = 0
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.ActivityType IN (70,71,77,97)
AND ss.fk_ActivityStatus IN(5,12)
) er
	ON er.BidID = ctd.BidID
GROUP BY ctd.BidID
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetCivilBidActivityQuantities__count">
        <![CDATA[
        select count(*) from (SELECT ctd.BidID,
sum(ctd.TakeOffQuantity) AS TakeOffQuantity, ctd.QuantityUnit,

sum(COALESCE(ctd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent'),0)) AS FAHours,
sum(COALESCE(er.InstalledQuantity,0)) AS InstalledQuantity,
sum(COALESCE(er.InstalledPercent,0)) AS InstalledPercent

FROM (SELECT BidID, TakeOffQuantity, QuantityUnit, EstimatedHours FROM CivilTrackerDetails WHERE BidID = :BidID GROUP BY BidID) ctd
LEFT JOIN(SELECT ctd.BidID,
COALESCE(
IF(cfa.ActivityType = 70, 
/*TRUE*/((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cm.MiscPercentComplete,0)) * ctd.TakeOffQuantity),
/*FALSE*/cfa.FAQuantity)
,0) AS InstalledQuantity,
(COALESCE(cfa.FAPercentComplete,0) + COALESCE(cm.MiscPercentComplete,0)) AS InstalledPercent

FROM SubmissionStatus ss 
LEFT JOIN CivilTrackerDetails ctd
    ON ctd.BidID = ss.fk_BidIDAssigned
LEFT JOIN CivilFA cfa
	ON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71) AND cfa.FARework = 0
LEFT JOIN CivilMisc cm
	ON cm.ID = ss.ActivityRowId AND ss.ActivityType = 97 AND cm.MiscRework = 0
WHERE ss.fk_BidIDAssigned = :BidID
AND ss.ActivityType IN (70,71,77,97)
AND ss.fk_ActivityStatus IN(5,12)
) er
	ON er.BidID = ctd.BidID
GROUP BY ctd.BidID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSettingSteelErect">
        <![CDATA[
        UPDATE SETTINGS
SET `Value1`= :Value1 
WHERE `Label`='SteelErectHoursPercent'
        ]]>
    <query-param name="Value1" type="java.math.BigDecimal"/>
    </sql-query>

    <sql-query name="GetActivityHistoryStatus">
        <![CDATA[
        SELECT ss.PSAActivityID, CONCAT(ats.Status, ' - ', IF(ss.LockField = 1, 'Locked', COALESCE(ss.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, ss.TimeStamp
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus
LEFT JOIN PSA.tblUserPSA u
	ON u.ID = fk_LastModifiedBy
    
WHERE PSAActivityID = :PSAActivityID

UNION ALL

SELECT ssr.*
FROM (SELECT ssr.fk_PSAActivityID, CONCAT(ats.Status, ' - ', IF(ssr.LockField = 1, 'Locked', COALESCE(ssr.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, ssr.TimeStamp
FROM SubmissionStatusREV ssr
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ssr.fk_ActivityStatus
LEFT JOIN PSA.tblUserPSA u
	ON u.ID = fk_LastModifiedBy
WHERE fk_PSAActivityID = :PSAActivityID
ORDER BY ssr.TimeStamp DESC) ssr
        ]]>
    <query-param name="PSAActivityID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryStatus__count">
        <![CDATA[
        select count(*) from (SELECT ss.PSAActivityID, CONCAT(ats.Status, ' - ', IF(ss.LockField = 1, 'Locked', COALESCE(ss.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, ss.TimeStamp
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus
LEFT JOIN PSA.tblUserPSA u
	ON u.ID = fk_LastModifiedBy
    
WHERE PSAActivityID = :PSAActivityID

UNION ALL

SELECT ssr.*
FROM (SELECT ssr.fk_PSAActivityID, CONCAT(ats.Status, ' - ', IF(ssr.LockField = 1, 'Locked', COALESCE(ssr.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, ssr.TimeStamp
FROM SubmissionStatusREV ssr
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ssr.fk_ActivityStatus
LEFT JOIN PSA.tblUserPSA u
	ON u.ID = fk_LastModifiedBy
WHERE fk_PSAActivityID = :PSAActivityID
ORDER BY ssr.TimeStamp DESC) ssr) wmTempTable
        ]]>
    <query-param name="PSAActivityID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetSettingSteelShakePercent">
        <![CDATA[
        SELECT * 
FROM SETTINGS
WHERE Label = 'SteelShakeHoursPercent'
        ]]>
    </sql-query>

    <sql-query name="GetSettingSteelShakePercent__count">
        <![CDATA[
        select count(*) from (SELECT * 
FROM SETTINGS
WHERE Label = 'SteelShakeHoursPercent') wmTempTable
        ]]>
    </sql-query>

    <sql-query name="UpdateSettingPipeTestingPercent">
        <![CDATA[
        UPDATE SETTINGS
SET `Value1`= :Value1 
WHERE `Label`='TestingHoursPercent'
        ]]>
    <query-param name="Value1" type="java.math.BigDecimal"/>
    </sql-query>

    <sql-query name="UpdateSettingSteelSell">
        <![CDATA[
        UPDATE SETTINGS
SET `Value1`= :Value1 
WHERE `Label`='SteelSellHoursPercent'
        ]]>
    <query-param name="Value1" type="java.math.BigDecimal"/>
    </sql-query>

    <sql-query name="GetActivityHistoryMisc">
        <![CDATA[
        SELECT sm.* 
FROM SubsMisc sm
WHERE ID = :RowID

UNION ALL

SELECT  smr.fk_OrgActivityId, smr.SubmissionID, 
smr.MiscDrawingNumber, smr.MiscLineNumber, smr.MiscSheetNumber, smr.MiscTimeInForm, smr.MiscQuantity, smr.MiscRework, smr.MiscNotes,
smr.ActivityType, smr.Rev, smr.TimeStamp
FROM SubsMiscREV smr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryMisc__count">
        <![CDATA[
        select count(*) from (SELECT sm.* 
FROM SubsMisc sm
WHERE ID = :RowID

UNION ALL

SELECT  smr.fk_OrgActivityId, smr.SubmissionID, 
smr.MiscDrawingNumber, smr.MiscLineNumber, smr.MiscSheetNumber, smr.MiscTimeInForm, smr.MiscQuantity, smr.MiscRework, smr.MiscNotes,
smr.ActivityType, smr.Rev, smr.TimeStamp
FROM SubsMiscREV smr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateBoltUp">
        <![CDATA[
        UPDATE SubsBoltUp 
SET BoltUpSpool1 = :Spool1,
BoltUpSpool2 = :Spool2,
BoltUpDrawingNumber = :DrawingNumber,
BoltUpLineNumber = :LineNumber,
BoltUpSheetNumber = :SheetNumber,
BoltUpSize = :Size,
BoltUpQuantity = :Quantity,
BoltUpRework = :Rework,
BoltUpNotes = :Notes
WHERE ID= :RowID
        ]]>
    <query-param name="Spool1" type="java.lang.String"/>
    <query-param name="Spool2" type="java.lang.String"/>
    <query-param name="DrawingNumber" type="java.lang.String"/>
    <query-param name="LineNumber" type="java.lang.String"/>
    <query-param name="SheetNumber" type="java.lang.String"/>
    <query-param name="Size" type="java.math.BigDecimal"/>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Rework" type="java.lang.Integer"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantitiesTestPackage">
        <![CDATA[
        SELECT td.TestPackageNumber, 

count(td.BidID) AS ItemsTotal, 

TRUNCATE(sum(ste.ReadyForTestingHours),6) AS ReadyForTestingHours,
TRUNCATE(sum(ste.HydroHours),6) AS HydroHours,
TRUNCATE(sum(ste.ClientTurnoverHours),6) AS ClientTurnoverHours,

SUM(ert.ReadyForTestingInstalled) AS ReadyForTestingInstalled, 
SUM(ert.HydroInstalled) AS HydroInstalled, 
SUM(ert.ClientTurnoverInstalled) AS ClientTurnoverInstalled,

TRUNCATE(sum(ert.EarnedReadyForTestingHours),6) AS EarnedReadyForTestingHours, 
TRUNCATE(sum(ert.EarnedHydroHours),6) AS EarnedHydroHours, 
TRUNCATE(sum(ert.EarnedClientTurnoverHours),6) AS EarnedClientTurnoverHours,

TRUNCATE(sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity *(td.TakeOffQuantity 
- (COALESCE(er.InstalledFootage,0) 
  + COALESCE(er.InstalledBoltUps,0)
  + COALESCE(er.InstalledWelds,0)
  + COALESCE(er.InstalledCuts,0)
  + COALESCE(er.InstalledTrim,0)
  + COALESCE(er.InstalledSupports,0)
  + COALESCE(er.InstalledMisc,0)
  + COALESCE(er.InstalledDemo,0))))),6) AS LooseHours

FROM trackerDetails td

	LEFT JOIN (SELECT min(td.ID) AS ID,
    
IF( sum(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0)) 
	> td.TakeOffQuantity, /*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),
    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0))),0))
    ) AS EarnedErectionHours,

IF(sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0))
	> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),
    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0))), 0))
    ) AS EarnedBoltUpHours,

IF(sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))
	> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),
    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))),0))
    ) AS EarnedWeldHours,

IF(sum(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0))
	> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),
    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0))),0))
    ) AS EarnedCutHours,
    
IF(sum(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0))
	> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),
    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0))),0))
    ) AS EarnedTrimHours,
    
IF(sum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0))
	> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),
    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0))),0))
    ) AS EarnedSupportHours,
    
IF(sum(COALESCE(IF(td.PipingActivityType = 'MISC' AND td.ECT != 'D', sm.MiscInstalled,0),0))
	> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),
    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*COALESCE(IF(td.PipingActivityType = 'MISC' AND td.ECT != 'D', sm.MiscInstalled,0),0)),0))
    ) AS EarnedMiscHours,
    
IF(sum(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0))
	> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours,
    /*FALSE*/ sum(COALESCE((td.EstimatedHours/td.TakeOffQuantity*(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0))),0))
    ) AS EarnedDemoHours,
    

sum(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0)) AS InstalledFootage,
sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) AS InstalledBoltUps, 
sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0)) AS InstalledWelds,
sum(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0)) AS InstalledCuts,
(sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) + sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))) AS InstalledBasicConnections, 
sum(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0)) AS InstalledTrim,
sum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0)) AS InstalledSupports,
sum(COALESCE(sm.MiscInstalled,0)) AS InstalledMisc,
sum(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0)) AS InstalledDemo,

(sum(COALESCE(st.TrimInstalled,0)) + sum(COALESCE(sm.MiscInstalled,0)) + sum(COALESCE(ssu.SupportInstalled,0))) AS InstalledBasicTrim

FROM SubmissionStatus ss
	JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0
	
    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled
				FROM SubsBoltUp sb 
                WHERE sb.BoltUpRework = 0) sb
		ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
        
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) sw
		ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS CutInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) scut
		ON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23
        
    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled
				FROM SubsTrim st
                WHERE st.TrimRework = 0) st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  
        
	LEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled
				FROM SubsSupports ssu
                WHERE ssu.SupportRework = 0) ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
	
    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled
				FROM SubsDemo sd) sd
		ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) 

    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM`trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        

	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sm
		ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'  AND td.ECT != 'D'
        
	
    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sme
		ON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'
       
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smb
		ON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'
		
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smw
		ON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'
	
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smc
		ON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smt
		ON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType IN ('V','Plug','HpLp','Other','Blind')
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smssu
		ON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smd
		ON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'
        

        
WHERE fk_ActivityStatus IN (5,12)
GROUP BY td.BidID) er
		ON er.ID = td.ID

LEFT JOIN (SELECT min(td.ID) AS ID,
sum(COALESCE(steR.InstalledReadyForTesting, 0)) AS ReadyForTestingInstalled,
sum(COALESCE(steH.InstalledHydro, 0)) AS HydroInstalled,
sum(COALESCE(steC.InstalledClientTurnover, 0)) AS ClientTurnoverInstalled,

sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * steR.InstalledReadyForTesting, 0)) AS EarnedReadyForTestingHours,
sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') * steH.InstalledHydro, 0)) AS EarnedHydroHours,
sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') * steC.InstalledClientTurnover, 0)) AS EarnedClientTurnoverHours

FROM trackerDetails td

LEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledReadyForTesting
			FROM SubsTesting ste
            INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 41 AND ss.fk_ActivityStatus IN (5,12)) steR
	ON steR.TestingTestPackageNumber = td.TestPackageNumber AND steR.ActivityType = 41 AND td.ECT != 'D'
    
LEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledHydro
			FROM SubsTesting ste
            INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 42 AND ss.fk_ActivityStatus IN (5,12)) steH
	ON steH.TestingTestPackageNumber = td.TestPackageNumber AND steH.ActivityType = 42 AND td.ECT != 'D'
    
LEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledClientTurnover
			FROM SubsTesting ste
            INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 43 AND ss.fk_ActivityStatus IN (5,12)) steC
	ON steC.TestingTestPackageNumber = td.TestPackageNumber AND steC.ActivityType = 43 AND td.ECT != 'D'

GROUP BY td.BidID) ert
	ON ert.ID = td.ID
    
LEFT JOIN (SELECT td.ID,
			COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent'),0) AS TestingHours,
            COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent')),0) AS ReadyForTestingHours,
            COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent')),0) AS HydroHours,
            COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent')),0) AS ClientTurnoverHours
			FROM `trackerDetails` td
			WHERE td.ECT != 'D') ste
	ON ste.ID = td.ID
  
    
WHERE TestPackageNumber = :TestPackage
GROUP BY TestPackageNumber
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetQuantitiesTestPackage__count">
        <![CDATA[
        select count(*) from (SELECT td.TestPackageNumber, 

count(td.BidID) AS ItemsTotal, 

TRUNCATE(sum(ste.ReadyForTestingHours),6) AS ReadyForTestingHours,
TRUNCATE(sum(ste.HydroHours),6) AS HydroHours,
TRUNCATE(sum(ste.ClientTurnoverHours),6) AS ClientTurnoverHours,

SUM(ert.ReadyForTestingInstalled) AS ReadyForTestingInstalled, 
SUM(ert.HydroInstalled) AS HydroInstalled, 
SUM(ert.ClientTurnoverInstalled) AS ClientTurnoverInstalled,

TRUNCATE(sum(ert.EarnedReadyForTestingHours),6) AS EarnedReadyForTestingHours, 
TRUNCATE(sum(ert.EarnedHydroHours),6) AS EarnedHydroHours, 
TRUNCATE(sum(ert.EarnedClientTurnoverHours),6) AS EarnedClientTurnoverHours,

TRUNCATE(sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity *(td.TakeOffQuantity 
- (COALESCE(er.InstalledFootage,0) 
  + COALESCE(er.InstalledBoltUps,0)
  + COALESCE(er.InstalledWelds,0)
  + COALESCE(er.InstalledCuts,0)
  + COALESCE(er.InstalledTrim,0)
  + COALESCE(er.InstalledSupports,0)
  + COALESCE(er.InstalledMisc,0)
  + COALESCE(er.InstalledDemo,0))))),6) AS LooseHours

FROM trackerDetails td

	LEFT JOIN (SELECT min(td.ID) AS ID,
    
IF( sum(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0)) 
	> td.TakeOffQuantity, /*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),
    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0))),0))
    ) AS EarnedErectionHours,

IF(sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0))
	> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),
    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0))), 0))
    ) AS EarnedBoltUpHours,

IF(sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))
	> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),
    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))),0))
    ) AS EarnedWeldHours,

IF(sum(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0))
	> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),
    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0))),0))
    ) AS EarnedCutHours,
    
IF(sum(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0))
	> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),
    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0))),0))
    ) AS EarnedTrimHours,
    
IF(sum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0))
	> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),
    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0))),0))
    ) AS EarnedSupportHours,
    
IF(sum(COALESCE(IF(td.PipingActivityType = 'MISC' AND td.ECT != 'D', sm.MiscInstalled,0),0))
	> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),
    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*COALESCE(IF(td.PipingActivityType = 'MISC' AND td.ECT != 'D', sm.MiscInstalled,0),0)),0))
    ) AS EarnedMiscHours,
    
IF(sum(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0))
	> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ td.EstimatedHours,
    /*FALSE*/ sum(COALESCE((td.EstimatedHours/td.TakeOffQuantity*(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0))),0))
    ) AS EarnedDemoHours,
    

sum(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0)) AS InstalledFootage,
sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) AS InstalledBoltUps, 
sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0)) AS InstalledWelds,
sum(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0)) AS InstalledCuts,
(sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) + sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))) AS InstalledBasicConnections, 
sum(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0)) AS InstalledTrim,
sum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0)) AS InstalledSupports,
sum(COALESCE(sm.MiscInstalled,0)) AS InstalledMisc,
sum(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0)) AS InstalledDemo,

(sum(COALESCE(st.TrimInstalled,0)) + sum(COALESCE(sm.MiscInstalled,0)) + sum(COALESCE(ssu.SupportInstalled,0))) AS InstalledBasicTrim

FROM SubmissionStatus ss
	JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0
	
    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled
				FROM SubsBoltUp sb 
                WHERE sb.BoltUpRework = 0) sb
		ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
        
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) sw
		ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
	LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS CutInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) scut
		ON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23
        
    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled
				FROM SubsTrim st
                WHERE st.TrimRework = 0) st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  
        
	LEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled
				FROM SubsSupports ssu
                WHERE ssu.SupportRework = 0) ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
	
    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled
				FROM SubsDemo sd) sd
		ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) 

    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM`trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
        

	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sm
		ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'  AND td.ECT != 'D'
        
	
    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) sme
		ON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'
       
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smb
		ON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'
		
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smw
		ON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'
	
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smc
		ON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smt
		ON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType IN ('V','Plug','HpLp','Other','Blind')
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smssu
		ON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smd
		ON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'
        

        
WHERE fk_ActivityStatus IN (5,12)
GROUP BY td.BidID) er
		ON er.ID = td.ID

LEFT JOIN (SELECT min(td.ID) AS ID,
sum(COALESCE(steR.InstalledReadyForTesting, 0)) AS ReadyForTestingInstalled,
sum(COALESCE(steH.InstalledHydro, 0)) AS HydroInstalled,
sum(COALESCE(steC.InstalledClientTurnover, 0)) AS ClientTurnoverInstalled,

sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * steR.InstalledReadyForTesting, 0)) AS EarnedReadyForTestingHours,
sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') * steH.InstalledHydro, 0)) AS EarnedHydroHours,
sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') * steC.InstalledClientTurnover, 0)) AS EarnedClientTurnoverHours

FROM trackerDetails td

LEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledReadyForTesting
			FROM SubsTesting ste
            INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 41 AND ss.fk_ActivityStatus IN (5,12)) steR
	ON steR.TestingTestPackageNumber = td.TestPackageNumber AND steR.ActivityType = 41 AND td.ECT != 'D'
    
LEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledHydro
			FROM SubsTesting ste
            INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 42 AND ss.fk_ActivityStatus IN (5,12)) steH
	ON steH.TestingTestPackageNumber = td.TestPackageNumber AND steH.ActivityType = 42 AND td.ECT != 'D'
    
LEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledClientTurnover
			FROM SubsTesting ste
            INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 43 AND ss.fk_ActivityStatus IN (5,12)) steC
	ON steC.TestingTestPackageNumber = td.TestPackageNumber AND steC.ActivityType = 43 AND td.ECT != 'D'

GROUP BY td.BidID) ert
	ON ert.ID = td.ID
    
LEFT JOIN (SELECT td.ID,
			COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent'),0) AS TestingHours,
            COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent')),0) AS ReadyForTestingHours,
            COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent')),0) AS HydroHours,
            COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent')),0) AS ClientTurnoverHours
			FROM `trackerDetails` td
			WHERE td.ECT != 'D') ste
	ON ste.ID = td.ID
  
    
WHERE TestPackageNumber = :TestPackage
GROUP BY TestPackageNumber) wmTempTable
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetALLTotalsByBidID">
        <![CDATA[
        SELECT *
FROM CacheTable_StatsByID
        ]]>
    </sql-query>

    <sql-query name="GetALLTotalsByBidID__count">
        <![CDATA[
        select count(*) from (SELECT *
FROM CacheTable_StatsByID) wmTempTable
        ]]>
    </sql-query>

    <sql-query name="UpdateMiscQuantity">
        <![CDATA[
        UPDATE SubsMisc
SET
MiscQuantity = :Quantity
WHERE ID = :RowID
        ]]>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidActivityMatchesEquip">
        <![CDATA[
        SELECT 
min(UID) AS UID, min(BidID) AS BidID, EWONumber, Scope, Phase, Stage, TestPackageNumber, CostCode, P6ID, AssignedContractor, Area, Location, Structure, CU, Elevation, P6Description, 
EngDrawingNumber, SheetNumber, DrawingRev, ComponentNumber, Description, EquipmentType, ActivityType, ClientMaterialSpec, PerformanceMaterialSpec, System, Service, 
sum(TakeOffQuantity) AS TakeOffQuantity, QuantityUnit, sum(EstimatedHours) AS EstimatedHours, 
WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10


FROM EquipTrackerDetails
WHERE BidID = :BidID
OR 
(ComponentNumber LIKE :TagNumber
AND Description LIKE :Description)
GROUP BY BidID
        ]]>
    <query-param name="BidID" type="java.lang.String"/>
    <query-param name="TagNumber" type="java.lang.String"/>
    <query-param name="Description" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetBidActivityMatchesEquip__count">
        <![CDATA[
        select count(*) from (SELECT 
min(UID) AS UID, min(BidID) AS BidID, EWONumber, Scope, Phase, Stage, TestPackageNumber, CostCode, P6ID, AssignedContractor, Area, Location, Structure, CU, Elevation, P6Description, 
EngDrawingNumber, SheetNumber, DrawingRev, ComponentNumber, Description, EquipmentType, ActivityType, ClientMaterialSpec, PerformanceMaterialSpec, System, Service, 
sum(TakeOffQuantity) AS TakeOffQuantity, QuantityUnit, sum(EstimatedHours) AS EstimatedHours, 
WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10


FROM EquipTrackerDetails
WHERE BidID = :BidID
OR 
(ComponentNumber LIKE :TagNumber
AND Description LIKE :Description)
GROUP BY BidID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.String"/>
    <query-param name="TagNumber" type="java.lang.String"/>
    <query-param name="Description" type="java.lang.String"/>
    </sql-query>

    <sql-query name="UpdateWeldQuantity">
        <![CDATA[
        UPDATE SubsWeld
SET
WeldPercentCompleted = :PercentComplete
WHERE ID = :RowID
        ]]>
    <query-param name="PercentComplete" type="java.lang.Integer"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidWorkHistoryCivil">
        <![CDATA[
        SELECT ss.fk_SubmissionId, ss.PSAActivityID, at.ActivityType, ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,


### Quantities Installed ###
sum(COALESCE(cfa.FAQuantity,0)) AS Quantity,

((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * 100) AS PercentClaimed,

CONCAT(IF(cfa.FANotes IS NOT NULL, cfa.FANotes, ''), IF(cfm.MiscNotes IS NOT NULL, cfm.MiscNotes, '')) AS Notes,
IF(cfa.FARework = 1 OR cfm.MiscRework = 1, 1, 0) AS Rework



FROM SubmissionStatus ss

####User Info Joins ####
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType IN (70,71,97)
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 

#### Assigned Activities Joins #####    
JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN CivilFA cfa
	ON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71)
LEFT JOIN CivilMisc cfm
	ON cfm.ID = ss.ActivityRowId AND ss.ActivityType = 97
LEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours
			FROM `CivilTrackerDetails`
			GROUP BY BidID) ctd
	ON ctd.BidID = ss.fk_BidIDAssigned

WHERE ss.fk_BidIDAssigned = :BidID        
AND fk_ActivityStatus IN (5,12)
AND ss.ActivityType IN (70,71,97)

GROUP BY ss.PSAActivityID
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidWorkHistoryCivil__count">
        <![CDATA[
        select count(*) from (SELECT ss.fk_SubmissionId, ss.PSAActivityID, at.ActivityType, ss.ActivityRowId,
CONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, 
CONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, 
sd.CompleteTime, 
max(ssr.TimeStamp) AS ReviewedTime,


### Quantities Installed ###
sum(COALESCE(cfa.FAQuantity,0)) AS Quantity,

((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * 100) AS PercentClaimed,

CONCAT(IF(cfa.FANotes IS NOT NULL, cfa.FANotes, ''), IF(cfm.MiscNotes IS NOT NULL, cfm.MiscNotes, '')) AS Notes,
IF(cfa.FARework = 1 OR cfm.MiscRework = 1, 1, 0) AS Rework



FROM SubmissionStatus ss

####User Info Joins ####
LEFT JOIN SubsDetails sd
	ON ss.fk_SubmissionID = sd.SubmissionId
LEFT JOIN PSA.tblCrews tc
	ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
LEFT JOIN PSA.tblCrewsRev tcr
	ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev
LEFT JOIN PSA.tblUserPSA u1
		ON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman
LEFT JOIN PSA.tblUserPSA u2
		ON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent
LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp
			FROM SubmissionStatusREV ssr
            WHERE ssr.fk_ActivityStatus = 2
            AND ssr.ActivityType IN (70,71,97)
            GROUP BY ssr.fk_PSAActivityID) ssr
	ON ssr.fk_PSAActivityID = ss.PSAActivityID 

#### Assigned Activities Joins #####    
JOIN PSA.REF_ActivityTypes at
	ON at.ID = ss.ActivityType
LEFT JOIN CivilFA cfa
	ON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71)
LEFT JOIN CivilMisc cfm
	ON cfm.ID = ss.ActivityRowId AND ss.ActivityType = 97
LEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours
			FROM `CivilTrackerDetails`
			GROUP BY BidID) ctd
	ON ctd.BidID = ss.fk_BidIDAssigned

WHERE ss.fk_BidIDAssigned = :BidID        
AND fk_ActivityStatus IN (5,12)
AND ss.ActivityType IN (70,71,97)

GROUP BY ss.PSAActivityID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivitiesPendingApproval">
        <![CDATA[
        SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, se.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT se.ID, se.ErectionSpool1 AS Spool1, COALESCE(se.ErectionSpool2, 'N/A') AS Spool2, 
		se.ErectionLineNumber AS Line1, se.ErectionDrawingNumber AS Drawing1, se.ErectionSheetNumber AS Sheet1, 
		se.ErectionLineNumber AS Line2, se.ErectionDrawingNumber AS Drawing2, se.ErectionSheetNumber AS Sheet2, 
        se.ErectionPipeSize AS Size, se.ErectionNotes AS Notes,
			(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0)) AS Quantity
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, se.ErectionRework AS Rework
			FROM SubsErection se) se
	ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)
 
 
UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sb.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT sb.ID, sb.BoltUpSpool1, sb.BoltUpSpool2, 
			sb.BoltUpLineNumber AS Line1, sb.BoltUpDrawingNumber AS DWG1, sb.BoltUpSheetNumber AS Sheet1,
            COALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,
            sb.BoltUpSize , sb.BoltUpNotes, 1 AS BoltUpInstalled
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sb.BoltUpRework AS Rework
            FROM SubsBoltUp sb
            LEFT JOIN REF_SpoolList sl
				ON sl.SpoolNumber = sb.BoltUpSpool2) sb
	ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21	
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)


UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sw.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus    
    
RIGHT JOIN (SELECT sw.ID, sw.WeldSpool1, sw.WeldSpool2, 
			sw.WeldLineNumber, sw.WeldDrawingNumber, sw.WeldSheetNumber, 
            COALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,
            sw.WeldSize , sw.WeldNotes, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sw.WeldRework AS Rework
			FROM SubsWeld sw
            LEFT JOIN REF_SpoolList sl
				ON sl.SpoolNumber = sw.WeldSpool2) sw
	ON sw.ID = ss.ActivityRowId AND ss.ActivityType IN (22,23)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)


UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, st.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus      

RIGHT JOIN (SELECT st.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			st.TrimLineNumber, st.TrimDrawingNumber, st.TrimSheetNumber, 
            st.TrimLineNumber AS Line2, st.TrimDrawingNumber AS DWG2, st.TrimSheetNumber AS Sheet2,
            st.TrimSize , st.TrimNotes, st.TrimQuantity
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, st.TrimRework AS Rework
			FROM SubsTrim st) st
	ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (31,33,34,35,39) 
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)

UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, ssu.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus
    
RIGHT JOIN (SELECT ssu.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			ssu.SupportLineNumber, ssu.SupportDrawingNumber, ssu.SupportSheetNumber, 
            ssu.SupportLineNumber AS Line2, ssu.SupportDrawingNumber AS DWG2, ssu.SupportSheetNumber AS Sheet2,
            'N/A' AS SupportSize , ssu.SupportNotes, COALESCE((ssu.SupportPercentCompleted * .01),0) AS SupportInstalled
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, ssu.SupportRework AS Rework
			FROM SubsSupports ssu) ssu
	ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32    
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)


UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, ste.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ste.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			ste.TestingTestPackageNumber, 'N/A' AS DrawingNumber, ste.TestingRework AS SheetNumber, 
            ste.TestingTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2,
            'N/A' AS Size , ste.TestingNotes, 1 AS TestingQuantity
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, ste.TestingRework AS Rework
			FROM SubsTesting ste) ste
	ON ste.ID = ss.ActivityRowId AND ss.ActivityType IN (40,41,42,43)    
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)


UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sd.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT sd.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			sd.DemoLineNumber, sd.DemoDrawingNumber, sd.DemoSheetNumber, 
            sd.DemoLineNumber AS Line2, sd.DemoDrawingNumber AS DWG2, sd.DemoSheetNumber AS Sheet2,
            'N/A' AS DemoSize , sd.DemoNotes, COALESCE(sd.DemoQuantity,0) AS DemoQuantity
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, 0 AS Rework
			FROM SubsDemo sd) sd
	ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (50,51,52,53,59)    
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)

 
UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sm.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus	
    
RIGHT JOIN (SELECT sm.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			sm.MiscLineNumber, sm.MiscDrawingNumber, sm.MiscSheetNumber, 
            sm.MiscLineNumber AS Line2, sm.MiscDrawingNumber AS DWG2, sm.MiscSheetNumber AS Sheet2,
            'N/A' AS MiscSize , sm.MiscNotes, sm.MiscQuantity AS MiscInstalled
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sm.MiscRework AS Rework
			FROM SubsMisc sm) sm
	ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91    
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)


UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sEWO.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus
    
RIGHT JOIN (SELECT sEWO.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			sEWO.EWOLineNumber, sEWO.EWODrawingNumber, sEWO.EWOSheetNumber, 
            sEWO.EWOLineNumber AS Line2, sEWO.EWODrawingNumber AS DWG2, sEWO.EWOSheetNumber AS Sheet2,
            'N/A' AS EWOSize , sEWO.EWONotes, 'N/A' AS TestingEarned
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sEWO.EWORework AS Rework
			FROM SubsEWO sEWO) sEWO
	ON sEWO.ID = ss.ActivityRowId AND ss.ActivityType = 93   
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)

 
UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stls.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, FAShakeQuantity, FAArea, 1.00 AS SteelPercentClaim, FARework AS Rework
			FROM SteelShake) stls
	ON stls.ID = ss.ActivityRowId AND ss.ActivityType IN (61)    
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stle.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, FAErectQuantity, FAArea, FAErectPercent, FARework AS Rework
			FROM SteelErect) stle
	ON stle.ID = ss.ActivityRowId AND ss.ActivityType IN (62)    
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlb.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, FABoltOutQuantity, FAArea, FABoltOutPercent , FARework AS Rework
			FROM SteelBoltOut) stlb
	ON stlb.ID = ss.ActivityRowId AND ss.ActivityType IN (63)    
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stli.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, FAImpQuantity, FAArea, FAImpPercent , FARework AS Rework
			FROM SteelImp) stli
	ON stli.ID = ss.ActivityRowId AND ss.ActivityType IN (64)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlw.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, FAWeldQuantity, FAArea, FAWeldPercent , FARework AS Rework
			FROM SteelWeld) stlw
	ON stlw.ID = ss.ActivityRowId AND ss.ActivityType IN (68)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlsell.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, FASellQuantity, FAArea, 1.00 AS SteelPercentClaim , FARework AS Rework
			FROM SteelSell) stlsell
	ON stlsell.ID = ss.ActivityRowId AND ss.ActivityType IN (65)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stld.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT stld.ID, rst.SteelName AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, DemoSize AS Size , 
            stld.DemoNotes, stld.DemoQuantity, stld.DemoArea, 1.00 AS SteelPercentClaim, 0 AS Rework
			FROM SteelDemo stld
            LEFT JOIN PSA.REF_SteelTypes rst
				ON stld.DemoSteelType = rst.ID) stld
	ON stld.ID = ss.ActivityRowId AND ss.ActivityType IN (67)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlsp.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			SellTestPackageNumber AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            SellTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            SellNotes, 1, 'N/A', 1.00 AS SteelPercentClaim, 0 AS Rework
			FROM SteelSellPackage) stlsp
	ON stlsp.ID = ss.ActivityRowId AND ss.ActivityType IN (66)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlm.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, MiscPieceNumber AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            MiscNotes, MiscQuantity, MiscArea, 1.00 AS SteelPercentClaim, MiscRework AS Rework
			FROM SteelMisc) stlm
	ON stlm.ID = ss.ActivityRowId AND ss.ActivityType IN (96)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, cfa.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, FAFoundation AS Spool1, FABidID AS Spool2, 
			FADrawingNumber AS LineNumber, FADetailDrawingNumber AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, IF(cfa.ActivityType = 70, (cfa.FAPercentComplete * ctd.TakeOffQuantity), FAQuantity) AS Quantity, 'N/A' AS MiscArea, FAPercentComplete AS SteelPercentClaim, FARework AS Rework
			FROM CivilFA cfa
			LEFT JOIN CivilTrackerDetails ctd
			    ON ctd.BidID =  cfa.FABidID) cfa
	ON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)




UNION
SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, csp.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			SellTestPackageNumber AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            SellTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            SellNotes, 'N/A' AS Quantity, 'N/A' AS MiscArea, 'N/A' SteelPercentClaim, 0 AS Rework
			FROM CivilSellPackage csp) csp
	ON csp.ID = ss.ActivityRowId AND ss.ActivityType = 72
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, cm.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, MiscFoundation AS Spool1, 'N/A' AS Spool2, 
			MiscDrawingNumber AS LineNumber, MiscDetailDrawingNumber AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            MiscNotes, 0 AS Quantity, 'N/A' AS MiscArea, MiscPercentComplete AS SteelPercentClaim, MiscRework AS Rework
			FROM CivilMisc) cm
	ON cm.ID = ss.ActivityRowId AND ss.ActivityType IN (97)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'EQUIP' AS Craft, efa.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus


RIGHT JOIN (SELECT ID, FATagNumber AS Spool1, FABidID AS Spool2, 
			FAActivitySelect AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, FAQuantity AS Quantity, 'N/A' AS MiscArea, FAPercentComplete AS SteelPercentClaim, FARework AS Rework
			FROM EquipFA efa
			LEFT JOIN EquipTrackerDetails etd
			    ON etd.BidID =  efa.FABidID) efa
	ON efa.ID = ss.ActivityRowId AND ss.ActivityType IN (80)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)
        ]]>
    <query-param name="UserID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivitiesPendingApproval__count">
        <![CDATA[
        select count(*) from (SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, se.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT se.ID, se.ErectionSpool1 AS Spool1, COALESCE(se.ErectionSpool2, 'N/A') AS Spool2, 
		se.ErectionLineNumber AS Line1, se.ErectionDrawingNumber AS Drawing1, se.ErectionSheetNumber AS Sheet1, 
		se.ErectionLineNumber AS Line2, se.ErectionDrawingNumber AS Drawing2, se.ErectionSheetNumber AS Sheet2, 
        se.ErectionPipeSize AS Size, se.ErectionNotes AS Notes,
			(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0)) AS Quantity
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, se.ErectionRework AS Rework
			FROM SubsErection se) se
	ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)
 
 
UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sb.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT sb.ID, sb.BoltUpSpool1, sb.BoltUpSpool2, 
			sb.BoltUpLineNumber AS Line1, sb.BoltUpDrawingNumber AS DWG1, sb.BoltUpSheetNumber AS Sheet1,
            COALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,
            sb.BoltUpSize , sb.BoltUpNotes, 1 AS BoltUpInstalled
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sb.BoltUpRework AS Rework
            FROM SubsBoltUp sb
            LEFT JOIN REF_SpoolList sl
				ON sl.SpoolNumber = sb.BoltUpSpool2) sb
	ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21	
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)


UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sw.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus    
    
RIGHT JOIN (SELECT sw.ID, sw.WeldSpool1, sw.WeldSpool2, 
			sw.WeldLineNumber, sw.WeldDrawingNumber, sw.WeldSheetNumber, 
            COALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,
            sw.WeldSize , sw.WeldNotes, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sw.WeldRework AS Rework
			FROM SubsWeld sw
            LEFT JOIN REF_SpoolList sl
				ON sl.SpoolNumber = sw.WeldSpool2) sw
	ON sw.ID = ss.ActivityRowId AND ss.ActivityType IN (22,23)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)


UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, st.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus      

RIGHT JOIN (SELECT st.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			st.TrimLineNumber, st.TrimDrawingNumber, st.TrimSheetNumber, 
            st.TrimLineNumber AS Line2, st.TrimDrawingNumber AS DWG2, st.TrimSheetNumber AS Sheet2,
            st.TrimSize , st.TrimNotes, st.TrimQuantity
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, st.TrimRework AS Rework
			FROM SubsTrim st) st
	ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (31,33,34,35,39) 
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)

UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, ssu.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus
    
RIGHT JOIN (SELECT ssu.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			ssu.SupportLineNumber, ssu.SupportDrawingNumber, ssu.SupportSheetNumber, 
            ssu.SupportLineNumber AS Line2, ssu.SupportDrawingNumber AS DWG2, ssu.SupportSheetNumber AS Sheet2,
            'N/A' AS SupportSize , ssu.SupportNotes, COALESCE((ssu.SupportPercentCompleted * .01),0) AS SupportInstalled
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, ssu.SupportRework AS Rework
			FROM SubsSupports ssu) ssu
	ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32    
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)


UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, ste.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ste.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			ste.TestingTestPackageNumber, 'N/A' AS DrawingNumber, ste.TestingRework AS SheetNumber, 
            ste.TestingTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2,
            'N/A' AS Size , ste.TestingNotes, 1 AS TestingQuantity
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, ste.TestingRework AS Rework
			FROM SubsTesting ste) ste
	ON ste.ID = ss.ActivityRowId AND ss.ActivityType IN (40,41,42,43)    
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)


UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sd.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT sd.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			sd.DemoLineNumber, sd.DemoDrawingNumber, sd.DemoSheetNumber, 
            sd.DemoLineNumber AS Line2, sd.DemoDrawingNumber AS DWG2, sd.DemoSheetNumber AS Sheet2,
            'N/A' AS DemoSize , sd.DemoNotes, COALESCE(sd.DemoQuantity,0) AS DemoQuantity
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, 0 AS Rework
			FROM SubsDemo sd) sd
	ON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (50,51,52,53,59)    
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)

 
UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sm.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus	
    
RIGHT JOIN (SELECT sm.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			sm.MiscLineNumber, sm.MiscDrawingNumber, sm.MiscSheetNumber, 
            sm.MiscLineNumber AS Line2, sm.MiscDrawingNumber AS DWG2, sm.MiscSheetNumber AS Sheet2,
            'N/A' AS MiscSize , sm.MiscNotes, sm.MiscQuantity AS MiscInstalled
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sm.MiscRework AS Rework
			FROM SubsMisc sm) sm
	ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91    
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)


UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sEWO.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus
    
RIGHT JOIN (SELECT sEWO.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			sEWO.EWOLineNumber, sEWO.EWODrawingNumber, sEWO.EWOSheetNumber, 
            sEWO.EWOLineNumber AS Line2, sEWO.EWODrawingNumber AS DWG2, sEWO.EWOSheetNumber AS Sheet2,
            'N/A' AS EWOSize , sEWO.EWONotes, 'N/A' AS TestingEarned
            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sEWO.EWORework AS Rework
			FROM SubsEWO sEWO) sEWO
	ON sEWO.ID = ss.ActivityRowId AND ss.ActivityType = 93   
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)

 
UNION


SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stls.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, FAShakeQuantity, FAArea, 1.00 AS SteelPercentClaim, FARework AS Rework
			FROM SteelShake) stls
	ON stls.ID = ss.ActivityRowId AND ss.ActivityType IN (61)    
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stle.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, FAErectQuantity, FAArea, FAErectPercent, FARework AS Rework
			FROM SteelErect) stle
	ON stle.ID = ss.ActivityRowId AND ss.ActivityType IN (62)    
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlb.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, FABoltOutQuantity, FAArea, FABoltOutPercent , FARework AS Rework
			FROM SteelBoltOut) stlb
	ON stlb.ID = ss.ActivityRowId AND ss.ActivityType IN (63)    
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stli.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, FAImpQuantity, FAArea, FAImpPercent , FARework AS Rework
			FROM SteelImp) stli
	ON stli.ID = ss.ActivityRowId AND ss.ActivityType IN (64)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlw.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, FAWeldQuantity, FAArea, FAWeldPercent , FARework AS Rework
			FROM SteelWeld) stlw
	ON stlw.ID = ss.ActivityRowId AND ss.ActivityType IN (68)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlsell.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, FASellQuantity, FAArea, 1.00 AS SteelPercentClaim , FARework AS Rework
			FROM SteelSell) stlsell
	ON stlsell.ID = ss.ActivityRowId AND ss.ActivityType IN (65)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stld.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT stld.ID, rst.SteelName AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, DemoSize AS Size , 
            stld.DemoNotes, stld.DemoQuantity, stld.DemoArea, 1.00 AS SteelPercentClaim, 0 AS Rework
			FROM SteelDemo stld
            LEFT JOIN PSA.REF_SteelTypes rst
				ON stld.DemoSteelType = rst.ID) stld
	ON stld.ID = ss.ActivityRowId AND ss.ActivityType IN (67)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlsp.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			SellTestPackageNumber AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            SellTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            SellNotes, 1, 'N/A', 1.00 AS SteelPercentClaim, 0 AS Rework
			FROM SteelSellPackage) stlsp
	ON stlsp.ID = ss.ActivityRowId AND ss.ActivityType IN (66)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlm.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, MiscPieceNumber AS Spool1, 'N/A' AS Spool2, 
			'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            MiscNotes, MiscQuantity, MiscArea, 1.00 AS SteelPercentClaim, MiscRework AS Rework
			FROM SteelMisc) stlm
	ON stlm.ID = ss.ActivityRowId AND ss.ActivityType IN (96)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, cfa.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, FAFoundation AS Spool1, FABidID AS Spool2, 
			FADrawingNumber AS LineNumber, FADetailDrawingNumber AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, IF(cfa.ActivityType = 70, (cfa.FAPercentComplete * ctd.TakeOffQuantity), FAQuantity) AS Quantity, 'N/A' AS MiscArea, FAPercentComplete AS SteelPercentClaim, FARework AS Rework
			FROM CivilFA cfa
			LEFT JOIN CivilTrackerDetails ctd
			    ON ctd.BidID =  cfa.FABidID) cfa
	ON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)




UNION
SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, csp.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, 'N/A' AS Spool1, 'N/A' AS Spool2, 
			SellTestPackageNumber AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            SellTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            SellNotes, 'N/A' AS Quantity, 'N/A' AS MiscArea, 'N/A' SteelPercentClaim, 0 AS Rework
			FROM CivilSellPackage csp) csp
	ON csp.ID = ss.ActivityRowId AND ss.ActivityType = 72
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, cm.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus

RIGHT JOIN (SELECT ID, MiscFoundation AS Spool1, 'N/A' AS Spool2, 
			MiscDrawingNumber AS LineNumber, MiscDetailDrawingNumber AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            MiscNotes, 0 AS Quantity, 'N/A' AS MiscArea, MiscPercentComplete AS SteelPercentClaim, MiscRework AS Rework
			FROM CivilMisc) cm
	ON cm.ID = ss.ActivityRowId AND ss.ActivityType IN (97)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)



UNION



SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'EQUIP' AS Craft, efa.* 
FROM SubmissionStatus ss
LEFT JOIN PSA.REF_ActivityTypes at
	ON at.ID =ss.ActivityType
LEFT JOIN PSA.REF_ActivityStatuses ats
	ON ats.ID = ss.fk_ActivityStatus


RIGHT JOIN (SELECT ID, FATagNumber AS Spool1, FABidID AS Spool2, 
			FAActivitySelect AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, 
            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , 
            FANotes, FAQuantity AS Quantity, 'N/A' AS MiscArea, FAPercentComplete AS SteelPercentClaim, FARework AS Rework
			FROM EquipFA efa
			LEFT JOIN EquipTrackerDetails etd
			    ON etd.BidID =  efa.FABidID) efa
	ON efa.ID = ss.ActivityRowId AND ss.ActivityType IN (80)
WHERE ss.fk_ActivityStatus IN (2,7,9,11)
AND (ss.LockField IS NULL OR ss.LockField = :UserID)) wmTempTable
        ]]>
    <query-param name="UserID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetSettingCivilPuch">
        <![CDATA[
        SELECT * 
FROM SETTINGS
WHERE Label = 'CivilSellPunchHoursPercent'
        ]]>
    </sql-query>

    <sql-query name="GetSettingCivilPuch__count">
        <![CDATA[
        select count(*) from (SELECT * 
FROM SETTINGS
WHERE Label = 'CivilSellPunchHoursPercent') wmTempTable
        ]]>
    </sql-query>

    <sql-query name="GetSettingPipeHydroPercent">
        <![CDATA[
        SELECT *
FROM SETTINGS
WHERE Label = 'HydroHoursPercent'
        ]]>
    </sql-query>

    <sql-query name="GetSettingPipeHydroPercent__count">
        <![CDATA[
        select count(*) from (SELECT *
FROM SETTINGS
WHERE Label = 'HydroHoursPercent') wmTempTable
        ]]>
    </sql-query>

    <sql-query name="GetDrawingByTestPackageCivil">
        <![CDATA[
        SELECT DISTINCT ctd.EngDrawingNumber, ctd.DetailDrawingNumber, ctd.FoundationDescription
FROM CivilTrackerDetails ctd
WHERE ctd.TestPackageNumber = :TestPackage
ORDER BY ctd.EngDrawingNumber, ctd.DetailDrawingNumber
        ]]>
    <query-param name="TestPackage" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetDrawingByTestPackageCivil__count">
        <![CDATA[
        select count(*) from (SELECT DISTINCT ctd.EngDrawingNumber, ctd.DetailDrawingNumber, ctd.FoundationDescription
FROM CivilTrackerDetails ctd
WHERE ctd.TestPackageNumber = :TestPackage
ORDER BY ctd.EngDrawingNumber, ctd.DetailDrawingNumber) wmTempTable
        ]]>
    <query-param name="TestPackage" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateCivilMiscQuantity">
        <![CDATA[
        UPDATE `CivilMisc` 
SET 
`MiscPercentComplete`= :Percent
WHERE `ID`= :RowID
        ]]>
    <query-param name="Percent" type="java.math.BigDecimal"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSS">
        <![CDATA[
        UPDATE SubmissionStatus ss
SET 
ss.fk_ActivityStatus = :ActivityStatus,
ss.fk_LastModifiedBy = :UserID,
ss.fk_BidIDAssigned = IF(:BidID = 0, ss.fk_BidIDAssigned, :BidID)
WHERE ss.PSAActivityID = :FieldActivityID
        ]]>
    <query-param name="ActivityStatus" type="java.lang.Integer"/>
    <query-param name="UserID" type="java.lang.Integer"/>
    <query-param name="BidID" type="java.lang.Integer"/>
    <query-param name="FieldActivityID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSupportsQuantity">
        <![CDATA[
        UPDATE SubsSupports
SET
SupportQuantity = :Quantity
WHERE ID = :RowID
        ]]>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryErection">
        <![CDATA[
        SELECT se.* 
FROM SubsErection se
WHERE ID = :RowID

UNION ALL

SELECT ser.* 
FROM (SELECT  ser.fk_OrgActivityId, ser.SubmissionID, 
ser.ErectionSpool1, ser.ErectionLengthSpool1, ser.ErectionSpool2, ser.ErectionLengthSpool2, ser.ErectionSpool3, ser.ErectionLengthSpool3, ser.ErectionSpool4, ser.ErectionLengthSpool4 , ser.ErectionSpool5, ser.ErectionLengthSpool5, ser.ErectionSpool6, ser.ErectionLengthSpool6,
ser.ErectionOnCords, ser.ErectionDrawingNumber, ser.ErectionLineNumber, ser.ErectionSheetNumber, ser.ErectionTimeInForm, ser.ErectionPipeSize, ser.ErectionRework, ser.ErectionNotes,
ser.ActivityType, ser.Rev, ser.TimeStamp
FROM SubsErectionREV ser
WHERE fk_OrgActivityId = :RowID
ORDER BY ser.TimeStamp DESC) ser
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryErection__count">
        <![CDATA[
        select count(*) from (SELECT se.* 
FROM SubsErection se
WHERE ID = :RowID

UNION ALL

SELECT ser.* 
FROM (SELECT  ser.fk_OrgActivityId, ser.SubmissionID, 
ser.ErectionSpool1, ser.ErectionLengthSpool1, ser.ErectionSpool2, ser.ErectionLengthSpool2, ser.ErectionSpool3, ser.ErectionLengthSpool3, ser.ErectionSpool4, ser.ErectionLengthSpool4 , ser.ErectionSpool5, ser.ErectionLengthSpool5, ser.ErectionSpool6, ser.ErectionLengthSpool6,
ser.ErectionOnCords, ser.ErectionDrawingNumber, ser.ErectionLineNumber, ser.ErectionSheetNumber, ser.ErectionTimeInForm, ser.ErectionPipeSize, ser.ErectionRework, ser.ErectionNotes,
ser.ActivityType, ser.Rev, ser.TimeStamp
FROM SubsErectionREV ser
WHERE fk_OrgActivityId = :RowID
ORDER BY ser.TimeStamp DESC) ser) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="CheckSSLock">
        <![CDATA[
        SELECT ss.LockField 
FROM SubmissionStatus ss
WHERE PSAActivityID = :PSAActivityID
        ]]>
    <query-param name="PSAActivityID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="CheckSSLock__count">
        <![CDATA[
        select count(*) from (SELECT ss.LockField 
FROM SubmissionStatus ss
WHERE PSAActivityID = :PSAActivityID) wmTempTable
        ]]>
    <query-param name="PSAActivityID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetALLTotalsByCostCode">
        <![CDATA[
        SELECT *
FROM CacheTable_StatsByCostCode
        ]]>
    </sql-query>

    <sql-query name="GetALLTotalsByCostCode__count">
        <![CDATA[
        select count(*) from (SELECT *
FROM CacheTable_StatsByCostCode) wmTempTable
        ]]>
    </sql-query>

    <sql-query name="UpdateOverrideActivityQuantity">
        <![CDATA[
        UPDATE SubsOverride
SET
ORQuantity = :NewQuantity
WHERE ID = :RowID
        ]]>
    <query-param name="NewQuantity" type="java.lang.Integer"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetSettingSteelSellPercent">
        <![CDATA[
        SELECT * 
FROM SETTINGS
WHERE Label = 'SteelSellHoursPercent'
        ]]>
    </sql-query>

    <sql-query name="GetSettingSteelSellPercent__count">
        <![CDATA[
        select count(*) from (SELECT * 
FROM SETTINGS
WHERE Label = 'SteelSellHoursPercent') wmTempTable
        ]]>
    </sql-query>

    <sql-query name="UpdateDemo">
        <![CDATA[
        UPDATE SubsDemo
SET 

DemoDrawingNumber = :DrawingNumber,
DemoLineNumber = :LineNumber,
DemoSheetNumber = :SheetNumber,
DemoQuantity = :Quantity,
DemoSize = :Size,
DemoNotes = :Notes
WHERE ID= :RowID
        ]]>
    <query-param name="DrawingNumber" type="java.lang.String"/>
    <query-param name="LineNumber" type="java.lang.String"/>
    <query-param name="SheetNumber" type="java.lang.String"/>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="Size" type="java.math.BigDecimal"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateWeld">
        <![CDATA[
        UPDATE SubsWeld
SET
WeldSpool1 = :Spool1,
WeldSpool2 = :Spool2,
WeldDrawingNumber = :DrawingNumber,
WeldLineNumber = :LineNumber,
WeldSheetNumber = :SheetNumber,
WeldLineSpec = :LineSpec,
WeldNumber = :WeldNumber,
WeldStencil = :Stencil,
WeldSize = :Size,
WeldThickness = :Thickness,
WeldType = :WeldType,
WeldPosition = :WeldPosition,
WeldMaterial = :Material,
WeldProcedure = :Procedure,
WeldComplete = :Complete,
WeldShared = :Shared,
WeldPercentCompleted = :PercentComplete,
WeldRework = :Rework,
WeldNotes = :Notes
WHERE ID = :RowID
        ]]>
    <query-param name="Spool1" type="java.lang.String"/>
    <query-param name="Spool2" type="java.lang.String"/>
    <query-param name="DrawingNumber" type="java.lang.String"/>
    <query-param name="LineNumber" type="java.lang.String"/>
    <query-param name="SheetNumber" type="java.lang.String"/>
    <query-param name="LineSpec" type="java.lang.String"/>
    <query-param name="WeldNumber" type="java.lang.String"/>
    <query-param name="Stencil" type="java.lang.String"/>
    <query-param name="Size" type="java.math.BigDecimal"/>
    <query-param name="Thickness" type="java.lang.String"/>
    <query-param name="WeldType" type="java.lang.String"/>
    <query-param name="WeldPosition" type="java.lang.String"/>
    <query-param name="Material" type="java.lang.String"/>
    <query-param name="Procedure" type="java.lang.String"/>
    <query-param name="Complete" type="java.lang.Byte"/>
    <query-param name="Shared" type="java.lang.Byte"/>
    <query-param name="PercentComplete" type="java.lang.Integer"/>
    <query-param name="Rework" type="java.lang.Integer"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantityCutPrepInstalled">
        <![CDATA[
        SELECT sum(COALESCE(scut.CutInstalled, 0) + COALESCE(smc.MiscCutInstalled,0)) AS Total
FROM SubmissionStatus ss

    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
	
    LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS CutInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) scut
		ON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smc
		ON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'



WHERE ss.ActivityType IN (23, 91)
AND ss.fk_ActivityStatus IN (5,12)
AND fk_BidIDAssigned = :BidID
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantityCutPrepInstalled__count">
        <![CDATA[
        select count(*) from (SELECT sum(COALESCE(scut.CutInstalled, 0) + COALESCE(smc.MiscCutInstalled,0)) AS Total
FROM SubmissionStatus ss

    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
	
    LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS CutInstalled
				FROM SubsWeld sw 
                WHERE sw.WeldRework = 0) scut
		ON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smc
		ON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'



WHERE ss.ActivityType IN (23, 91)
AND ss.fk_ActivityStatus IN (5,12)
AND fk_BidIDAssigned = :BidID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateSteelSellQuantity">
        <![CDATA[
        UPDATE `SteelSell` 
SET 

`FASellQuantity`= :Quantity
WHERE `ID`= :RowID
        ]]>
    <query-param name="Quantity" type="java.lang.Integer"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryTrim">
        <![CDATA[
        SELECT st.* 
FROM SubsTrim st
WHERE ID = :RowID

UNION ALL

SELECT  str.fk_OrgActivityId, str.SubmissionID, 
str.TrimActivitySelect, str.TrimSize, str.TrimQuantity, str.TrimHandleType, str.TrimInstrumentType, str.TrimDrawingNumber, str.TrimLineNumber, str.TrimSheetNumber, str.TrimTimeInForm, str.TrimRework, str.TrimNotes ,

str.ActivityType, str.Rev, str.TimeStamp
FROM SubsTrimREV str
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryTrim__count">
        <![CDATA[
        select count(*) from (SELECT st.* 
FROM SubsTrim st
WHERE ID = :RowID

UNION ALL

SELECT  str.fk_OrgActivityId, str.SubmissionID, 
str.TrimActivitySelect, str.TrimSize, str.TrimQuantity, str.TrimHandleType, str.TrimInstrumentType, str.TrimDrawingNumber, str.TrimLineNumber, str.TrimSheetNumber, str.TrimTimeInForm, str.TrimRework, str.TrimNotes ,

str.ActivityType, str.Rev, str.TimeStamp
FROM SubsTrimREV str
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantitiesTestPackageCivil">
        <![CDATA[
        SELECT ctd.BidID, ctd.TestPackageNumber, 

#### Count ####
count(ctd.BidID) AS SellPunchCount,

#### Hours ####
sum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,

#### Installed Count ####
sum(COALESCE(ers.InstalledSellPunch,0)) AS SellPunchInstalled,

#### Earned Hours ####
sum(IF(ers.InstalledSellPunch = 1, 
/*TRUE*/
(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')),
/*FALSE*/
0
)) AS EarnedSellPunchHours,

#### Loose Hours ####
sum(
(COALESCE(ctd.EstimatedHours,0) * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent') / COALESCE(ctd.TakeOffQuantity,0)) 
*
(COALESCE(ctd.TakeOffQuantity,0) - COALESCE(EarnedFAHours,0))
) AS LooseHours

FROM CivilTrackerDetails ctd

LEFT JOIN (SELECT min(ctd.UID) AS UID,
### Hours Earned ###
IF(sum(COALESCE(IF(ss.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), COALESCE(cfa.FAQuantity,0)),0)) /*Nested IF convertes % to Quantity*/
	> ctd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ ctd.EstimatedHours*', CivilHoursPercent, ',
    /*FALSE*/ sum(COALESCE((ctd.EstimatedHours*', CivilHoursPercent, '/ctd.TakeOffQuantity*(COALESCE(IF(ss.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), cfa.FAQuantity),0))), 0))
    ) AS EarnedFAHours

### SS Joins ###
FROM SubmissionStatus ss
	JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN CivilFA cfa
		ON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71) AND cfa.FARework = 0

	LEFT JOIN CivilMisc cfm
		ON cfm.ID = ss.ActivityRowId AND ss.ActivityType = 97 AND cfm.MiscRework = 0
 
    LEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours
				FROM`CivilTrackerDetails`
				GROUP BY BidID) ctd
		ON ctd.BidID = ss.fk_BidIDAssigned
        
WHERE fk_ActivityStatus IN (5,12)
AND ss.ActivityType IN (70,71,97)
GROUP BY ctd.BidID) er
		ON er.UID = ctd.UID


 ##### Earned Sell HOURS #####       
LEFT JOIN (SELECT min(ctd.UID) AS UID, cs.InstalledSellPunch
			FROM CivilTrackerDetails ctd
			LEFT JOIN (SELECT ss.ActivityType, cs.SellTestPackageNumber, 1 AS InstalledSellPunch
						FROM CivilSellPackage cs 
						INNER JOIN SubmissionStatus ss
							ON ss.ActivityRowId = cs.ID AND ss.ActivityType = 72 AND ss.fk_ActivityStatus IN (5,12)) cs
	ON cs.SellTestPackageNumber = ctd.TestPackageNumber AND ctd.ActivityType != "Demo"
GROUP BY ctd.BidID) ers
	On ers.UID = ctd.UID

WHERE ctd.TestPackageNumber = :TestPackage
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetQuantitiesTestPackageCivil__count">
        <![CDATA[
        select count(*) from (SELECT ctd.BidID, ctd.TestPackageNumber, 

#### Count ####
count(ctd.BidID) AS SellPunchCount,

#### Hours ####
sum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,

#### Installed Count ####
sum(COALESCE(ers.InstalledSellPunch,0)) AS SellPunchInstalled,

#### Earned Hours ####
sum(IF(ers.InstalledSellPunch = 1, 
/*TRUE*/
(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')),
/*FALSE*/
0
)) AS EarnedSellPunchHours,

#### Loose Hours ####
sum(
(COALESCE(ctd.EstimatedHours,0) * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent') / COALESCE(ctd.TakeOffQuantity,0)) 
*
(COALESCE(ctd.TakeOffQuantity,0) - COALESCE(EarnedFAHours,0))
) AS LooseHours

FROM CivilTrackerDetails ctd

LEFT JOIN (SELECT min(ctd.UID) AS UID,
### Hours Earned ###
IF(sum(COALESCE(IF(ss.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), COALESCE(cfa.FAQuantity,0)),0)) /*Nested IF convertes % to Quantity*/
	> ctd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/
    /*TRUE*/ ctd.EstimatedHours*', CivilHoursPercent, ',
    /*FALSE*/ sum(COALESCE((ctd.EstimatedHours*', CivilHoursPercent, '/ctd.TakeOffQuantity*(COALESCE(IF(ss.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), cfa.FAQuantity),0))), 0))
    ) AS EarnedFAHours

### SS Joins ###
FROM SubmissionStatus ss
	JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN CivilFA cfa
		ON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71) AND cfa.FARework = 0

	LEFT JOIN CivilMisc cfm
		ON cfm.ID = ss.ActivityRowId AND ss.ActivityType = 97 AND cfm.MiscRework = 0
 
    LEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours
				FROM`CivilTrackerDetails`
				GROUP BY BidID) ctd
		ON ctd.BidID = ss.fk_BidIDAssigned
        
WHERE fk_ActivityStatus IN (5,12)
AND ss.ActivityType IN (70,71,97)
GROUP BY ctd.BidID) er
		ON er.UID = ctd.UID


 ##### Earned Sell HOURS #####       
LEFT JOIN (SELECT min(ctd.UID) AS UID, cs.InstalledSellPunch
			FROM CivilTrackerDetails ctd
			LEFT JOIN (SELECT ss.ActivityType, cs.SellTestPackageNumber, 1 AS InstalledSellPunch
						FROM CivilSellPackage cs 
						INNER JOIN SubmissionStatus ss
							ON ss.ActivityRowId = cs.ID AND ss.ActivityType = 72 AND ss.fk_ActivityStatus IN (5,12)) cs
	ON cs.SellTestPackageNumber = ctd.TestPackageNumber AND ctd.ActivityType != "Demo"
GROUP BY ctd.BidID) ers
	On ers.UID = ctd.UID

WHERE ctd.TestPackageNumber = :TestPackage) wmTempTable
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetReportDWRByDate">
        <![CDATA[
        SELECT ss.PSAActivityID AS FieldActivityID, sw.ID AS RowID,
sw.WeldSpool1, sw.WeldSpool2, sw.WeldLineNumber, sw.WeldDrawingNumber, sw.WeldSheetNumber, sw.WeldNumber,
sw.WeldStencil, sw.WeldSize, sw.WeldThickness, sw.WeldMaterial, sw.WeldType, sw.WeldLineSpec, sw.WeldProcedure, sw.WeldNotes,
sd.ReceivedTime
FROM SubmissionStatus ss

LEFT JOIN SubsWeld sw
	ON sw.ID = ss.ActivityRowId

LEFT JOIN SubsDetails sd
	ON sd.SubmissionId = ss.fk_SubmissionId
    
WHERE ss.ActivityType = 22 /* AND ss.fk_ActivityStatus IN (5,12) */
AND sd.ReceivedTime BETWEEN :BeginDate and :EndDate

ORDER BY sd.ReceivedTime
        ]]>
    <query-param name="BeginDate" type="java.sql.Date"/>
    <query-param name="EndDate" type="java.sql.Date"/>
    </sql-query>

    <sql-query name="GetReportDWRByDate__count">
        <![CDATA[
        select count(*) from (SELECT ss.PSAActivityID AS FieldActivityID, sw.ID AS RowID,
sw.WeldSpool1, sw.WeldSpool2, sw.WeldLineNumber, sw.WeldDrawingNumber, sw.WeldSheetNumber, sw.WeldNumber,
sw.WeldStencil, sw.WeldSize, sw.WeldThickness, sw.WeldMaterial, sw.WeldType, sw.WeldLineSpec, sw.WeldProcedure, sw.WeldNotes,
sd.ReceivedTime
FROM SubmissionStatus ss

LEFT JOIN SubsWeld sw
	ON sw.ID = ss.ActivityRowId

LEFT JOIN SubsDetails sd
	ON sd.SubmissionId = ss.fk_SubmissionId
    
WHERE ss.ActivityType = 22 /* AND ss.fk_ActivityStatus IN (5,12) */
AND sd.ReceivedTime BETWEEN :BeginDate and :EndDate

ORDER BY sd.ReceivedTime) wmTempTable
        ]]>
    <query-param name="BeginDate" type="java.sql.Date"/>
    <query-param name="EndDate" type="java.sql.Date"/>
    </sql-query>

    <sql-query name="GetActivityHistoryTesting">
        <![CDATA[
        SELECT st.* 
FROM SubsTesting st
WHERE ID = :RowID

UNION ALL

SELECT str.fk_OrgActivityId, str.SubmissionID, str.TestingTestPackageNumber, str.TestingHoursSpent, str.TestingRework, str.TestingNotes, str.TestingTimeInForm, 
str.ActivityType, str.Rev, str.TimeStamp
FROM SubsTestingREV str
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryTesting__count">
        <![CDATA[
        select count(*) from (SELECT st.* 
FROM SubsTesting st
WHERE ID = :RowID

UNION ALL

SELECT str.fk_OrgActivityId, str.SubmissionID, str.TestingTestPackageNumber, str.TestingHoursSpent, str.TestingRework, str.TestingNotes, str.TestingTimeInForm, 
str.ActivityType, str.Rev, str.TimeStamp
FROM SubsTestingREV str
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetNoteCount">
        <![CDATA[
        SELECT count(ssn.ID) AS NoteCount
FROM SSNotes ssn
WHERE ssn.fk_PSAActivityID = :PSAActivityID
        ]]>
    <query-param name="PSAActivityID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetNoteCount__count">
        <![CDATA[
        select count(*) from (SELECT count(ssn.ID) AS NoteCount
FROM SSNotes ssn
WHERE ssn.fk_PSAActivityID = :PSAActivityID) wmTempTable
        ]]>
    <query-param name="PSAActivityID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetBidActivityMatchesByTestPackage">
        <![CDATA[
        SELECT td.ID, td.BidID, td.Scope, td.Phase, td.Area, td.Location, td.Elevation, td.CU, td.P6ID, td.P6Description, td.Stage, td.TestPackageNumber, td.CostCode, td.LineNumber, td.EngDrawingNumber, td.SheetNumber, 
td.RevisionNumber, td.System, td.Service, td.ClientPipeSpec, td.MaterialCode, td.Description, td.ComponentNumber, td.ECT, td.PipingActivityType, td.PipeSize, td.TakeOffQuantity, td.QuantityUnit, td.EstimatedHours, 
td.WBS1, td.WBS2, td.WBS3, td.WBS4, td.WBS5, td.WBS6, td.WBS7, td.WBS8, td.WBS9, td.WBS10, td.Rev, td.TimeStamp,

ReadyForTestingInstalled,
HydroInstalled,
ClientTurnoverInstalled,

ste.ReadyForTestingHours AS ReadyForTestingHours,
ste.ReadyForTestingHours AS HydroHours,
ste.ReadyForTestingHours AS ClientTurnoverHours,

ert.EarnedReadyForTestingHours AS EarnedReadyForTestingHours,
ert.EarnedReadyForTestingHours AS EarnedHydroHours,
ert.EarnedReadyForTestingHours AS EarnedClientTurnoverHours

FROM trackerDetails td

	LEFT JOIN (SELECT td.BidID,
sum(COALESCE(steR.InstalledReadyForTesting, 0)) AS ReadyForTestingInstalled,
sum(COALESCE(steH.InstalledHydro, 0)) AS HydroInstalled,
sum(COALESCE(steC.InstalledClientTurnover, 0)) AS ClientTurnoverInstalled,

sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * steR.InstalledReadyForTesting, 0)) AS EarnedReadyForTestingHours,
sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') * steH.InstalledHydro, 0)) AS EarnedHydroHours,
sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') * steC.InstalledClientTurnover, 0)) AS EarnedClientTurnoverHours



FROM trackerDetails td

LEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledReadyForTesting
			FROM SubsTesting ste
            INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 41 AND ss.fk_ActivityStatus IN (5,12)) steR
	ON steR.TestingTestPackageNumber = td.TestPackageNumber AND steR.ActivityType = 41
    
LEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledHydro
			FROM SubsTesting ste
            INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 42 AND ss.fk_ActivityStatus IN (5,12)) steH
	ON steH.TestingTestPackageNumber = td.TestPackageNumber AND steH.ActivityType = 42
    
LEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledClientTurnover
			FROM SubsTesting ste
            INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 43 AND ss.fk_ActivityStatus IN (5,12)) steC
	ON steC.TestingTestPackageNumber = td.TestPackageNumber AND steC.ActivityType = 43

GROUP BY td.BidID) ert
	ON ert.BidID = td.BidID
    
LEFT JOIN (SELECT td.BidID, 
				COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent'),0) AS TestingHours,
                COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent')),0) AS ReadyForTestingHours,
                COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent')),0) AS HydroHours,
                COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent')),0) AS ClientTurnoverHours
				FROM `trackerDetails` td
				WHERE td.ECT != 'D') ste
	ON ste.BidID = td.BidID

WHERE td.TestPackageNumber = :TestPackage
ORDER BY td.EngDrawingNumber, td.SheetNumber
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetBidActivityMatchesByTestPackage__count">
        <![CDATA[
        select count(*) from (SELECT td.ID, td.BidID, td.Scope, td.Phase, td.Area, td.Location, td.Elevation, td.CU, td.P6ID, td.P6Description, td.Stage, td.TestPackageNumber, td.CostCode, td.LineNumber, td.EngDrawingNumber, td.SheetNumber, 
td.RevisionNumber, td.System, td.Service, td.ClientPipeSpec, td.MaterialCode, td.Description, td.ComponentNumber, td.ECT, td.PipingActivityType, td.PipeSize, td.TakeOffQuantity, td.QuantityUnit, td.EstimatedHours, 
td.WBS1, td.WBS2, td.WBS3, td.WBS4, td.WBS5, td.WBS6, td.WBS7, td.WBS8, td.WBS9, td.WBS10, td.Rev, td.TimeStamp,

ReadyForTestingInstalled,
HydroInstalled,
ClientTurnoverInstalled,

ste.ReadyForTestingHours AS ReadyForTestingHours,
ste.ReadyForTestingHours AS HydroHours,
ste.ReadyForTestingHours AS ClientTurnoverHours,

ert.EarnedReadyForTestingHours AS EarnedReadyForTestingHours,
ert.EarnedReadyForTestingHours AS EarnedHydroHours,
ert.EarnedReadyForTestingHours AS EarnedClientTurnoverHours

FROM trackerDetails td

	LEFT JOIN (SELECT td.BidID,
sum(COALESCE(steR.InstalledReadyForTesting, 0)) AS ReadyForTestingInstalled,
sum(COALESCE(steH.InstalledHydro, 0)) AS HydroInstalled,
sum(COALESCE(steC.InstalledClientTurnover, 0)) AS ClientTurnoverInstalled,

sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * steR.InstalledReadyForTesting, 0)) AS EarnedReadyForTestingHours,
sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') * steH.InstalledHydro, 0)) AS EarnedHydroHours,
sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') * steC.InstalledClientTurnover, 0)) AS EarnedClientTurnoverHours



FROM trackerDetails td

LEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledReadyForTesting
			FROM SubsTesting ste
            INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 41 AND ss.fk_ActivityStatus IN (5,12)) steR
	ON steR.TestingTestPackageNumber = td.TestPackageNumber AND steR.ActivityType = 41
    
LEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledHydro
			FROM SubsTesting ste
            INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 42 AND ss.fk_ActivityStatus IN (5,12)) steH
	ON steH.TestingTestPackageNumber = td.TestPackageNumber AND steH.ActivityType = 42
    
LEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledClientTurnover
			FROM SubsTesting ste
            INNER JOIN SubmissionStatus ss
				ON ss.ActivityRowId = ste.ID AND ss.ActivityType = 43 AND ss.fk_ActivityStatus IN (5,12)) steC
	ON steC.TestingTestPackageNumber = td.TestPackageNumber AND steC.ActivityType = 43

GROUP BY td.BidID) ert
	ON ert.BidID = td.BidID
    
LEFT JOIN (SELECT td.BidID, 
				COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent'),0) AS TestingHours,
                COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent')),0) AS ReadyForTestingHours,
                COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent')),0) AS HydroHours,
                COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent')),0) AS ClientTurnoverHours
				FROM `trackerDetails` td
				WHERE td.ECT != 'D') ste
	ON ste.BidID = td.BidID

WHERE td.TestPackageNumber = :TestPackage
ORDER BY td.EngDrawingNumber, td.SheetNumber) wmTempTable
        ]]>
    <query-param name="TestPackage" type="java.lang.String"/>
    </sql-query>

    <sql-query name="GetReportDPRByDate">
        <![CDATA[
        SELECT 
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  
se.ErectionDrawingNumber AS DrawingNumber, 
se.ErectionSheetNumber AS SheetNumber, 
se.ErectionSpool1 AS Spool1, 
IF(se.ErectionSpool3 IS NULL OR se.ErectionSpool3 = '', se.ErectionSpool2,  CONCAT(se.ErectionSpool2, '...')) AS Spool2,
se.ErectionPipeSize AS Size, 
(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6) AS QuantityInstalled,
ats.Status AS CurrentStatus,
se.ErectionNotes AS Notes,
se.ErectionRework AS Rework,
DATE(sd.ReceivedTime) AS DateSubmitted


FROM SubmissionStatus ss
JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

    LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11
WHERE ss.ActivityType = 11
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day


UNION



SELECT
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, 
sb.BoltUpDrawingNumber, 
sb.BoltUpSheetNumber, 
sb.BoltUpSpool1, 
sb.BoltUpSpool2, 
sb.BoltUpSize, 
sb.BoltUpQuantity, 
ats.Status,
sb.BoltUpNotes,
sb.BoltUpRework,
DATE(sd.ReceivedTime) 


FROM SubmissionStatus ss

JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
        LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

    LEFT JOIN SubsBoltUp sb
        ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
    
WHERE ss.ActivityType = 21
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)      
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day


UNION



SELECT
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, 
sw.WeldDrawingNumber, 
sw.WeldSheetNumber, 
sw.WeldSpool1, 
sw.WeldSpool2, 
sw.WeldSize, 
COALESCE((sw.WeldPercentCompleted * .01),0), 
ats.Status,
sw.WeldNotes,
sw.WeldRework,
DATE(sd.ReceivedTime) 


FROM SubmissionStatus ss

JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
        LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

    LEFT JOIN SubsWeld sw
        ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
WHERE ss.ActivityType = 22
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day


UNION



SELECT
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, 
sw.WeldDrawingNumber, 
sw.WeldSheetNumber, 
'N/A', 
'N/A', 
sw.WeldSize, 
 COALESCE((sw.WeldPercentCompleted * .01),0), 
ats.Status,
sw.WeldNotes,
sw.WeldRework,
DATE(sd.ReceivedTime) 


FROM SubmissionStatus ss

JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
        LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

    LEFT JOIN SubsWeld sw
        ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 23
    
        
WHERE ss.ActivityType = 23
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)       
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day


UNION



SELECT
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, 
st.TrimDrawingNumber, 
st.TrimSheetNumber, 
'N/A', 
'N/A', 
st.TrimSize, 
st.TrimQuantity, 
ats.Status,
st.TrimNotes,
st.TrimRework,
DATE(sd.ReceivedTime) 


FROM SubmissionStatus ss

JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
        LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

    LEFT JOIN SubsTrim st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)
        
WHERE ss.ActivityType IN (30,31,33,34,35,39)
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day


UNION



SELECT
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, 
ssu.SupportDrawingNumber, 
ssu.SupportSheetNumber, 
'N/A', 
'N/A', 
'N/A', 
IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)), 
ats.Status,
CONCAT(ssu.SupportType, '-: ', ssu.SupportPartNumber, '-: ', ssu.SupportNotes),
ssu.SupportRework,
DATE(sd.ReceivedTime) 


FROM SubmissionStatus ss

JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
        LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

	LEFT JOIN SubsSupports ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
        
WHERE ss.ActivityType = 32
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day


UNION



SELECT
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, 
sdem.DemoDrawingNumber, 
sdem.DemoSheetNumber, 
'N/A', 
'N/A', 
sdem.DemoSize, 
sdem.DemoQuantity, 
ats.Status,
sdem.DemoNotes,
0,
DATE(sd.ReceivedTime) 


FROM SubmissionStatus ss

JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
        LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

    LEFT JOIN SubsDemo sdem
		ON sdem.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59)
        
WHERE ss.ActivityType IN (51,52,53,59)
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day


UNION



SELECT
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, 
sm.MiscDrawingNumber, 
sm.MiscSheetNumber, 
'N/A', 
'N/A', 
'N/A', 
sm.MiscQuantity, 
ats.Status,
sm.MiscNotes,
sm.MiscRework,
DATE(sd.ReceivedTime) 


FROM SubmissionStatus ss

JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
        LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

    LEFT JOIN SubsMisc sm
		ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91
        
WHERE ss.ActivityType = 91
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)  
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID) 
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day
        ]]>
    <query-param name="ForemanID" type="java.lang.String"/>
    <query-param name="SuperID" type="java.lang.String"/>
    <query-param name="ManagerID" type="java.lang.String"/>
    <query-param name="StartDate" type="java.sql.Date"/>
    <query-param name="EndDate" type="java.sql.Date"/>
    </sql-query>

    <sql-query name="GetReportDPRByDate__count">
        <![CDATA[
        select count(*) from (SELECT 
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  
se.ErectionDrawingNumber AS DrawingNumber, 
se.ErectionSheetNumber AS SheetNumber, 
se.ErectionSpool1 AS Spool1, 
IF(se.ErectionSpool3 IS NULL OR se.ErectionSpool3 = '', se.ErectionSpool2,  CONCAT(se.ErectionSpool2, '...')) AS Spool2,
se.ErectionPipeSize AS Size, 
(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6) AS QuantityInstalled,
ats.Status AS CurrentStatus,
se.ErectionNotes AS Notes,
se.ErectionRework AS Rework,
DATE(sd.ReceivedTime) AS DateSubmitted


FROM SubmissionStatus ss
JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
    LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

    LEFT JOIN SubsErection se
		ON se.ID = ss.ActivityRowId AND ss.ActivityType = 11
WHERE ss.ActivityType = 11
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day


UNION



SELECT
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, 
sb.BoltUpDrawingNumber, 
sb.BoltUpSheetNumber, 
sb.BoltUpSpool1, 
sb.BoltUpSpool2, 
sb.BoltUpSize, 
sb.BoltUpQuantity, 
ats.Status,
sb.BoltUpNotes,
sb.BoltUpRework,
DATE(sd.ReceivedTime) 


FROM SubmissionStatus ss

JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
        LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

    LEFT JOIN SubsBoltUp sb
        ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21
    
WHERE ss.ActivityType = 21
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)      
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day


UNION



SELECT
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, 
sw.WeldDrawingNumber, 
sw.WeldSheetNumber, 
sw.WeldSpool1, 
sw.WeldSpool2, 
sw.WeldSize, 
COALESCE((sw.WeldPercentCompleted * .01),0), 
ats.Status,
sw.WeldNotes,
sw.WeldRework,
DATE(sd.ReceivedTime) 


FROM SubmissionStatus ss

JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
        LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

    LEFT JOIN SubsWeld sw
        ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22
        
WHERE ss.ActivityType = 22
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day


UNION



SELECT
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, 
sw.WeldDrawingNumber, 
sw.WeldSheetNumber, 
'N/A', 
'N/A', 
sw.WeldSize, 
 COALESCE((sw.WeldPercentCompleted * .01),0), 
ats.Status,
sw.WeldNotes,
sw.WeldRework,
DATE(sd.ReceivedTime) 


FROM SubmissionStatus ss

JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
        LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

    LEFT JOIN SubsWeld sw
        ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 23
    
        
WHERE ss.ActivityType = 23
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)       
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day


UNION



SELECT
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, 
st.TrimDrawingNumber, 
st.TrimSheetNumber, 
'N/A', 
'N/A', 
st.TrimSize, 
st.TrimQuantity, 
ats.Status,
st.TrimNotes,
st.TrimRework,
DATE(sd.ReceivedTime) 


FROM SubmissionStatus ss

JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
        LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

    LEFT JOIN SubsTrim st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)
        
WHERE ss.ActivityType IN (30,31,33,34,35,39)
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day


UNION



SELECT
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, 
ssu.SupportDrawingNumber, 
ssu.SupportSheetNumber, 
'N/A', 
'N/A', 
'N/A', 
IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)), 
ats.Status,
CONCAT(ssu.SupportType, '-: ', ssu.SupportPartNumber, '-: ', ssu.SupportNotes),
ssu.SupportRework,
DATE(sd.ReceivedTime) 


FROM SubmissionStatus ss

JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
        LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

	LEFT JOIN SubsSupports ssu
		ON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 
        
WHERE ss.ActivityType = 32
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day


UNION



SELECT
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, 
sdem.DemoDrawingNumber, 
sdem.DemoSheetNumber, 
'N/A', 
'N/A', 
sdem.DemoSize, 
sdem.DemoQuantity, 
ats.Status,
sdem.DemoNotes,
0,
DATE(sd.ReceivedTime) 


FROM SubmissionStatus ss

JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
        LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

    LEFT JOIN SubsDemo sdem
		ON sdem.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59)
        
WHERE ss.ActivityType IN (51,52,53,59)
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day


UNION



SELECT
ss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, 
sm.MiscDrawingNumber, 
sm.MiscSheetNumber, 
'N/A', 
'N/A', 
'N/A', 
sm.MiscQuantity, 
ats.Status,
sm.MiscNotes,
sm.MiscRework,
DATE(sd.ReceivedTime) 


FROM SubmissionStatus ss

JOIN PSA.REF_ActivityTypes at
		ON at.ID = ss.ActivityType
        
	LEFT JOIN PSA.REF_ActivityStatuses ats
		ON ats.ID = ss.fk_ActivityStatus
	
        LEFT JOIN SubsDetails sd
		ON sd.SubmissionId = ss.fk_SubmissionId
	left JOIN PSA.tblCrews tc
		ON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev
	left JOIN PSA.tblCrewsRev tcr
		ON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev

    LEFT JOIN SubsMisc sm
		ON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91
        
WHERE ss.ActivityType = 91
AND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)  
AND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)
AND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR
	 tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID) 
AND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day) wmTempTable
        ]]>
    <query-param name="ForemanID" type="java.lang.String"/>
    <query-param name="SuperID" type="java.lang.String"/>
    <query-param name="ManagerID" type="java.lang.String"/>
    <query-param name="StartDate" type="java.sql.Date"/>
    <query-param name="EndDate" type="java.sql.Date"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelMisc">
        <![CDATA[
        SELECT stlm.* 
FROM SteelMisc stlm
WHERE ID = :RowID

UNION ALL

SELECT stlmr.fk_OrgActivityId, stlmr.SubmissionID, stlmr.MiscArea, stlmr.MiscPieceNumber, stlmr.MiscQuantity, stlmr.MiscRework, stlmr.MiscNotes, stlmr.ActivityType, stlmr.MiscTimeInForm, stlmr.Rev, stlmr.TimeStamp
FROM SteelMiscREV stlmr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistorySteelMisc__count">
        <![CDATA[
        select count(*) from (SELECT stlm.* 
FROM SteelMisc stlm
WHERE ID = :RowID

UNION ALL

SELECT stlmr.fk_OrgActivityId, stlmr.SubmissionID, stlmr.MiscArea, stlmr.MiscPieceNumber, stlmr.MiscQuantity, stlmr.MiscRework, stlmr.MiscNotes, stlmr.ActivityType, stlmr.MiscTimeInForm, stlmr.Rev, stlmr.TimeStamp
FROM SteelMiscREV stlmr
WHERE fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryCivilFA">
        <![CDATA[
        SELECT cfa.* 
FROM CivilFA cfa
WHERE ID = :RowID

UNION

SELECT cfar.fk_OrgActivityId, cfar.SubmissionID, cfar.FABidID, cfar.FAFoundation, cfar.FADescription, cfar.FADrawingNumber, cfar.FADetailDrawingNumber, cfar.FAPercentComplete, cfar.FAQuantity, cfar.FARework, 
cfar.FANotes, cfar.ActivityType, cfar.FATimeInForm, cfar.Rev, cfar.TimeStamp
FROM CivilFAREV cfar
WHERE cfar.fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetActivityHistoryCivilFA__count">
        <![CDATA[
        select count(*) from (SELECT cfa.* 
FROM CivilFA cfa
WHERE ID = :RowID

UNION

SELECT cfar.fk_OrgActivityId, cfar.SubmissionID, cfar.FABidID, cfar.FAFoundation, cfar.FADescription, cfar.FADrawingNumber, cfar.FADetailDrawingNumber, cfar.FAPercentComplete, cfar.FAQuantity, cfar.FARework, 
cfar.FANotes, cfar.ActivityType, cfar.FATimeInForm, cfar.Rev, cfar.TimeStamp
FROM CivilFAREV cfar
WHERE cfar.fk_OrgActivityId = :RowID
ORDER BY TimeStamp DESC) wmTempTable
        ]]>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="UpdateErection">
        <![CDATA[
        UPDATE SubsErection
SET
ErectionSpool1 = :Spool1,
ErectionLengthSpool1 = :Spool1Length,
ErectionSpool2 = :Spool2,
ErectionLengthSpool2 = :Spool2Length,
ErectionSpool3 = :Spool3,
ErectionLengthSpool3 = :Spool3Length,
ErectionSpool4 = :Spool4,
ErectionLengthSpool4 = :Spool4Length,
ErectionSpool5 = :Spool5,
ErectionLengthSpool5 = :Spool5Length,
ErectionSpool6 = :Spool6,
ErectionLengthSpool6 = :Spool6Length,
ErectionOnCords = :OnCords,
ErectionDrawingNumber = :DrawingNumber,
ErectionLineNumber = :LineNumber,
ErectionSheetNumber = :SheetNumber,
ErectionPipeSize = :Size,
ErectionRework = :Rework,
ErectionNotes = :Notes
WHERE ID = :RowID
        ]]>
    <query-param name="Spool1" type="java.lang.String"/>
    <query-param name="Spool1Length" type="java.lang.Integer"/>
    <query-param name="Spool2" type="java.lang.String"/>
    <query-param name="Spool2Length" type="java.lang.Integer"/>
    <query-param name="Spool3" type="java.lang.String"/>
    <query-param name="Spool3Length" type="java.lang.Integer"/>
    <query-param name="Spool4" type="java.lang.String"/>
    <query-param name="Spool4Length" type="java.lang.Integer"/>
    <query-param name="Spool5" type="java.lang.String"/>
    <query-param name="Spool5Length" type="java.lang.Integer"/>
    <query-param name="Spool6" type="java.lang.String"/>
    <query-param name="Spool6Length" type="java.lang.Integer"/>
    <query-param name="OnCords" type="java.lang.Byte"/>
    <query-param name="DrawingNumber" type="java.lang.String"/>
    <query-param name="LineNumber" type="java.lang.String"/>
    <query-param name="SheetNumber" type="java.lang.String"/>
    <query-param name="Size" type="java.math.BigDecimal"/>
    <query-param name="Rework" type="java.lang.Integer"/>
    <query-param name="Notes" type="java.lang.String"/>
    <query-param name="RowID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantityTrimInstalled">
        <![CDATA[
        SELECT SUM(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0)) AS Total

FROM SubmissionStatus ss

    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
	
   LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled
				FROM SubsTrim st
                WHERE st.TrimRework = 0) st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smt
		ON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'



WHERE ss.ActivityType IN (30,31,33,34,35,39,91)
AND ss.fk_ActivityStatus IN (5,12)
AND fk_BidIDAssigned = :BidID
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>

    <sql-query name="GetQuantityTrimInstalled__count">
        <![CDATA[
        select count(*) from (SELECT SUM(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0)) AS Total

FROM SubmissionStatus ss

    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType
				FROM `trackerDetails`
				GROUP BY BidID)td
		ON td.BidID = ss.fk_BidIDAssigned
	
   LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled
				FROM SubsTrim st
                WHERE st.TrimRework = 0) st
		ON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)
        
	LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled
				FROM SubsMisc sm
                WHERE sm.MiscRework = 0) smt
		ON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'



WHERE ss.ActivityType IN (30,31,33,34,35,39,91)
AND ss.fk_ActivityStatus IN (5,12)
AND fk_BidIDAssigned = :BidID) wmTempTable
        ]]>
    <query-param name="BidID" type="java.lang.Integer"/>
    </sql-query>
</hibernate-mapping>
