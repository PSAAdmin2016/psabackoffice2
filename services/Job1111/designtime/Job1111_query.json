{
  "CheckSSLock" : {
    "name" : "CheckSSLock",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT ss.LockField \nFROM SubmissionStatus ss\nWHERE PSAActivityID = :PSAActivityID",
    "countQueryString" : "select count(*) from (SELECT ss.LockField \nFROM SubmissionStatus ss\nWHERE PSAActivityID = :PSAActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "PSAActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "158",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.CheckSslockResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "LockField",
        "fieldName" : "lockField",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "CreateSSNote" : {
    "name" : "CreateSSNote",
    "description" : "Creates a Submission Note",
    "version" : "V1",
    "queryString" : "INSERT INTO SSNotes (`fk_PSAActivityID`, `fk_uid` ,`Notes`) \nVALUES (:PSAActivityID, :CreatedBy ,:Note)",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "INSERT",
    "parameters" : [ {
      "name" : "PSAActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "20",
      "required" : false
    }, {
      "name" : "CreatedBy",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Note",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "TestNote",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.CreateSsnoteRequest",
      "method" : "POST"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "GetALLTotals" : {
    "name" : "GetALLTotals",
    "description" : "Gets the Sum of all totals",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM CacheTable_StatsByJob",
    "countQueryString" : "select count(*) from (SELECT *\nFROM CacheTable_StatsByJob) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetAlltotalsResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "PercentComplete",
        "fieldName" : "percentComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursALLMech",
        "fieldName" : "hoursAllmech",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBoltUps",
        "fieldName" : "remainingBoltUps",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursMisc",
        "fieldName" : "hoursMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedDemoHours",
        "fieldName" : "earnedDemoHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicConnections",
        "fieldName" : "remainingBasicConnections",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedTestingHours",
        "fieldName" : "earnedTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBasicConnectHours",
        "fieldName" : "earnedBasicConnectHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedSupportHours",
        "fieldName" : "earnedSupportHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingWeldHours",
        "fieldName" : "remainingWeldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledDemo",
        "fieldName" : "installedDemo",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledMisc",
        "fieldName" : "installedMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursTrim",
        "fieldName" : "hoursTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedTrimHours",
        "fieldName" : "earnedTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledSupports",
        "fieldName" : "installedSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "RemainingFootage",
        "fieldName" : "remainingFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountSupports",
        "fieldName" : "countSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CountErectionFootage",
        "fieldName" : "countErectionFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingSupportHours",
        "fieldName" : "remainingSupportHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedMiscHours",
        "fieldName" : "earnedMiscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicTrimActivities",
        "fieldName" : "remainingBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicTrimHours",
        "fieldName" : "remainingBasicTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingDemoActivities",
        "fieldName" : "remainingDemoActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountMiscActivities",
        "fieldName" : "countMiscActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CountDemo",
        "fieldName" : "countDemo",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingBoltUpHours",
        "fieldName" : "remainingBoltUpHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTrimActivities",
        "fieldName" : "remainingTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursTesting",
        "fieldName" : "hoursTesting",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBasicTrim",
        "fieldName" : "installedBasicTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBasicTrimHours",
        "fieldName" : "earnedBasicTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledTrim",
        "fieldName" : "installedTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursErection",
        "fieldName" : "hoursErection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBasicConnection",
        "fieldName" : "countBasicConnection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedWeldHours",
        "fieldName" : "earnedWeldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingWelds",
        "fieldName" : "remainingWelds",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBoltUp",
        "fieldName" : "hoursBoltUp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTrimHours",
        "fieldName" : "remainingTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingMiscActivities",
        "fieldName" : "remainingMiscActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingMiscHours",
        "fieldName" : "remainingMiscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTestingHours",
        "fieldName" : "remainingTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursWeld",
        "fieldName" : "hoursWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBoltUpHours",
        "fieldName" : "earnedBoltUpHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountTrimActivities",
        "fieldName" : "countTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingSupports",
        "fieldName" : "remainingSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBoltUp",
        "fieldName" : "countBoltUp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursDemo",
        "fieldName" : "hoursDemo",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedErectionHours",
        "fieldName" : "earnedErectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedALLMech",
        "fieldName" : "earnedAllmech",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBasicTrimActivities",
        "fieldName" : "countBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "InstalledWelds",
        "fieldName" : "installedWelds",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBasicTrimActivities",
        "fieldName" : "hoursBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBoltUps",
        "fieldName" : "installedBoltUps",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingErectionHours",
        "fieldName" : "remainingErectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicConnectionHours",
        "fieldName" : "remainingBasicConnectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBasicConnections",
        "fieldName" : "installedBasicConnections",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingDemoHours",
        "fieldName" : "remainingDemoHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursSupports",
        "fieldName" : "hoursSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBasicConnection",
        "fieldName" : "hoursBasicConnection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountWeld",
        "fieldName" : "countWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "InstalledFootage",
        "fieldName" : "installedFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetALLTotalsByArea" : {
    "name" : "GetALLTotalsByArea",
    "description" : "Get all takeoffs quantities, Installed quantities,takoff Hours, Hours earned, Remaining Quantities, and remaining hours BY Area",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM CacheTable_StatsByArea",
    "countQueryString" : "select count(*) from (SELECT *\nFROM CacheTable_StatsByArea) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetAlltotalsByAreaResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "PercentComplete",
        "fieldName" : "percentComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursALLMech",
        "fieldName" : "hoursAllmech",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBoltUps",
        "fieldName" : "remainingBoltUps",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursMisc",
        "fieldName" : "hoursMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicConnections",
        "fieldName" : "remainingBasicConnections",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedTestingHours",
        "fieldName" : "earnedTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBasicConnectHours",
        "fieldName" : "earnedBasicConnectHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedSupportHours",
        "fieldName" : "earnedSupportHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingWeldHours",
        "fieldName" : "remainingWeldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledMisc",
        "fieldName" : "installedMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursTrim",
        "fieldName" : "hoursTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedTrimHours",
        "fieldName" : "earnedTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledSupports",
        "fieldName" : "installedSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingFootage",
        "fieldName" : "remainingFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountSupports",
        "fieldName" : "countSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CountErectionFootage",
        "fieldName" : "countErectionFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingSupportHours",
        "fieldName" : "remainingSupportHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedMiscHours",
        "fieldName" : "earnedMiscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicTrimActivities",
        "fieldName" : "remainingBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicTrimHours",
        "fieldName" : "remainingBasicTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountMiscActivities",
        "fieldName" : "countMiscActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingBoltUpHours",
        "fieldName" : "remainingBoltUpHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTrimActivities",
        "fieldName" : "remainingTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursTesting",
        "fieldName" : "hoursTesting",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBasicTrim",
        "fieldName" : "installedBasicTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EarnedBasicTrimHours",
        "fieldName" : "earnedBasicTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledTrim",
        "fieldName" : "installedTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursErection",
        "fieldName" : "hoursErection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBasicConnection",
        "fieldName" : "countBasicConnection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedWeldHours",
        "fieldName" : "earnedWeldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingWelds",
        "fieldName" : "remainingWelds",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBoltUp",
        "fieldName" : "hoursBoltUp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTrimHours",
        "fieldName" : "remainingTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingMiscActivities",
        "fieldName" : "remainingMiscActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingMiscHours",
        "fieldName" : "remainingMiscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursWeld",
        "fieldName" : "hoursWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBoltUpHours",
        "fieldName" : "earnedBoltUpHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountTrimActivities",
        "fieldName" : "countTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingSupports",
        "fieldName" : "remainingSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBoltUp",
        "fieldName" : "countBoltUp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedErectionHours",
        "fieldName" : "earnedErectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBasicTrimActivities",
        "fieldName" : "countBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedALLMech",
        "fieldName" : "earnedAllmech",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledWelds",
        "fieldName" : "installedWelds",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBasicTrimActivities",
        "fieldName" : "hoursBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingErectionHours",
        "fieldName" : "remainingErectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBoltUps",
        "fieldName" : "installedBoltUps",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicConnectionHours",
        "fieldName" : "remainingBasicConnectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBasicConnections",
        "fieldName" : "installedBasicConnections",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursSupports",
        "fieldName" : "hoursSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBasicConnection",
        "fieldName" : "hoursBasicConnection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountWeld",
        "fieldName" : "countWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "InstalledFootage",
        "fieldName" : "installedFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetALLTotalsByBidID" : {
    "name" : "GetALLTotalsByBidID",
    "description" : "Gets all Totals By td.ID",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM CacheTable_StatsByID",
    "countQueryString" : "select count(*) from (SELECT *\nFROM CacheTable_StatsByID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetAlltotalsByBidIdResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "PercentComplete",
        "fieldName" : "percentComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "RemainingBoltUps",
        "fieldName" : "remainingBoltUps",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursALLMech",
        "fieldName" : "hoursAllmech",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursMisc",
        "fieldName" : "hoursMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedDemoHours",
        "fieldName" : "earnedDemoHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicConnections",
        "fieldName" : "remainingBasicConnections",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EarnedTestingHours",
        "fieldName" : "earnedTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBasicConnectHours",
        "fieldName" : "earnedBasicConnectHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedSupportHours",
        "fieldName" : "earnedSupportHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledDemo",
        "fieldName" : "installedDemo",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingWeldHours",
        "fieldName" : "remainingWeldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledMisc",
        "fieldName" : "installedMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursTrim",
        "fieldName" : "hoursTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedTrimHours",
        "fieldName" : "earnedTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledSupports",
        "fieldName" : "installedSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CountSupports",
        "fieldName" : "countSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingFootage",
        "fieldName" : "remainingFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountErectionFootage",
        "fieldName" : "countErectionFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingSupportHours",
        "fieldName" : "remainingSupportHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedMiscHours",
        "fieldName" : "earnedMiscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicTrimActivities",
        "fieldName" : "remainingBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicTrimHours",
        "fieldName" : "remainingBasicTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingDemoActivities",
        "fieldName" : "remainingDemoActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountMiscActivities",
        "fieldName" : "countMiscActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CountDemo",
        "fieldName" : "countDemo",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingBoltUpHours",
        "fieldName" : "remainingBoltUpHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTrimActivities",
        "fieldName" : "remainingTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursTesting",
        "fieldName" : "hoursTesting",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBasicTrim",
        "fieldName" : "installedBasicTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EarnedBasicTrimHours",
        "fieldName" : "earnedBasicTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledTrim",
        "fieldName" : "installedTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursErection",
        "fieldName" : "hoursErection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedWeldHours",
        "fieldName" : "earnedWeldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBasicConnection",
        "fieldName" : "countBasicConnection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "RemainingWelds",
        "fieldName" : "remainingWelds",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBoltUp",
        "fieldName" : "hoursBoltUp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTrimHours",
        "fieldName" : "remainingTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingMiscActivities",
        "fieldName" : "remainingMiscActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingMiscHours",
        "fieldName" : "remainingMiscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTestingHours",
        "fieldName" : "remainingTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursWeld",
        "fieldName" : "hoursWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBoltUpHours",
        "fieldName" : "earnedBoltUpHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CountTrimActivities",
        "fieldName" : "countTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingSupports",
        "fieldName" : "remainingSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBoltUp",
        "fieldName" : "countBoltUp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursDemo",
        "fieldName" : "hoursDemo",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedErectionHours",
        "fieldName" : "earnedErectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBasicTrimActivities",
        "fieldName" : "countBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedALLMech",
        "fieldName" : "earnedAllmech",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledWelds",
        "fieldName" : "installedWelds",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBasicTrimActivities",
        "fieldName" : "hoursBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBoltUps",
        "fieldName" : "installedBoltUps",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingErectionHours",
        "fieldName" : "remainingErectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicConnectionHours",
        "fieldName" : "remainingBasicConnectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBasicConnections",
        "fieldName" : "installedBasicConnections",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingDemoHours",
        "fieldName" : "remainingDemoHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursSupports",
        "fieldName" : "hoursSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountWeld",
        "fieldName" : "countWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursBasicConnection",
        "fieldName" : "hoursBasicConnection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledFootage",
        "fieldName" : "installedFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetALLTotalsByCU" : {
    "name" : "GetALLTotalsByCU",
    "description" : "Get all takeoffs quantities, Installed quantities,takoff Hours, Hours earned, Remaining Quantities, and remaining hours BY CU",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM CacheTable_StatsByCU",
    "countQueryString" : "select count(*) from (SELECT *\nFROM CacheTable_StatsByCU) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetAlltotalsByCuResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "PercentComplete",
        "fieldName" : "percentComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursALLMech",
        "fieldName" : "hoursAllmech",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBoltUps",
        "fieldName" : "remainingBoltUps",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursMisc",
        "fieldName" : "hoursMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicConnections",
        "fieldName" : "remainingBasicConnections",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedTestingHours",
        "fieldName" : "earnedTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBasicConnectHours",
        "fieldName" : "earnedBasicConnectHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedSupportHours",
        "fieldName" : "earnedSupportHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingWeldHours",
        "fieldName" : "remainingWeldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledMisc",
        "fieldName" : "installedMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursTrim",
        "fieldName" : "hoursTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedTrimHours",
        "fieldName" : "earnedTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledSupports",
        "fieldName" : "installedSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingFootage",
        "fieldName" : "remainingFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountSupports",
        "fieldName" : "countSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CountErectionFootage",
        "fieldName" : "countErectionFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingSupportHours",
        "fieldName" : "remainingSupportHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedMiscHours",
        "fieldName" : "earnedMiscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicTrimActivities",
        "fieldName" : "remainingBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicTrimHours",
        "fieldName" : "remainingBasicTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountMiscActivities",
        "fieldName" : "countMiscActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingBoltUpHours",
        "fieldName" : "remainingBoltUpHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTrimActivities",
        "fieldName" : "remainingTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursTesting",
        "fieldName" : "hoursTesting",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBasicTrim",
        "fieldName" : "installedBasicTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EarnedBasicTrimHours",
        "fieldName" : "earnedBasicTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledTrim",
        "fieldName" : "installedTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursErection",
        "fieldName" : "hoursErection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBasicConnection",
        "fieldName" : "countBasicConnection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedWeldHours",
        "fieldName" : "earnedWeldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingWelds",
        "fieldName" : "remainingWelds",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBoltUp",
        "fieldName" : "hoursBoltUp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTrimHours",
        "fieldName" : "remainingTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingMiscActivities",
        "fieldName" : "remainingMiscActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingMiscHours",
        "fieldName" : "remainingMiscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursWeld",
        "fieldName" : "hoursWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBoltUpHours",
        "fieldName" : "earnedBoltUpHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CountTrimActivities",
        "fieldName" : "countTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingSupports",
        "fieldName" : "remainingSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBoltUp",
        "fieldName" : "countBoltUp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedErectionHours",
        "fieldName" : "earnedErectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBasicTrimActivities",
        "fieldName" : "countBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedALLMech",
        "fieldName" : "earnedAllmech",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledWelds",
        "fieldName" : "installedWelds",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBasicTrimActivities",
        "fieldName" : "hoursBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingErectionHours",
        "fieldName" : "remainingErectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBoltUps",
        "fieldName" : "installedBoltUps",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicConnectionHours",
        "fieldName" : "remainingBasicConnectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBasicConnections",
        "fieldName" : "installedBasicConnections",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursSupports",
        "fieldName" : "hoursSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBasicConnection",
        "fieldName" : "hoursBasicConnection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountWeld",
        "fieldName" : "countWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "InstalledFootage",
        "fieldName" : "installedFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetALLTotalsByCostCode" : {
    "name" : "GetALLTotalsByCostCode",
    "description" : "Get all takeoffs quantities, Installed quantities,takoff Hours, Hours earned, Remaining Quantities, and remaining hours BY CU",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM CacheTable_StatsByCostCode",
    "countQueryString" : "select count(*) from (SELECT *\nFROM CacheTable_StatsByCostCode) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetAlltotalsByCostCodeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "PercentComplete",
        "fieldName" : "percentComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursALLMech",
        "fieldName" : "hoursAllmech",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBoltUps",
        "fieldName" : "remainingBoltUps",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursMisc",
        "fieldName" : "hoursMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicConnections",
        "fieldName" : "remainingBasicConnections",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedTestingHours",
        "fieldName" : "earnedTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBasicConnectHours",
        "fieldName" : "earnedBasicConnectHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedSupportHours",
        "fieldName" : "earnedSupportHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingWeldHours",
        "fieldName" : "remainingWeldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledMisc",
        "fieldName" : "installedMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursTrim",
        "fieldName" : "hoursTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedTrimHours",
        "fieldName" : "earnedTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledSupports",
        "fieldName" : "installedSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingFootage",
        "fieldName" : "remainingFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountSupports",
        "fieldName" : "countSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CountErectionFootage",
        "fieldName" : "countErectionFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingSupportHours",
        "fieldName" : "remainingSupportHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedMiscHours",
        "fieldName" : "earnedMiscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicTrimActivities",
        "fieldName" : "remainingBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicTrimHours",
        "fieldName" : "remainingBasicTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountMiscActivities",
        "fieldName" : "countMiscActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingBoltUpHours",
        "fieldName" : "remainingBoltUpHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTrimActivities",
        "fieldName" : "remainingTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursTesting",
        "fieldName" : "hoursTesting",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBasicTrim",
        "fieldName" : "installedBasicTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EarnedBasicTrimHours",
        "fieldName" : "earnedBasicTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledTrim",
        "fieldName" : "installedTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursErection",
        "fieldName" : "hoursErection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBasicConnection",
        "fieldName" : "countBasicConnection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedWeldHours",
        "fieldName" : "earnedWeldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingWelds",
        "fieldName" : "remainingWelds",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBoltUp",
        "fieldName" : "hoursBoltUp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTrimHours",
        "fieldName" : "remainingTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingMiscActivities",
        "fieldName" : "remainingMiscActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingMiscHours",
        "fieldName" : "remainingMiscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursWeld",
        "fieldName" : "hoursWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBoltUpHours",
        "fieldName" : "earnedBoltUpHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CountTrimActivities",
        "fieldName" : "countTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingSupports",
        "fieldName" : "remainingSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBoltUp",
        "fieldName" : "countBoltUp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedErectionHours",
        "fieldName" : "earnedErectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBasicTrimActivities",
        "fieldName" : "countBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedALLMech",
        "fieldName" : "earnedAllmech",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledWelds",
        "fieldName" : "installedWelds",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBasicTrimActivities",
        "fieldName" : "hoursBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBoltUps",
        "fieldName" : "installedBoltUps",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingErectionHours",
        "fieldName" : "remainingErectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicConnectionHours",
        "fieldName" : "remainingBasicConnectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBasicConnections",
        "fieldName" : "installedBasicConnections",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursSupports",
        "fieldName" : "hoursSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBasicConnection",
        "fieldName" : "hoursBasicConnection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountWeld",
        "fieldName" : "countWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "InstalledFootage",
        "fieldName" : "installedFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetALLTotalsByP6ID" : {
    "name" : "GetALLTotalsByP6ID",
    "description" : "Get all takeoffs quantities, Installed quantities,takeoff Hours, Hours earned, Remaining Quantities, and remaining hours BY P6ID",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM CacheTable_StatsByP6ID",
    "countQueryString" : "select count(*) from (SELECT *\nFROM CacheTable_StatsByP6ID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetAlltotalsByP6idResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "PercentComplete",
        "fieldName" : "percentComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursALLMech",
        "fieldName" : "hoursAllmech",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBoltUps",
        "fieldName" : "remainingBoltUps",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursMisc",
        "fieldName" : "hoursMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicConnections",
        "fieldName" : "remainingBasicConnections",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EarnedTestingHours",
        "fieldName" : "earnedTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBasicConnectHours",
        "fieldName" : "earnedBasicConnectHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedSupportHours",
        "fieldName" : "earnedSupportHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingWeldHours",
        "fieldName" : "remainingWeldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledMisc",
        "fieldName" : "installedMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursTrim",
        "fieldName" : "hoursTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedTrimHours",
        "fieldName" : "earnedTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledSupports",
        "fieldName" : "installedSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingFootage",
        "fieldName" : "remainingFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountSupports",
        "fieldName" : "countSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CountErectionFootage",
        "fieldName" : "countErectionFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingSupportHours",
        "fieldName" : "remainingSupportHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedMiscHours",
        "fieldName" : "earnedMiscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicTrimActivities",
        "fieldName" : "remainingBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicTrimHours",
        "fieldName" : "remainingBasicTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountMiscActivities",
        "fieldName" : "countMiscActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingBoltUpHours",
        "fieldName" : "remainingBoltUpHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTrimActivities",
        "fieldName" : "remainingTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursTesting",
        "fieldName" : "hoursTesting",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBasicTrim",
        "fieldName" : "installedBasicTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EarnedBasicTrimHours",
        "fieldName" : "earnedBasicTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledTrim",
        "fieldName" : "installedTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursErection",
        "fieldName" : "hoursErection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBasicConnection",
        "fieldName" : "countBasicConnection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedWeldHours",
        "fieldName" : "earnedWeldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingWelds",
        "fieldName" : "remainingWelds",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBoltUp",
        "fieldName" : "hoursBoltUp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTrimHours",
        "fieldName" : "remainingTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingMiscActivities",
        "fieldName" : "remainingMiscActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingMiscHours",
        "fieldName" : "remainingMiscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursWeld",
        "fieldName" : "hoursWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBoltUpHours",
        "fieldName" : "earnedBoltUpHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CountTrimActivities",
        "fieldName" : "countTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingSupports",
        "fieldName" : "remainingSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBoltUp",
        "fieldName" : "countBoltUp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedErectionHours",
        "fieldName" : "earnedErectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBasicTrimActivities",
        "fieldName" : "countBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedALLMech",
        "fieldName" : "earnedAllmech",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledWelds",
        "fieldName" : "installedWelds",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBasicTrimActivities",
        "fieldName" : "hoursBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBoltUps",
        "fieldName" : "installedBoltUps",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingErectionHours",
        "fieldName" : "remainingErectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicConnectionHours",
        "fieldName" : "remainingBasicConnectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBasicConnections",
        "fieldName" : "installedBasicConnections",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursSupports",
        "fieldName" : "hoursSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBasicConnection",
        "fieldName" : "hoursBasicConnection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountWeld",
        "fieldName" : "countWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "InstalledFootage",
        "fieldName" : "installedFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetALLTotalsByTestPackage" : {
    "name" : "GetALLTotalsByTestPackage",
    "description" : "Get all takeoffs quantities, Installed quantities,takeoff Hours, Hours earned, Remaining Quantities, and remaining hours BY Test Package",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM CacheTable_StatsByTestPackage",
    "countQueryString" : "select count(*) from (SELECT *\nFROM CacheTable_StatsByTestPackage) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetAlltotalsByTestPackageResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "PercentComplete",
        "fieldName" : "percentComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursALLMech",
        "fieldName" : "hoursAllmech",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBoltUps",
        "fieldName" : "remainingBoltUps",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursMisc",
        "fieldName" : "hoursMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicConnections",
        "fieldName" : "remainingBasicConnections",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedTestingHours",
        "fieldName" : "earnedTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBasicConnectHours",
        "fieldName" : "earnedBasicConnectHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedSupportHours",
        "fieldName" : "earnedSupportHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingWeldHours",
        "fieldName" : "remainingWeldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledMisc",
        "fieldName" : "installedMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursTrim",
        "fieldName" : "hoursTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedTrimHours",
        "fieldName" : "earnedTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledSupports",
        "fieldName" : "installedSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingFootage",
        "fieldName" : "remainingFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountSupports",
        "fieldName" : "countSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CountErectionFootage",
        "fieldName" : "countErectionFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingSupportHours",
        "fieldName" : "remainingSupportHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedMiscHours",
        "fieldName" : "earnedMiscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicTrimActivities",
        "fieldName" : "remainingBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicTrimHours",
        "fieldName" : "remainingBasicTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountMiscActivities",
        "fieldName" : "countMiscActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingBoltUpHours",
        "fieldName" : "remainingBoltUpHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTrimActivities",
        "fieldName" : "remainingTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursTesting",
        "fieldName" : "hoursTesting",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBasicTrim",
        "fieldName" : "installedBasicTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EarnedBasicTrimHours",
        "fieldName" : "earnedBasicTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledTrim",
        "fieldName" : "installedTrim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HoursErection",
        "fieldName" : "hoursErection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBasicConnection",
        "fieldName" : "countBasicConnection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedWeldHours",
        "fieldName" : "earnedWeldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "RemainingWelds",
        "fieldName" : "remainingWelds",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBoltUp",
        "fieldName" : "hoursBoltUp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingTrimHours",
        "fieldName" : "remainingTrimHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingMiscActivities",
        "fieldName" : "remainingMiscActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingMiscHours",
        "fieldName" : "remainingMiscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursWeld",
        "fieldName" : "hoursWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedBoltUpHours",
        "fieldName" : "earnedBoltUpHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CountTrimActivities",
        "fieldName" : "countTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingSupports",
        "fieldName" : "remainingSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBoltUp",
        "fieldName" : "countBoltUp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedErectionHours",
        "fieldName" : "earnedErectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountBasicTrimActivities",
        "fieldName" : "countBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedALLMech",
        "fieldName" : "earnedAllmech",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledWelds",
        "fieldName" : "installedWelds",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBasicTrimActivities",
        "fieldName" : "hoursBasicTrimActivities",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBoltUps",
        "fieldName" : "installedBoltUps",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RemainingErectionHours",
        "fieldName" : "remainingErectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RemainingBasicConnectionHours",
        "fieldName" : "remainingBasicConnectionHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBasicConnections",
        "fieldName" : "installedBasicConnections",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursSupports",
        "fieldName" : "hoursSupports",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HoursBasicConnection",
        "fieldName" : "hoursBasicConnection",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CountWeld",
        "fieldName" : "countWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "InstalledFootage",
        "fieldName" : "installedFootage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetActivitiesPendingApproval" : {
    "name" : "GetActivitiesPendingApproval",
    "description" : "Get all activities pending PS Approval",
    "version" : "V1",
    "queryString" : "SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, se.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT se.ID, se.ErectionSpool1 AS Spool1, COALESCE(se.ErectionSpool2, 'N/A') AS Spool2, \n\t\tse.ErectionLineNumber AS Line1, se.ErectionDrawingNumber AS Drawing1, se.ErectionSheetNumber AS Sheet1, \n\t\tse.ErectionLineNumber AS Line2, se.ErectionDrawingNumber AS Drawing2, se.ErectionSheetNumber AS Sheet2, \n        se.ErectionPipeSize AS Size, se.ErectionNotes AS Notes,\n\t\t\t(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0)) AS Quantity\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, se.ErectionRework AS Rework\n\t\t\tFROM SubsErection se) se\n\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n \n \nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sb.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT sb.ID, sb.BoltUpSpool1, sb.BoltUpSpool2, \n\t\t\tsb.BoltUpLineNumber AS Line1, sb.BoltUpDrawingNumber AS DWG1, sb.BoltUpSheetNumber AS Sheet1,\n            COALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,\n            sb.BoltUpSize , sb.BoltUpNotes, 1 AS BoltUpInstalled\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sb.BoltUpRework AS Rework\n            FROM SubsBoltUp sb\n            LEFT JOIN REF_SpoolList sl\n\t\t\t\tON sl.SpoolNumber = sb.BoltUpSpool2) sb\n\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\t\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sw.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus    \n    \nRIGHT JOIN (SELECT sw.ID, sw.WeldSpool1, sw.WeldSpool2, \n\t\t\tsw.WeldLineNumber, sw.WeldDrawingNumber, sw.WeldSheetNumber, \n            COALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,\n            sw.WeldSize , sw.WeldNotes, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sw.WeldRework AS Rework\n\t\t\tFROM SubsWeld sw\n            LEFT JOIN REF_SpoolList sl\n\t\t\t\tON sl.SpoolNumber = sw.WeldSpool2) sw\n\tON sw.ID = ss.ActivityRowId AND ss.ActivityType IN (22,23)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, st.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus      \n\nRIGHT JOIN (SELECT st.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tst.TrimLineNumber, st.TrimDrawingNumber, st.TrimSheetNumber, \n            st.TrimLineNumber AS Line2, st.TrimDrawingNumber AS DWG2, st.TrimSheetNumber AS Sheet2,\n            st.TrimSize , st.TrimNotes, st.TrimQuantity\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, st.TrimRework AS Rework\n\t\t\tFROM SubsTrim st) st\n\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (31,33,34,35,39) \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, ssu.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n    \nRIGHT JOIN (SELECT ssu.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tssu.SupportLineNumber, ssu.SupportDrawingNumber, ssu.SupportSheetNumber, \n            ssu.SupportLineNumber AS Line2, ssu.SupportDrawingNumber AS DWG2, ssu.SupportSheetNumber AS Sheet2,\n            'N/A' AS SupportSize , ssu.SupportNotes, COALESCE((ssu.SupportPercentCompleted * .01),0) AS SupportInstalled\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, ssu.SupportRework AS Rework\n\t\t\tFROM SubsSupports ssu) ssu\n\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32    \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, ste.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ste.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tste.TestingTestPackageNumber, 'N/A' AS DrawingNumber, ste.TestingRework AS SheetNumber, \n            ste.TestingTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2,\n            'N/A' AS Size , ste.TestingNotes, 1 AS TestingQuantity\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, ste.TestingRework AS Rework\n\t\t\tFROM SubsTesting ste) ste\n\tON ste.ID = ss.ActivityRowId AND ss.ActivityType IN (40,41,42,43)    \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sd.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT sd.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tsd.DemoLineNumber, sd.DemoDrawingNumber, sd.DemoSheetNumber, \n            sd.DemoLineNumber AS Line2, sd.DemoDrawingNumber AS DWG2, sd.DemoSheetNumber AS Sheet2,\n            'N/A' AS DemoSize , sd.DemoNotes, COALESCE(sd.DemoQuantity,0) AS DemoQuantity\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, 0 AS Rework\n\t\t\tFROM SubsDemo sd) sd\n\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (50,51,52,53,59)    \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n \nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sm.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\t\n    \nRIGHT JOIN (SELECT sm.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tsm.MiscLineNumber, sm.MiscDrawingNumber, sm.MiscSheetNumber, \n            sm.MiscLineNumber AS Line2, sm.MiscDrawingNumber AS DWG2, sm.MiscSheetNumber AS Sheet2,\n            'N/A' AS MiscSize , sm.MiscNotes, sm.MiscQuantity AS MiscInstalled\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sm.MiscRework AS Rework\n\t\t\tFROM SubsMisc sm) sm\n\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91    \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sEWO.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n    \nRIGHT JOIN (SELECT sEWO.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tsEWO.EWOLineNumber, sEWO.EWODrawingNumber, sEWO.EWOSheetNumber, \n            sEWO.EWOLineNumber AS Line2, sEWO.EWODrawingNumber AS DWG2, sEWO.EWOSheetNumber AS Sheet2,\n            'N/A' AS EWOSize , sEWO.EWONotes, 'N/A' AS TestingEarned\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sEWO.EWORework AS Rework\n\t\t\tFROM SubsEWO sEWO) sEWO\n\tON sEWO.ID = ss.ActivityRowId AND ss.ActivityType = 93   \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n \nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stls.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, FAShakeQuantity, FAArea, 1.00 AS SteelPercentClaim, FARework AS Rework\n\t\t\tFROM SteelShake) stls\n\tON stls.ID = ss.ActivityRowId AND ss.ActivityType IN (61)    \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stle.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, FAErectQuantity, FAArea, FAErectPercent, FARework AS Rework\n\t\t\tFROM SteelErect) stle\n\tON stle.ID = ss.ActivityRowId AND ss.ActivityType IN (62)    \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlb.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, FABoltOutQuantity, FAArea, FABoltOutPercent , FARework AS Rework\n\t\t\tFROM SteelBoltOut) stlb\n\tON stlb.ID = ss.ActivityRowId AND ss.ActivityType IN (63)    \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stli.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, FAImpQuantity, FAArea, FAImpPercent , FARework AS Rework\n\t\t\tFROM SteelImp) stli\n\tON stli.ID = ss.ActivityRowId AND ss.ActivityType IN (64)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlw.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, FAWeldQuantity, FAArea, FAWeldPercent , FARework AS Rework\n\t\t\tFROM SteelWeld) stlw\n\tON stlw.ID = ss.ActivityRowId AND ss.ActivityType IN (68)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlsell.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, FASellQuantity, FAArea, 1.00 AS SteelPercentClaim , FARework AS Rework\n\t\t\tFROM SteelSell) stlsell\n\tON stlsell.ID = ss.ActivityRowId AND ss.ActivityType IN (65)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stld.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT stld.ID, rst.SteelName AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, DemoSize AS Size , \n            stld.DemoNotes, stld.DemoQuantity, stld.DemoArea, 1.00 AS SteelPercentClaim, 0 AS Rework\n\t\t\tFROM SteelDemo stld\n            LEFT JOIN PSA.REF_SteelTypes rst\n\t\t\t\tON stld.DemoSteelType = rst.ID) stld\n\tON stld.ID = ss.ActivityRowId AND ss.ActivityType IN (67)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlsp.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tSellTestPackageNumber AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            SellTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            SellNotes, 1, 'N/A', 1.00 AS SteelPercentClaim, 0 AS Rework\n\t\t\tFROM SteelSellPackage) stlsp\n\tON stlsp.ID = ss.ActivityRowId AND ss.ActivityType IN (66)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlm.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, MiscPieceNumber AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            MiscNotes, MiscQuantity, MiscArea, 1.00 AS SteelPercentClaim, MiscRework AS Rework\n\t\t\tFROM SteelMisc) stlm\n\tON stlm.ID = ss.ActivityRowId AND ss.ActivityType IN (96)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, cfa.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, FAFoundation AS Spool1, FABidID AS Spool2, \n\t\t\tFADrawingNumber AS LineNumber, FADetailDrawingNumber AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, IF(cfa.ActivityType = 70, (cfa.FAPercentComplete * ctd.TakeOffQuantity), FAQuantity) AS Quantity, 'N/A' AS MiscArea, FAPercentComplete AS SteelPercentClaim, FARework AS Rework\n\t\t\tFROM CivilFA cfa\n\t\t\tLEFT JOIN CivilTrackerDetails ctd\n\t\t\t    ON ctd.BidID =  cfa.FABidID) cfa\n\tON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\n\nUNION\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, csp.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tSellTestPackageNumber AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            SellTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            SellNotes, 'N/A' AS Quantity, 'N/A' AS MiscArea, 'N/A' SteelPercentClaim, 0 AS Rework\n\t\t\tFROM CivilSellPackage csp) csp\n\tON csp.ID = ss.ActivityRowId AND ss.ActivityType = 72\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, cm.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, MiscFoundation AS Spool1, 'N/A' AS Spool2, \n\t\t\tMiscDrawingNumber AS LineNumber, MiscDetailDrawingNumber AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            MiscNotes, 0 AS Quantity, 'N/A' AS MiscArea, MiscPercentComplete AS SteelPercentClaim, MiscRework AS Rework\n\t\t\tFROM CivilMisc) cm\n\tON cm.ID = ss.ActivityRowId AND ss.ActivityType IN (97)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'EQUIP' AS Craft, efa.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\n\nRIGHT JOIN (SELECT ID, FATagNumber AS Spool1, FABidID AS Spool2, \n\t\t\tFAActivitySelect AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, FAQuantity AS Quantity, 'N/A' AS MiscArea, FAPercentComplete AS SteelPercentClaim, FARework AS Rework\n\t\t\tFROM EquipFA efa\n\t\t\tLEFT JOIN EquipTrackerDetails etd\n\t\t\t    ON etd.BidID =  efa.FABidID) efa\n\tON efa.ID = ss.ActivityRowId AND ss.ActivityType IN (80)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)",
    "countQueryString" : "select count(*) from (SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, se.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT se.ID, se.ErectionSpool1 AS Spool1, COALESCE(se.ErectionSpool2, 'N/A') AS Spool2, \n\t\tse.ErectionLineNumber AS Line1, se.ErectionDrawingNumber AS Drawing1, se.ErectionSheetNumber AS Sheet1, \n\t\tse.ErectionLineNumber AS Line2, se.ErectionDrawingNumber AS Drawing2, se.ErectionSheetNumber AS Sheet2, \n        se.ErectionPipeSize AS Size, se.ErectionNotes AS Notes,\n\t\t\t(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0)) AS Quantity\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, se.ErectionRework AS Rework\n\t\t\tFROM SubsErection se) se\n\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n \n \nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sb.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT sb.ID, sb.BoltUpSpool1, sb.BoltUpSpool2, \n\t\t\tsb.BoltUpLineNumber AS Line1, sb.BoltUpDrawingNumber AS DWG1, sb.BoltUpSheetNumber AS Sheet1,\n            COALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,\n            sb.BoltUpSize , sb.BoltUpNotes, 1 AS BoltUpInstalled\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sb.BoltUpRework AS Rework\n            FROM SubsBoltUp sb\n            LEFT JOIN REF_SpoolList sl\n\t\t\t\tON sl.SpoolNumber = sb.BoltUpSpool2) sb\n\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\t\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sw.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus    \n    \nRIGHT JOIN (SELECT sw.ID, sw.WeldSpool1, sw.WeldSpool2, \n\t\t\tsw.WeldLineNumber, sw.WeldDrawingNumber, sw.WeldSheetNumber, \n            COALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,\n            sw.WeldSize , sw.WeldNotes, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sw.WeldRework AS Rework\n\t\t\tFROM SubsWeld sw\n            LEFT JOIN REF_SpoolList sl\n\t\t\t\tON sl.SpoolNumber = sw.WeldSpool2) sw\n\tON sw.ID = ss.ActivityRowId AND ss.ActivityType IN (22,23)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, st.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus      \n\nRIGHT JOIN (SELECT st.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tst.TrimLineNumber, st.TrimDrawingNumber, st.TrimSheetNumber, \n            st.TrimLineNumber AS Line2, st.TrimDrawingNumber AS DWG2, st.TrimSheetNumber AS Sheet2,\n            st.TrimSize , st.TrimNotes, st.TrimQuantity\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, st.TrimRework AS Rework\n\t\t\tFROM SubsTrim st) st\n\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (31,33,34,35,39) \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, ssu.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n    \nRIGHT JOIN (SELECT ssu.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tssu.SupportLineNumber, ssu.SupportDrawingNumber, ssu.SupportSheetNumber, \n            ssu.SupportLineNumber AS Line2, ssu.SupportDrawingNumber AS DWG2, ssu.SupportSheetNumber AS Sheet2,\n            'N/A' AS SupportSize , ssu.SupportNotes, COALESCE((ssu.SupportPercentCompleted * .01),0) AS SupportInstalled\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, ssu.SupportRework AS Rework\n\t\t\tFROM SubsSupports ssu) ssu\n\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32    \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, ste.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ste.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tste.TestingTestPackageNumber, 'N/A' AS DrawingNumber, ste.TestingRework AS SheetNumber, \n            ste.TestingTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2,\n            'N/A' AS Size , ste.TestingNotes, 1 AS TestingQuantity\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, ste.TestingRework AS Rework\n\t\t\tFROM SubsTesting ste) ste\n\tON ste.ID = ss.ActivityRowId AND ss.ActivityType IN (40,41,42,43)    \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sd.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT sd.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tsd.DemoLineNumber, sd.DemoDrawingNumber, sd.DemoSheetNumber, \n            sd.DemoLineNumber AS Line2, sd.DemoDrawingNumber AS DWG2, sd.DemoSheetNumber AS Sheet2,\n            'N/A' AS DemoSize , sd.DemoNotes, COALESCE(sd.DemoQuantity,0) AS DemoQuantity\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, 0 AS Rework\n\t\t\tFROM SubsDemo sd) sd\n\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (50,51,52,53,59)    \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n \nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sm.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\t\n    \nRIGHT JOIN (SELECT sm.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tsm.MiscLineNumber, sm.MiscDrawingNumber, sm.MiscSheetNumber, \n            sm.MiscLineNumber AS Line2, sm.MiscDrawingNumber AS DWG2, sm.MiscSheetNumber AS Sheet2,\n            'N/A' AS MiscSize , sm.MiscNotes, sm.MiscQuantity AS MiscInstalled\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sm.MiscRework AS Rework\n\t\t\tFROM SubsMisc sm) sm\n\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91    \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, sEWO.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n    \nRIGHT JOIN (SELECT sEWO.ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tsEWO.EWOLineNumber, sEWO.EWODrawingNumber, sEWO.EWOSheetNumber, \n            sEWO.EWOLineNumber AS Line2, sEWO.EWODrawingNumber AS DWG2, sEWO.EWOSheetNumber AS Sheet2,\n            'N/A' AS EWOSize , sEWO.EWONotes, 'N/A' AS TestingEarned\n            , 'N/A' AS SteelArea, 'N/A' AS SteelPercentClaim, sEWO.EWORework AS Rework\n\t\t\tFROM SubsEWO sEWO) sEWO\n\tON sEWO.ID = ss.ActivityRowId AND ss.ActivityType = 93   \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n \nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stls.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, FAShakeQuantity, FAArea, 1.00 AS SteelPercentClaim, FARework AS Rework\n\t\t\tFROM SteelShake) stls\n\tON stls.ID = ss.ActivityRowId AND ss.ActivityType IN (61)    \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stle.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, FAErectQuantity, FAArea, FAErectPercent, FARework AS Rework\n\t\t\tFROM SteelErect) stle\n\tON stle.ID = ss.ActivityRowId AND ss.ActivityType IN (62)    \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlb.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, FABoltOutQuantity, FAArea, FABoltOutPercent , FARework AS Rework\n\t\t\tFROM SteelBoltOut) stlb\n\tON stlb.ID = ss.ActivityRowId AND ss.ActivityType IN (63)    \nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stli.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, FAImpQuantity, FAArea, FAImpPercent , FARework AS Rework\n\t\t\tFROM SteelImp) stli\n\tON stli.ID = ss.ActivityRowId AND ss.ActivityType IN (64)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlw.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, FAWeldQuantity, FAArea, FAWeldPercent , FARework AS Rework\n\t\t\tFROM SteelWeld) stlw\n\tON stlw.ID = ss.ActivityRowId AND ss.ActivityType IN (68)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlsell.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, FASellQuantity, FAArea, 1.00 AS SteelPercentClaim , FARework AS Rework\n\t\t\tFROM SteelSell) stlsell\n\tON stlsell.ID = ss.ActivityRowId AND ss.ActivityType IN (65)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stld.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT stld.ID, rst.SteelName AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, DemoSize AS Size , \n            stld.DemoNotes, stld.DemoQuantity, stld.DemoArea, 1.00 AS SteelPercentClaim, 0 AS Rework\n\t\t\tFROM SteelDemo stld\n            LEFT JOIN PSA.REF_SteelTypes rst\n\t\t\t\tON stld.DemoSteelType = rst.ID) stld\n\tON stld.ID = ss.ActivityRowId AND ss.ActivityType IN (67)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlsp.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tSellTestPackageNumber AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            SellTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            SellNotes, 1, 'N/A', 1.00 AS SteelPercentClaim, 0 AS Rework\n\t\t\tFROM SteelSellPackage) stlsp\n\tON stlsp.ID = ss.ActivityRowId AND ss.ActivityType IN (66)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, stlm.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, MiscPieceNumber AS Spool1, 'N/A' AS Spool2, \n\t\t\t'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            MiscNotes, MiscQuantity, MiscArea, 1.00 AS SteelPercentClaim, MiscRework AS Rework\n\t\t\tFROM SteelMisc) stlm\n\tON stlm.ID = ss.ActivityRowId AND ss.ActivityType IN (96)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, cfa.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, FAFoundation AS Spool1, FABidID AS Spool2, \n\t\t\tFADrawingNumber AS LineNumber, FADetailDrawingNumber AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, IF(cfa.ActivityType = 70, (cfa.FAPercentComplete * ctd.TakeOffQuantity), FAQuantity) AS Quantity, 'N/A' AS MiscArea, FAPercentComplete AS SteelPercentClaim, FARework AS Rework\n\t\t\tFROM CivilFA cfa\n\t\t\tLEFT JOIN CivilTrackerDetails ctd\n\t\t\t    ON ctd.BidID =  cfa.FABidID) cfa\n\tON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\n\nUNION\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, csp.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n\t\t\tSellTestPackageNumber AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            SellTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            SellNotes, 'N/A' AS Quantity, 'N/A' AS MiscArea, 'N/A' SteelPercentClaim, 0 AS Rework\n\t\t\tFROM CivilSellPackage csp) csp\n\tON csp.ID = ss.ActivityRowId AND ss.ActivityType = 72\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, cm.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nRIGHT JOIN (SELECT ID, MiscFoundation AS Spool1, 'N/A' AS Spool2, \n\t\t\tMiscDrawingNumber AS LineNumber, MiscDetailDrawingNumber AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            MiscNotes, 0 AS Quantity, 'N/A' AS MiscArea, MiscPercentComplete AS SteelPercentClaim, MiscRework AS Rework\n\t\t\tFROM CivilMisc) cm\n\tON cm.ID = ss.ActivityRowId AND ss.ActivityType IN (97)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId, ss.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'EQUIP' AS Craft, efa.* \nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\n\nRIGHT JOIN (SELECT ID, FATagNumber AS Spool1, FABidID AS Spool2, \n\t\t\tFAActivitySelect AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n            'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \n            FANotes, FAQuantity AS Quantity, 'N/A' AS MiscArea, FAPercentComplete AS SteelPercentClaim, FARework AS Rework\n\t\t\tFROM EquipFA efa\n\t\t\tLEFT JOIN EquipTrackerDetails etd\n\t\t\t    ON etd.BidID =  efa.FABidID) efa\n\tON efa.ID = ss.ActivityRowId AND ss.ActivityType IN (80)\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "UserID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivitiesPendingApprovalResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "PSAActivityID",
        "fieldName" : "psaactivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityRowId",
        "fieldName" : "activityRowId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Craft",
        "fieldName" : "craft",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Spool1",
        "fieldName" : "spool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Spool2",
        "fieldName" : "spool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Line1",
        "fieldName" : "line1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Drawing1",
        "fieldName" : "drawing1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Sheet1",
        "fieldName" : "sheet1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Line2",
        "fieldName" : "line2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Drawing2",
        "fieldName" : "drawing2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Sheet2",
        "fieldName" : "sheet2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Size",
        "fieldName" : "size",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SteelArea",
        "fieldName" : "steelArea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SteelPercentClaim",
        "fieldName" : "steelPercentClaim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetActivitiesPendingApprovalCount" : {
    "name" : "GetActivitiesPendingApprovalCount",
    "description" : "Gets the count of activities pending approval, since the _.size method on a dataGrid maxes out at request size.",
    "version" : "V1",
    "queryString" : "SELECT count(*) AS Count \nFROM SubmissionStatus ss\n\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)",
    "countQueryString" : "select count(*) from (SELECT count(*) AS Count \nFROM SubmissionStatus ss\n\nWHERE ss.fk_ActivityStatus IN (2,7,9,11)\nAND (ss.LockField IS NULL OR ss.LockField = :UserID)) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "UserID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivitiesPendingApprovalCountResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Count",
        "fieldName" : "_count",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryBoltup" : {
    "name" : "GetActivityHistoryBoltup",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT sb.* \nFROM SubsBoltUp sb\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT sbr.fk_OrgActivityId, sbr.SubmissionID, sbr.BoltUpSpool1, sbr.BoltUpSpool2, sbr.BoltUpDrawingNumber, sbr.BoltUpLineNumber, sbr.BoltUpSheetNumber, sbr.BoltUpTimeInForm, \nsbr.BoltUpSize, sbr.BoltUpQuantity, sbr.BoltUpRework, sbr.BoltUpNotes, sbr.ActivityType, sbr.Rev, sbr.TimeStamp\nFROM SubsBoltUpREV sbr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT sb.* \nFROM SubsBoltUp sb\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT sbr.fk_OrgActivityId, sbr.SubmissionID, sbr.BoltUpSpool1, sbr.BoltUpSpool2, sbr.BoltUpDrawingNumber, sbr.BoltUpLineNumber, sbr.BoltUpSheetNumber, sbr.BoltUpTimeInForm, \nsbr.BoltUpSize, sbr.BoltUpQuantity, sbr.BoltUpRework, sbr.BoltUpNotes, sbr.ActivityType, sbr.Rev, sbr.TimeStamp\nFROM SubsBoltUpREV sbr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "34",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryBoltupResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BoltUpSpool1",
        "fieldName" : "boltUpSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BoltUpSpool2",
        "fieldName" : "boltUpSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BoltUpSize",
        "fieldName" : "boltUpSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BoltUpLineNumber",
        "fieldName" : "boltUpLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BoltUpQuantity",
        "fieldName" : "boltUpQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "BoltUpDrawingNumber",
        "fieldName" : "boltUpDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BoltUpNotes",
        "fieldName" : "boltUpNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BoltUpRework",
        "fieldName" : "boltUpRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "BoltUpTimeInForm",
        "fieldName" : "boltUpTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "BoltUpSheetNumber",
        "fieldName" : "boltUpSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryCivilFA" : {
    "name" : "GetActivityHistoryCivilFA",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT cfa.* \nFROM CivilFA cfa\nWHERE ID = :RowID\n\nUNION\n\nSELECT cfar.fk_OrgActivityId, cfar.SubmissionID, cfar.FABidID, cfar.FAFoundation, cfar.FADescription, cfar.FADrawingNumber, cfar.FADetailDrawingNumber, cfar.FAPercentComplete, cfar.FAQuantity, cfar.FARework, \ncfar.FANotes, cfar.ActivityType, cfar.FATimeInForm, cfar.Rev, cfar.TimeStamp\nFROM CivilFAREV cfar\nWHERE cfar.fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT cfa.* \nFROM CivilFA cfa\nWHERE ID = :RowID\n\nUNION\n\nSELECT cfar.fk_OrgActivityId, cfar.SubmissionID, cfar.FABidID, cfar.FAFoundation, cfar.FADescription, cfar.FADrawingNumber, cfar.FADetailDrawingNumber, cfar.FAPercentComplete, cfar.FAQuantity, cfar.FARework, \ncfar.FANotes, cfar.ActivityType, cfar.FATimeInForm, cfar.Rev, cfar.TimeStamp\nFROM CivilFAREV cfar\nWHERE cfar.fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "24",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryCivilFaResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FABidID",
        "fieldName" : "fabidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FADescription",
        "fieldName" : "fadescription",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FADetailDrawingNumber",
        "fieldName" : "fadetailDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FADrawingNumber",
        "fieldName" : "fadrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAFoundation",
        "fieldName" : "fafoundation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPercentComplete",
        "fieldName" : "fapercentComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "FAQuantity",
        "fieldName" : "faquantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionID",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryCivilMisc" : {
    "name" : "GetActivityHistoryCivilMisc",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "SELECT cm.* \nFROM CivilMisc cm\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT cmr.fk_OrgActivityId, cmr.SubmissionID, cmr.MiscFoundation, cmr.MiscDrawingNumber, cmr.MiscDetailDrawingNumber, cmr.MiscPercentComplete, cmr.MiscRework, cmr.MiscNotes, cmr.ActivityType, \ncmr.MiscTimeInForm, cmr.Rev, cmr.TimeStamp\nFROM CivilMiscREV cmr\nWHERE cmr.fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT cm.* \nFROM CivilMisc cm\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT cmr.fk_OrgActivityId, cmr.SubmissionID, cmr.MiscFoundation, cmr.MiscDrawingNumber, cmr.MiscDetailDrawingNumber, cmr.MiscPercentComplete, cmr.MiscRework, cmr.MiscNotes, cmr.ActivityType, \ncmr.MiscTimeInForm, cmr.Rev, cmr.TimeStamp\nFROM CivilMiscREV cmr\nWHERE cmr.fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "18",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryCivilMiscResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscDetailDrawingNumber",
        "fieldName" : "miscDetailDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscDrawingNumber",
        "fieldName" : "miscDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscFoundation",
        "fieldName" : "miscFoundation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscNotes",
        "fieldName" : "miscNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscPercentComplete",
        "fieldName" : "miscPercentComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "MiscRework",
        "fieldName" : "miscRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "MiscTimeInForm",
        "fieldName" : "miscTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionID",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryDemo" : {
    "name" : "GetActivityHistoryDemo",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT sd.* \nFROM SubsDemo sd\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT  sdr.fk_OrgActivityId, sdr.SubmissionID, \nsdr.DemoDrawingNumber, sdr.DemoLineNumber, sdr.DemoSheetNumber, sdr.DemoQuantity, sdr.DemoSize, sdr.DemoNotes,\nsdr.ActivityType, sdr.DemoTimeInForm, sdr.Rev, sdr.TimeStamp\nFROM SubsDemoREV sdr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT sd.* \nFROM SubsDemo sd\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT  sdr.fk_OrgActivityId, sdr.SubmissionID, \nsdr.DemoDrawingNumber, sdr.DemoLineNumber, sdr.DemoSheetNumber, sdr.DemoQuantity, sdr.DemoSize, sdr.DemoNotes,\nsdr.ActivityType, sdr.DemoTimeInForm, sdr.Rev, sdr.TimeStamp\nFROM SubsDemoREV sdr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "16",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryDemoResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "DemoLineNumber",
        "fieldName" : "demoLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DemoQuantity",
        "fieldName" : "demoQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "DemoNotes",
        "fieldName" : "demoNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DemoDrawingNumber",
        "fieldName" : "demoDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DemoSize",
        "fieldName" : "demoSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "DemoTimeInForm",
        "fieldName" : "demoTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DemoSheetNumber",
        "fieldName" : "demoSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryEquipFA" : {
    "name" : "GetActivityHistoryEquipFA",
    "description" : "name",
    "version" : "V2",
    "queryString" : "SELECT efa.* \nFROM EquipFA efa\nWHERE ID = :RowID\n\nUNION\n\nSELECT efar.fk_OrgID, efar.SubmissionID, efar.FABidID, efar.FATagNumber, efar.FAActivitySelect, efar.FAQuantity, efar.FAPercentComplete, efar.FARework, efar.FANotes, efar.ActivityType, efar.FATimeInForm, efar.Rev, efar.TimeStamp\nFROM EquipFAREV efar\nWHERE efar.fk_OrgID = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT efa.* \nFROM EquipFA efa\nWHERE ID = :RowID\n\nUNION\n\nSELECT efar.fk_OrgID, efar.SubmissionID, efar.FABidID, efar.FATagNumber, efar.FAActivitySelect, efar.FAQuantity, efar.FAPercentComplete, efar.FARework, efar.FANotes, efar.ActivityType, efar.FATimeInForm, efar.Rev, efar.TimeStamp\nFROM EquipFAREV efar\nWHERE efar.fk_OrgID = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "9",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryEquipFaResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionID",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FABidID",
        "fieldName" : "fabidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FATagNumber",
        "fieldName" : "fatagNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAActivitySelect",
        "fieldName" : "faactivitySelect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAQuantity",
        "fieldName" : "faquantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FAPercentComplete",
        "fieldName" : "fapercentComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryErection" : {
    "name" : "GetActivityHistoryErection",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT se.* \nFROM SubsErection se\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT ser.* \nFROM (SELECT  ser.fk_OrgActivityId, ser.SubmissionID, \nser.ErectionSpool1, ser.ErectionLengthSpool1, ser.ErectionSpool2, ser.ErectionLengthSpool2, ser.ErectionSpool3, ser.ErectionLengthSpool3, ser.ErectionSpool4, ser.ErectionLengthSpool4 , ser.ErectionSpool5, ser.ErectionLengthSpool5, ser.ErectionSpool6, ser.ErectionLengthSpool6,\nser.ErectionOnCords, ser.ErectionDrawingNumber, ser.ErectionLineNumber, ser.ErectionSheetNumber, ser.ErectionTimeInForm, ser.ErectionPipeSize, ser.ErectionRework, ser.ErectionNotes,\nser.ActivityType, ser.Rev, ser.TimeStamp\nFROM SubsErectionREV ser\nWHERE fk_OrgActivityId = :RowID\nORDER BY ser.TimeStamp DESC) ser",
    "countQueryString" : "select count(*) from (SELECT se.* \nFROM SubsErection se\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT ser.* \nFROM (SELECT  ser.fk_OrgActivityId, ser.SubmissionID, \nser.ErectionSpool1, ser.ErectionLengthSpool1, ser.ErectionSpool2, ser.ErectionLengthSpool2, ser.ErectionSpool3, ser.ErectionLengthSpool3, ser.ErectionSpool4, ser.ErectionLengthSpool4 , ser.ErectionSpool5, ser.ErectionLengthSpool5, ser.ErectionSpool6, ser.ErectionLengthSpool6,\nser.ErectionOnCords, ser.ErectionDrawingNumber, ser.ErectionLineNumber, ser.ErectionSheetNumber, ser.ErectionTimeInForm, ser.ErectionPipeSize, ser.ErectionRework, ser.ErectionNotes,\nser.ActivityType, ser.Rev, ser.TimeStamp\nFROM SubsErectionREV ser\nWHERE fk_OrgActivityId = :RowID\nORDER BY ser.TimeStamp DESC) ser) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "28",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryErectionResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ErectionOnCords",
        "fieldName" : "erectionOnCords",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLineNumber",
        "fieldName" : "erectionLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ErectionRework",
        "fieldName" : "erectionRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ErectionTimeInForm",
        "fieldName" : "erectionTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionNotes",
        "fieldName" : "erectionNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ErectionDrawingNumber",
        "fieldName" : "erectionDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionPipeSize",
        "fieldName" : "erectionPipeSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool3",
        "fieldName" : "erectionLengthSpool3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ErectionSheetNumber",
        "fieldName" : "erectionSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool2",
        "fieldName" : "erectionLengthSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool5",
        "fieldName" : "erectionLengthSpool5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool4",
        "fieldName" : "erectionLengthSpool4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool6",
        "fieldName" : "erectionLengthSpool6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool6",
        "fieldName" : "erectionSpool6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool5",
        "fieldName" : "erectionSpool5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool4",
        "fieldName" : "erectionSpool4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool3",
        "fieldName" : "erectionSpool3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool2",
        "fieldName" : "erectionSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool1",
        "fieldName" : "erectionLengthSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool1",
        "fieldName" : "erectionSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryMisc" : {
    "name" : "GetActivityHistoryMisc",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT sm.* \nFROM SubsMisc sm\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT  smr.fk_OrgActivityId, smr.SubmissionID, \nsmr.MiscDrawingNumber, smr.MiscLineNumber, smr.MiscSheetNumber, smr.MiscTimeInForm, smr.MiscQuantity, smr.MiscRework, smr.MiscNotes,\nsmr.ActivityType, smr.Rev, smr.TimeStamp\nFROM SubsMiscREV smr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT sm.* \nFROM SubsMisc sm\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT  smr.fk_OrgActivityId, smr.SubmissionID, \nsmr.MiscDrawingNumber, smr.MiscLineNumber, smr.MiscSheetNumber, smr.MiscTimeInForm, smr.MiscQuantity, smr.MiscRework, smr.MiscNotes,\nsmr.ActivityType, smr.Rev, smr.TimeStamp\nFROM SubsMiscREV smr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "6",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryMiscResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "MiscDrawingNumber",
        "fieldName" : "miscDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "MiscLineNumber",
        "fieldName" : "miscLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscQuantity",
        "fieldName" : "miscQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscRework",
        "fieldName" : "miscRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscTimeInForm",
        "fieldName" : "miscTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "MiscSheetNumber",
        "fieldName" : "miscSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscNotes",
        "fieldName" : "miscNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryOverride" : {
    "name" : "GetActivityHistoryOverride",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT so.* \nFROM SubsOverride so\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT  sor.fk_OrgActivityId,  \nsor.ORQuantity, sor.ORNotes,\nsor.CreatedBy, sor.ActivityType, sor.Rev, sor.TimeStamp\nFROM SubsOverrideREV sor\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT so.* \nFROM SubsOverride so\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT  sor.fk_OrgActivityId,  \nsor.ORQuantity, sor.ORNotes,\nsor.CreatedBy, sor.ActivityType, sor.Rev, sor.TimeStamp\nFROM SubsOverrideREV sor\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "10",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryOverrideResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ORQuantity",
        "fieldName" : "orquantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CreatedBy",
        "fieldName" : "createdBy",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ORNotes",
        "fieldName" : "ornotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryStatus" : {
    "name" : "GetActivityHistoryStatus",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT ss.PSAActivityID, CONCAT(ats.Status, ' - ', IF(ss.LockField = 1, 'Locked', COALESCE(ss.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, ss.TimeStamp\nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\nLEFT JOIN PSA.tblUserPSA u\n\tON u.ID = fk_LastModifiedBy\n    \nWHERE PSAActivityID = :PSAActivityID\n\nUNION ALL\n\nSELECT ssr.*\nFROM (SELECT ssr.fk_PSAActivityID, CONCAT(ats.Status, ' - ', IF(ssr.LockField = 1, 'Locked', COALESCE(ssr.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, ssr.TimeStamp\nFROM SubmissionStatusREV ssr\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ssr.fk_ActivityStatus\nLEFT JOIN PSA.tblUserPSA u\n\tON u.ID = fk_LastModifiedBy\nWHERE fk_PSAActivityID = :PSAActivityID\nORDER BY ssr.TimeStamp DESC) ssr",
    "countQueryString" : "select count(*) from (SELECT ss.PSAActivityID, CONCAT(ats.Status, ' - ', IF(ss.LockField = 1, 'Locked', COALESCE(ss.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, ss.TimeStamp\nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\nLEFT JOIN PSA.tblUserPSA u\n\tON u.ID = fk_LastModifiedBy\n    \nWHERE PSAActivityID = :PSAActivityID\n\nUNION ALL\n\nSELECT ssr.*\nFROM (SELECT ssr.fk_PSAActivityID, CONCAT(ats.Status, ' - ', IF(ssr.LockField = 1, 'Locked', COALESCE(ssr.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, ssr.TimeStamp\nFROM SubmissionStatusREV ssr\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ssr.fk_ActivityStatus\nLEFT JOIN PSA.tblUserPSA u\n\tON u.ID = fk_LastModifiedBy\nWHERE fk_PSAActivityID = :PSAActivityID\nORDER BY ssr.TimeStamp DESC) ssr) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "PSAActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1725",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryStatusResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "LastModifiedBy",
        "fieldName" : "lastModifiedBy",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PSAActivityID",
        "fieldName" : "psaactivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelBoltout" : {
    "name" : "GetActivityHistorySteelBoltout",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stlb.* \nFROM SteelBoltOut stlb\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stlbr.fk_OrgActivityId, stlbr.SubmissionID, stlbr.FAArea, stlbr.FAPieceNumber, stlbr.FABoltoutQuantity, stlbr.FABoltoutPercent, stlbr.FARework, stlbr.FANotes, stlbr.ActivityType, stlbr.FATimeInForm, stlbr.Rev, stlbr.TimeStamp\nFROM SteelBoltOutREV stlbr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stlb.* \nFROM SteelBoltOut stlb\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stlbr.fk_OrgActivityId, stlbr.SubmissionID, stlbr.FAArea, stlbr.FAPieceNumber, stlbr.FABoltoutQuantity, stlbr.FABoltoutPercent, stlbr.FARework, stlbr.FANotes, stlbr.ActivityType, stlbr.FATimeInForm, stlbr.Rev, stlbr.TimeStamp\nFROM SteelBoltOutREV stlbr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "27",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelBoltoutResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FAArea",
        "fieldName" : "faarea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FABoltOutPercent",
        "fieldName" : "faboltOutPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "FABoltOutQuantity",
        "fieldName" : "faboltOutQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPieceNumber",
        "fieldName" : "fapieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionID",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelDemo" : {
    "name" : "GetActivityHistorySteelDemo",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stld.* \nFROM SteelDemo stld\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stldr.fk_OrgActivityId, stldr.SubmissionID, stldr.DemoArea, stldr.DemoSteelType, stldr.DemoSize, stldr.DemoQuantity, stldr.DemoNotes, stldr.ActivityType, stldr.DemoTimeInForm, stldr.Rev, stldr.TimeStamp\nFROM SteelDemoREV stldr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stld.* \nFROM SteelDemo stld\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stldr.fk_OrgActivityId, stldr.SubmissionID, stldr.DemoArea, stldr.DemoSteelType, stldr.DemoSize, stldr.DemoQuantity, stldr.DemoNotes, stldr.ActivityType, stldr.DemoTimeInForm, stldr.Rev, stldr.TimeStamp\nFROM SteelDemoREV stldr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "22",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelDemoResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "DemoArea",
        "fieldName" : "demoArea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DemoNotes",
        "fieldName" : "demoNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DemoQuantity",
        "fieldName" : "demoQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "DemoSize",
        "fieldName" : "demoSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DemoSteelType",
        "fieldName" : "demoSteelType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "DemoTimeInForm",
        "fieldName" : "demoTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelErect" : {
    "name" : "GetActivityHistorySteelErect",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stle.* \nFROM SteelErect stle\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stler.fk_OrgActivityId, stler.SubmissionID, stler.FAArea, stler.FAPieceNumber, stler.FAErectQuantity, stler.FAErectPercent, stler.FARework, stler.FANotes, stler.ActivityType, stler.FATimeInForm, stler.Rev, stler.TimeStamp\nFROM SteelErectREV stler\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stle.* \nFROM SteelErect stle\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stler.fk_OrgActivityId, stler.SubmissionID, stler.FAArea, stler.FAPieceNumber, stler.FAErectQuantity, stler.FAErectPercent, stler.FARework, stler.FANotes, stler.ActivityType, stler.FATimeInForm, stler.Rev, stler.TimeStamp\nFROM SteelErectREV stler\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "27",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelErectResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FAArea",
        "fieldName" : "faarea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAErectPercent",
        "fieldName" : "faerectPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "FAErectQuantity",
        "fieldName" : "faerectQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPieceNumber",
        "fieldName" : "fapieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionID",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelImp" : {
    "name" : "GetActivityHistorySteelImp",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stli.* \nFROM SteelImp stli\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stlir.fk_OrgActivityId, stlir.SubmissionID, stlir.FAArea, stlir.FAPieceNumber, stlir.FAImpQuantity, stlir.FAImpPercent, stlir.FARework, stlir.FANotes, stlir.ActivityType, stlir.FATimeInForm, stlir.Rev, stlir.TimeStamp\nFROM SteelImpREV stlir\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stli.* \nFROM SteelImp stli\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stlir.fk_OrgActivityId, stlir.SubmissionID, stlir.FAArea, stlir.FAPieceNumber, stlir.FAImpQuantity, stlir.FAImpPercent, stlir.FARework, stlir.FANotes, stlir.ActivityType, stlir.FATimeInForm, stlir.Rev, stlir.TimeStamp\nFROM SteelImpREV stlir\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "12",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelImpResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FAArea",
        "fieldName" : "faarea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAImpPercent",
        "fieldName" : "faimpPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "FAImpQuantity",
        "fieldName" : "faimpQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPieceNumber",
        "fieldName" : "fapieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionID",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelMisc" : {
    "name" : "GetActivityHistorySteelMisc",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stlm.* \nFROM SteelMisc stlm\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stlmr.fk_OrgActivityId, stlmr.SubmissionID, stlmr.MiscArea, stlmr.MiscPieceNumber, stlmr.MiscQuantity, stlmr.MiscRework, stlmr.MiscNotes, stlmr.ActivityType, stlmr.MiscTimeInForm, stlmr.Rev, stlmr.TimeStamp\nFROM SteelMiscREV stlmr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stlm.* \nFROM SteelMisc stlm\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stlmr.fk_OrgActivityId, stlmr.SubmissionID, stlmr.MiscArea, stlmr.MiscPieceNumber, stlmr.MiscQuantity, stlmr.MiscRework, stlmr.MiscNotes, stlmr.ActivityType, stlmr.MiscTimeInForm, stlmr.Rev, stlmr.TimeStamp\nFROM SteelMiscREV stlmr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "36",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelMiscResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscArea",
        "fieldName" : "miscArea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscNotes",
        "fieldName" : "miscNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscPieceNumber",
        "fieldName" : "miscPieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscQuantity",
        "fieldName" : "miscQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "MiscRework",
        "fieldName" : "miscRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "MiscTimeInForm",
        "fieldName" : "miscTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionID",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelSell" : {
    "name" : "GetActivityHistorySteelSell",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stlsell.* \nFROM SteelSell stlsell\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stlsellr.fk_OrgActivityId, stlsellr.SubmissionID, stlsellr.FAArea, stlsellr.FAPieceNumber, stlsellr.FASellQuantity, stlsellr.FARework, stlsellr.FANotes, stlsellr.ActivityType, stlsellr.FATimeInForm, stlsellr.Rev, stlsellr.TimeStamp\nFROM SteelSellREV stlsellr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stlsell.* \nFROM SteelSell stlsell\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stlsellr.fk_OrgActivityId, stlsellr.SubmissionID, stlsellr.FAArea, stlsellr.FAPieceNumber, stlsellr.FASellQuantity, stlsellr.FARework, stlsellr.FANotes, stlsellr.ActivityType, stlsellr.FATimeInForm, stlsellr.Rev, stlsellr.TimeStamp\nFROM SteelSellREV stlsellr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "25",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelSellResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FAArea",
        "fieldName" : "faarea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPieceNumber",
        "fieldName" : "fapieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FASellQuantity",
        "fieldName" : "fasellQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionID",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelShake" : {
    "name" : "GetActivityHistorySteelShake",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stls.* \nFROM SteelShake stls\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stlsr.fk_OrgActivityId, stlsr.SubmissionID, stlsr.FAArea, stlsr.FAPieceNumber, stlsr.FAShakeQuantity, stlsr.FARework, stlsr.FANotes, stlsr.ActivityType, stlsr.FATimeInForm, stlsr.Rev, stlsr.TimeStamp\nFROM SteelShakeREV stlsr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stls.* \nFROM SteelShake stls\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stlsr.fk_OrgActivityId, stlsr.SubmissionID, stlsr.FAArea, stlsr.FAPieceNumber, stlsr.FAShakeQuantity, stlsr.FARework, stlsr.FANotes, stlsr.ActivityType, stlsr.FATimeInForm, stlsr.Rev, stlsr.TimeStamp\nFROM SteelShakeREV stlsr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "28",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelShakeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FAArea",
        "fieldName" : "faarea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPieceNumber",
        "fieldName" : "fapieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FAShakeQuantity",
        "fieldName" : "fashakeQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionID",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelWeld" : {
    "name" : "GetActivityHistorySteelWeld",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stlw.* \nFROM SteelWeld stlw\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stlwr.fk_OrgActivityId, stlwr.SubmissionID, stlwr.FAArea, stlwr.FAPieceNumber, stlwr.FAWeldQuantity, stlwr.FAWeldPercent, stlwr.FARework, stlwr.FANotes, stlwr.ActivityType, stlwr.FATimeInForm, stlwr.Rev, stlwr.TimeStamp\nFROM SteelWeldREV stlwr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stlw.* \nFROM SteelWeld stlw\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT stlwr.fk_OrgActivityId, stlwr.SubmissionID, stlwr.FAArea, stlwr.FAPieceNumber, stlwr.FAWeldQuantity, stlwr.FAWeldPercent, stlwr.FARework, stlwr.FANotes, stlwr.ActivityType, stlwr.FATimeInForm, stlwr.Rev, stlwr.TimeStamp\nFROM SteelWeldREV stlwr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "10",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelWeldResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FAArea",
        "fieldName" : "faarea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPieceNumber",
        "fieldName" : "fapieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "FAWeldPercent",
        "fieldName" : "faweldPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "FAWeldQuantity",
        "fieldName" : "faweldQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionID",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySupport" : {
    "name" : "GetActivityHistorySupport",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT ssu.* \nFROM SubsSupports ssu\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT  ssur.fk_OrgActivityId, ssur.SubmissionID, \nssur.SupportType, ssur.SupportPartNumber, ssur.SupportQuantity, ssur.SupportDrawingNumber, ssur.SupportLineNumber, ssur.SupportSheetNumber, ssur.SupportTimeInForm, ssur.SupportComplete, ssur.SupportShared, ssur.SupportPercentCompleted, ssur.SupportRework, ssur.SupportNotes,\nssur.ActivityType, ssur.Rev, ssur.TimeStamp\nFROM SubsSupportsREV ssur\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT ssu.* \nFROM SubsSupports ssu\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT  ssur.fk_OrgActivityId, ssur.SubmissionID, \nssur.SupportType, ssur.SupportPartNumber, ssur.SupportQuantity, ssur.SupportDrawingNumber, ssur.SupportLineNumber, ssur.SupportSheetNumber, ssur.SupportTimeInForm, ssur.SupportComplete, ssur.SupportShared, ssur.SupportPercentCompleted, ssur.SupportRework, ssur.SupportNotes,\nssur.ActivityType, ssur.Rev, ssur.TimeStamp\nFROM SubsSupportsREV ssur\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySupportResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SupportNotes",
        "fieldName" : "supportNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SupportRework",
        "fieldName" : "supportRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SupportPartNumber",
        "fieldName" : "supportPartNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "SupportComplete",
        "fieldName" : "supportComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SupportPercentCompleted",
        "fieldName" : "supportPercentCompleted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "SupportTimeInForm",
        "fieldName" : "supportTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SupportType",
        "fieldName" : "supportType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SupportDrawingNumber",
        "fieldName" : "supportDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "SupportShared",
        "fieldName" : "supportShared",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SupportQuantity",
        "fieldName" : "supportQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SupportLineNumber",
        "fieldName" : "supportLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SupportSheetNumber",
        "fieldName" : "supportSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryTesting" : {
    "name" : "GetActivityHistoryTesting",
    "description" : "Get the field activity history for testing activities BY RowID",
    "version" : "V1",
    "queryString" : "SELECT st.* \nFROM SubsTesting st\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT str.fk_OrgActivityId, str.SubmissionID, str.TestingTestPackageNumber, str.TestingHoursSpent, str.TestingRework, str.TestingNotes, str.TestingTimeInForm, \nstr.ActivityType, str.Rev, str.TimeStamp\nFROM SubsTestingREV str\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT st.* \nFROM SubsTesting st\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT str.fk_OrgActivityId, str.SubmissionID, str.TestingTestPackageNumber, str.TestingHoursSpent, str.TestingRework, str.TestingNotes, str.TestingTimeInForm, \nstr.ActivityType, str.Rev, str.TimeStamp\nFROM SubsTestingREV str\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryTestingResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TestingHoursSpent",
        "fieldName" : "testingHoursSpent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestingNotes",
        "fieldName" : "testingNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestingRework",
        "fieldName" : "testingRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TestingTestPackageNumber",
        "fieldName" : "testingTestPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestingTimeInForm",
        "fieldName" : "testingTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryTrim" : {
    "name" : "GetActivityHistoryTrim",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT st.* \nFROM SubsTrim st\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT  str.fk_OrgActivityId, str.SubmissionID, \nstr.TrimActivitySelect, str.TrimSize, str.TrimQuantity, str.TrimHandleType, str.TrimInstrumentType, str.TrimDrawingNumber, str.TrimLineNumber, str.TrimSheetNumber, str.TrimTimeInForm, str.TrimRework, str.TrimNotes ,\n\nstr.ActivityType, str.Rev, str.TimeStamp\nFROM SubsTrimREV str\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT st.* \nFROM SubsTrim st\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT  str.fk_OrgActivityId, str.SubmissionID, \nstr.TrimActivitySelect, str.TrimSize, str.TrimQuantity, str.TrimHandleType, str.TrimInstrumentType, str.TrimDrawingNumber, str.TrimLineNumber, str.TrimSheetNumber, str.TrimTimeInForm, str.TrimRework, str.TrimNotes ,\n\nstr.ActivityType, str.Rev, str.TimeStamp\nFROM SubsTrimREV str\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "19",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryTrimResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "TrimActivitySelect",
        "fieldName" : "trimActivitySelect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TrimNotes",
        "fieldName" : "trimNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TrimTimeInForm",
        "fieldName" : "trimTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TrimHandleType",
        "fieldName" : "trimHandleType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TrimSheetNumber",
        "fieldName" : "trimSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "TrimSize",
        "fieldName" : "trimSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "TrimRework",
        "fieldName" : "trimRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TrimQuantity",
        "fieldName" : "trimQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TrimDrawingNumber",
        "fieldName" : "trimDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TrimInstrumentType",
        "fieldName" : "trimInstrumentType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TrimLineNumber",
        "fieldName" : "trimLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryWeld" : {
    "name" : "GetActivityHistoryWeld",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT sw.* \nFROM SubsWeld sw\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT  swr.fk_OrgActivityId, swr.SubmissionID, \nswr.WeldSpool1, swr.WeldSpool2, swr.WeldDrawingNumber, swr.WeldLineNumber, swr.WeldSheetNumber, swr.WeldTimeInForm, swr.WeldLineSpec, swr.WeldNumber, swr.WeldStencil, swr.WeldSize, swr.WeldThickness, \nswr.WeldType, swr.WeldPosition, swr.WeldMaterial, swr.WeldProcedure, swr.WeldComplete, swr.WeldShared, swr.WeldPercentCompleteChoice, swr.WeldPercentCompleted, swr.WeldRework, swr.WeldNotes, \nswr.ActivityType, swr.Rev, swr.TimeStamp\nFROM SubsWeldREV swr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT sw.* \nFROM SubsWeld sw\nWHERE ID = :RowID\n\nUNION ALL\n\nSELECT  swr.fk_OrgActivityId, swr.SubmissionID, \nswr.WeldSpool1, swr.WeldSpool2, swr.WeldDrawingNumber, swr.WeldLineNumber, swr.WeldSheetNumber, swr.WeldTimeInForm, swr.WeldLineSpec, swr.WeldNumber, swr.WeldStencil, swr.WeldSize, swr.WeldThickness, \nswr.WeldType, swr.WeldPosition, swr.WeldMaterial, swr.WeldProcedure, swr.WeldComplete, swr.WeldShared, swr.WeldPercentCompleteChoice, swr.WeldPercentCompleted, swr.WeldRework, swr.WeldNotes, \nswr.ActivityType, swr.Rev, swr.TimeStamp\nFROM SubsWeldREV swr\nWHERE fk_OrgActivityId = :RowID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "30",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryWeldResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "WeldSheetNumber",
        "fieldName" : "weldSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldLineSpec",
        "fieldName" : "weldLineSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldProcedure",
        "fieldName" : "weldProcedure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSize",
        "fieldName" : "weldSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldComplete",
        "fieldName" : "weldComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "WeldTimeInForm",
        "fieldName" : "weldTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "WeldThickness",
        "fieldName" : "weldThickness",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSpool2",
        "fieldName" : "weldSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSpool1",
        "fieldName" : "weldSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "WeldShared",
        "fieldName" : "weldShared",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "WeldRework",
        "fieldName" : "weldRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "WeldMaterial",
        "fieldName" : "weldMaterial",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldPercentCompleteChoice",
        "fieldName" : "weldPercentCompleteChoice",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldDrawingNumber",
        "fieldName" : "weldDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "WeldStencil",
        "fieldName" : "weldStencil",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldPosition",
        "fieldName" : "weldPosition",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldNumber",
        "fieldName" : "weldNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldPercentCompleted",
        "fieldName" : "weldPercentCompleted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "WeldType",
        "fieldName" : "weldType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldLineNumber",
        "fieldName" : "weldLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldNotes",
        "fieldName" : "weldNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatches" : {
    "name" : "GetBidActivityMatches",
    "description" : "Get the Bid Activities that match the input parameters.",
    "version" : "V1",
    "queryString" : "SELECT min(td.ID) AS ID, td.BidID, td.Scope, td.Phase, td.Area, td.Location, td.Structure, td.Elevation, td.CU, td.P6ID, td.P6Description, td.Stage, td.TestPackageNumber, td.AssignedContractor, td.CostCode, td.LineNumber, td.EngDrawingNumber, td.SheetNumber, \ntd.RevisionNumber, td.System, td.Service, td.ClientPipeSpec, td.MaterialCode, td.Description, td.ComponentNumber, td.ECT, td.PipingActivityType, td.PipeSize, sum(td.TakeOffQuantity) AS TakeOffQuantity, td.QuantityUnit, sum(td.EstimatedHours) AS EstimatedHours, \ntd.WBS1, td.WBS2, td.WBS3, td.WBS4, td.WBS5, td.WBS6, td.WBS7, td.WBS8, td.WBS9, td.WBS10, td.Rev, td.TimeStamp,\n\nsum(COALESCE(td.TakeOffQuantity,0)\n-COALESCE(er.InstalledFootage,0)\n-COALESCE(er.InstalledBoltUps,0)\n-COALESCE(er.InstalledWelds,0)\n-COALESCE(er.InstalledCuts,0)\n-COALESCE(er.InstalledTrim,0)\n-COALESCE(er.InstalledSupports,0)\n-COALESCE(er.InstalledMisc,0)\n-COALESCE(er.InstalledDemo,0)) AS RemainingQuant\n\n\nFROM trackerDetails td\n\n\tLEFT JOIN (SELECT td.ID, td.BidID,\nsum(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0)) AS InstalledFootage,\nsum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) AS InstalledBoltUps, \nsum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0)) AS InstalledWelds,\nsum(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0)) AS InstalledCuts,\n(sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) + sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))) AS InstalledBasicConnections, \nsum(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0)) AS InstalledTrim,\nsum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0)) AS InstalledSupports,\nsum(COALESCE(IF(td.PipingActivityType = 'MISC' AND td.ECT != 'D', sm.MiscInstalled,0),0)) AS InstalledMisc,\nsum(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0)) AS InstalledDemo,\n\n(sum(COALESCE(st.TrimInstalled,0)) + sum(COALESCE(sm.MiscInstalled,0)) + sum(COALESCE(ssu.SupportInstalled,0))) AS InstalledBasicTrim\n\nFROM SubmissionStatus ss\n\tJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN SubsErection se\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0\n\t\n    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled\n\t\t\t\tFROM SubsBoltUp sb \n                WHERE sb.BoltUpRework = 0) sb\n\t\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\n        \n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\n\t\t\t\tFROM SubsWeld sw \n                WHERE sw.WeldRework = 0) sw\n\t\tON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\n        \n\tLEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled\n\t\t\t\tFROM SubsWeld sw \n                WHERE sw.WeldRework = 0\n                GROUP BY sw.ID) scut\n\t\tON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23\n        \n    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled\n\t\t\t\tFROM SubsTrim st\n                WHERE st.TrimRework = 0) st\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  \n        \n\tLEFT JOIN (SELECT ssu.ID, COALESCE((ssu.SupportPercentCompleted * .01 * ssu.SupportQuantity),0) AS SupportInstalled\n\t\t\t\tFROM SubsSupports ssu\n                WHERE ssu.SupportRework = 0) ssu\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \n\t\n    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled\n\t\t\t\tFROM SubsDemo sd) sd\n\t\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) \n\n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) sm\n\t\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 \n\n\t\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM`trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n        \n\t\n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) sme\n\t\tON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'\n       \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smb\n\t\tON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'\n\t\t\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smw\n\t\tON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'\n\t\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smc\n\t\tON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smt\n\t\tON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smssu\n\t\tON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smd\n\t\tON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'\n        \n\n        \nWHERE fk_ActivityStatus IN (5,12)\nGROUP BY td.BidID) er\n\t\tON er.ID = td.ID\nWHERE `LineNumber` LIKE :LineNumber\nAND `EngDrawingNumber` LIKE :DrawingNumber\nAND `SheetNumber` LIKE :SheetNumber\nAND `ECT` LIKE :ECT\nAND `PipingActivityType` LIKE :ECTType\n\nGROUP BY td.BidID",
    "countQueryString" : "select count(*) from (SELECT min(td.ID) AS ID, td.BidID, td.Scope, td.Phase, td.Area, td.Location, td.Structure, td.Elevation, td.CU, td.P6ID, td.P6Description, td.Stage, td.TestPackageNumber, td.AssignedContractor, td.CostCode, td.LineNumber, td.EngDrawingNumber, td.SheetNumber, \ntd.RevisionNumber, td.System, td.Service, td.ClientPipeSpec, td.MaterialCode, td.Description, td.ComponentNumber, td.ECT, td.PipingActivityType, td.PipeSize, sum(td.TakeOffQuantity) AS TakeOffQuantity, td.QuantityUnit, sum(td.EstimatedHours) AS EstimatedHours, \ntd.WBS1, td.WBS2, td.WBS3, td.WBS4, td.WBS5, td.WBS6, td.WBS7, td.WBS8, td.WBS9, td.WBS10, td.Rev, td.TimeStamp,\n\nsum(COALESCE(td.TakeOffQuantity,0)\n-COALESCE(er.InstalledFootage,0)\n-COALESCE(er.InstalledBoltUps,0)\n-COALESCE(er.InstalledWelds,0)\n-COALESCE(er.InstalledCuts,0)\n-COALESCE(er.InstalledTrim,0)\n-COALESCE(er.InstalledSupports,0)\n-COALESCE(er.InstalledMisc,0)\n-COALESCE(er.InstalledDemo,0)) AS RemainingQuant\n\n\nFROM trackerDetails td\n\n\tLEFT JOIN (SELECT td.ID, td.BidID,\nsum(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0)) AS InstalledFootage,\nsum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) AS InstalledBoltUps, \nsum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0)) AS InstalledWelds,\nsum(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0)) AS InstalledCuts,\n(sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) + sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))) AS InstalledBasicConnections, \nsum(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0)) AS InstalledTrim,\nsum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0)) AS InstalledSupports,\nsum(COALESCE(IF(td.PipingActivityType = 'MISC' AND td.ECT != 'D', sm.MiscInstalled,0),0)) AS InstalledMisc,\nsum(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0)) AS InstalledDemo,\n\n(sum(COALESCE(st.TrimInstalled,0)) + sum(COALESCE(sm.MiscInstalled,0)) + sum(COALESCE(ssu.SupportInstalled,0))) AS InstalledBasicTrim\n\nFROM SubmissionStatus ss\n\tJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN SubsErection se\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0\n\t\n    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled\n\t\t\t\tFROM SubsBoltUp sb \n                WHERE sb.BoltUpRework = 0) sb\n\t\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\n        \n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\n\t\t\t\tFROM SubsWeld sw \n                WHERE sw.WeldRework = 0) sw\n\t\tON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\n        \n\tLEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled\n\t\t\t\tFROM SubsWeld sw \n                WHERE sw.WeldRework = 0\n                GROUP BY sw.ID) scut\n\t\tON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23\n        \n    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled\n\t\t\t\tFROM SubsTrim st\n                WHERE st.TrimRework = 0) st\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  \n        \n\tLEFT JOIN (SELECT ssu.ID, COALESCE((ssu.SupportPercentCompleted * .01 * ssu.SupportQuantity),0) AS SupportInstalled\n\t\t\t\tFROM SubsSupports ssu\n                WHERE ssu.SupportRework = 0) ssu\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \n\t\n    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled\n\t\t\t\tFROM SubsDemo sd) sd\n\t\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) \n\n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) sm\n\t\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 \n\n\t\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM`trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n        \n\t\n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) sme\n\t\tON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'\n       \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smb\n\t\tON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'\n\t\t\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smw\n\t\tON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'\n\t\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smc\n\t\tON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smt\n\t\tON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smssu\n\t\tON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smd\n\t\tON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'\n        \n\n        \nWHERE fk_ActivityStatus IN (5,12)\nGROUP BY td.BidID) er\n\t\tON er.ID = td.ID\nWHERE `LineNumber` LIKE :LineNumber\nAND `EngDrawingNumber` LIKE :DrawingNumber\nAND `SheetNumber` LIKE :SheetNumber\nAND `ECT` LIKE :ECT\nAND `PipingActivityType` LIKE :ECTType\n\nGROUP BY td.BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ECT",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ECTType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientPipeSpec",
        "fieldName" : "clientPipeSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ComponentNumber",
        "fieldName" : "componentNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ECT",
        "fieldName" : "ect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "LineNumber",
        "fieldName" : "lineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MaterialCode",
        "fieldName" : "materialCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PipeSize",
        "fieldName" : "pipeSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "PipingActivityType",
        "fieldName" : "pipingActivityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "RemainingQuant",
        "fieldName" : "remainingQuant",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "RevisionNumber",
        "fieldName" : "revisionNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesByTestPackage" : {
    "name" : "GetBidActivityMatchesByTestPackage",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT td.ID, td.BidID, td.Scope, td.Phase, td.Area, td.Location, td.Elevation, td.CU, td.P6ID, td.P6Description, td.Stage, td.TestPackageNumber, td.CostCode, td.LineNumber, td.EngDrawingNumber, td.SheetNumber, \ntd.RevisionNumber, td.System, td.Service, td.ClientPipeSpec, td.MaterialCode, td.Description, td.ComponentNumber, td.ECT, td.PipingActivityType, td.PipeSize, td.TakeOffQuantity, td.QuantityUnit, td.EstimatedHours, \ntd.WBS1, td.WBS2, td.WBS3, td.WBS4, td.WBS5, td.WBS6, td.WBS7, td.WBS8, td.WBS9, td.WBS10, td.Rev, td.TimeStamp,\n\nReadyForTestingInstalled,\nHydroInstalled,\nClientTurnoverInstalled,\n\nste.ReadyForTestingHours AS ReadyForTestingHours,\nste.ReadyForTestingHours AS HydroHours,\nste.ReadyForTestingHours AS ClientTurnoverHours,\n\nert.EarnedReadyForTestingHours AS EarnedReadyForTestingHours,\nert.EarnedReadyForTestingHours AS EarnedHydroHours,\nert.EarnedReadyForTestingHours AS EarnedClientTurnoverHours\n\nFROM trackerDetails td\n\n\tLEFT JOIN (SELECT td.BidID,\nsum(COALESCE(steR.InstalledReadyForTesting, 0)) AS ReadyForTestingInstalled,\nsum(COALESCE(steH.InstalledHydro, 0)) AS HydroInstalled,\nsum(COALESCE(steC.InstalledClientTurnover, 0)) AS ClientTurnoverInstalled,\n\nsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * steR.InstalledReadyForTesting, 0)) AS EarnedReadyForTestingHours,\nsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') * steH.InstalledHydro, 0)) AS EarnedHydroHours,\nsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') * steC.InstalledClientTurnover, 0)) AS EarnedClientTurnoverHours\n\n\n\nFROM trackerDetails td\n\nLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledReadyForTesting\n\t\t\tFROM SubsTesting ste\n            INNER JOIN SubmissionStatus ss\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 41 AND ss.fk_ActivityStatus IN (5,12)) steR\n\tON steR.TestingTestPackageNumber = td.TestPackageNumber AND steR.ActivityType = 41\n    \nLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledHydro\n\t\t\tFROM SubsTesting ste\n            INNER JOIN SubmissionStatus ss\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 42 AND ss.fk_ActivityStatus IN (5,12)) steH\n\tON steH.TestingTestPackageNumber = td.TestPackageNumber AND steH.ActivityType = 42\n    \nLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledClientTurnover\n\t\t\tFROM SubsTesting ste\n            INNER JOIN SubmissionStatus ss\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 43 AND ss.fk_ActivityStatus IN (5,12)) steC\n\tON steC.TestingTestPackageNumber = td.TestPackageNumber AND steC.ActivityType = 43\n\nGROUP BY td.BidID) ert\n\tON ert.BidID = td.BidID\n    \nLEFT JOIN (SELECT td.BidID, \n\t\t\t\tCOALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent'),0) AS TestingHours,\n                COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent')),0) AS ReadyForTestingHours,\n                COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent')),0) AS HydroHours,\n                COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent')),0) AS ClientTurnoverHours\n\t\t\t\tFROM `trackerDetails` td\n\t\t\t\tWHERE td.ECT != 'D') ste\n\tON ste.BidID = td.BidID\n\nWHERE td.TestPackageNumber = :TestPackage\nORDER BY td.EngDrawingNumber, td.SheetNumber",
    "countQueryString" : "select count(*) from (SELECT td.ID, td.BidID, td.Scope, td.Phase, td.Area, td.Location, td.Elevation, td.CU, td.P6ID, td.P6Description, td.Stage, td.TestPackageNumber, td.CostCode, td.LineNumber, td.EngDrawingNumber, td.SheetNumber, \ntd.RevisionNumber, td.System, td.Service, td.ClientPipeSpec, td.MaterialCode, td.Description, td.ComponentNumber, td.ECT, td.PipingActivityType, td.PipeSize, td.TakeOffQuantity, td.QuantityUnit, td.EstimatedHours, \ntd.WBS1, td.WBS2, td.WBS3, td.WBS4, td.WBS5, td.WBS6, td.WBS7, td.WBS8, td.WBS9, td.WBS10, td.Rev, td.TimeStamp,\n\nReadyForTestingInstalled,\nHydroInstalled,\nClientTurnoverInstalled,\n\nste.ReadyForTestingHours AS ReadyForTestingHours,\nste.ReadyForTestingHours AS HydroHours,\nste.ReadyForTestingHours AS ClientTurnoverHours,\n\nert.EarnedReadyForTestingHours AS EarnedReadyForTestingHours,\nert.EarnedReadyForTestingHours AS EarnedHydroHours,\nert.EarnedReadyForTestingHours AS EarnedClientTurnoverHours\n\nFROM trackerDetails td\n\n\tLEFT JOIN (SELECT td.BidID,\nsum(COALESCE(steR.InstalledReadyForTesting, 0)) AS ReadyForTestingInstalled,\nsum(COALESCE(steH.InstalledHydro, 0)) AS HydroInstalled,\nsum(COALESCE(steC.InstalledClientTurnover, 0)) AS ClientTurnoverInstalled,\n\nsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * steR.InstalledReadyForTesting, 0)) AS EarnedReadyForTestingHours,\nsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') * steH.InstalledHydro, 0)) AS EarnedHydroHours,\nsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') * steC.InstalledClientTurnover, 0)) AS EarnedClientTurnoverHours\n\n\n\nFROM trackerDetails td\n\nLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledReadyForTesting\n\t\t\tFROM SubsTesting ste\n            INNER JOIN SubmissionStatus ss\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 41 AND ss.fk_ActivityStatus IN (5,12)) steR\n\tON steR.TestingTestPackageNumber = td.TestPackageNumber AND steR.ActivityType = 41\n    \nLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledHydro\n\t\t\tFROM SubsTesting ste\n            INNER JOIN SubmissionStatus ss\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 42 AND ss.fk_ActivityStatus IN (5,12)) steH\n\tON steH.TestingTestPackageNumber = td.TestPackageNumber AND steH.ActivityType = 42\n    \nLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledClientTurnover\n\t\t\tFROM SubsTesting ste\n            INNER JOIN SubmissionStatus ss\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 43 AND ss.fk_ActivityStatus IN (5,12)) steC\n\tON steC.TestingTestPackageNumber = td.TestPackageNumber AND steC.ActivityType = 43\n\nGROUP BY td.BidID) ert\n\tON ert.BidID = td.BidID\n    \nLEFT JOIN (SELECT td.BidID, \n\t\t\t\tCOALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent'),0) AS TestingHours,\n                COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent')),0) AS ReadyForTestingHours,\n                COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent')),0) AS HydroHours,\n                COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent')),0) AS ClientTurnoverHours\n\t\t\t\tFROM `trackerDetails` td\n\t\t\t\tWHERE td.ECT != 'D') ste\n\tON ste.BidID = td.BidID\n\nWHERE td.TestPackageNumber = :TestPackage\nORDER BY td.EngDrawingNumber, td.SheetNumber) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesByTestPackageResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "PipeSize",
        "fieldName" : "pipeSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EarnedClientTurnoverHours",
        "fieldName" : "earnedClientTurnoverHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "LineNumber",
        "fieldName" : "lineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MaterialCode",
        "fieldName" : "materialCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HydroInstalled",
        "fieldName" : "hydroInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ReadyForTestingInstalled",
        "fieldName" : "readyForTestingInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "PipingActivityType",
        "fieldName" : "pipingActivityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientTurnoverInstalled",
        "fieldName" : "clientTurnoverInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientPipeSpec",
        "fieldName" : "clientPipeSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EarnedReadyForTestingHours",
        "fieldName" : "earnedReadyForTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ComponentNumber",
        "fieldName" : "componentNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ECT",
        "fieldName" : "ect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "HydroHours",
        "fieldName" : "hydroHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientTurnoverHours",
        "fieldName" : "clientTurnoverHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedHydroHours",
        "fieldName" : "earnedHydroHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RevisionNumber",
        "fieldName" : "revisionNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReadyForTestingHours",
        "fieldName" : "readyForTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesByTestPackageCivil" : {
    "name" : "GetBidActivityMatchesByTestPackageCivil",
    "description" : "Get Bid items with the supplied TestPackage",
    "version" : "V1",
    "queryString" : "SELECT ctd.UID, ctd.BidID, ctd.EWONumber, ctd.Scope, ctd.Phase, ctd.Stage, ctd.TestPackageNumber, ctd.CostCode, ctd.P6ID, ctd.AssignedContractor, ctd.Area, ctd.Location, ctd.Structure, ctd.Grouping, \nctd.FoundationDescription, ctd.CU, ctd.P6Description, ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DrawingRev, ctd.DetailDrawingNumber, ctd.DetailRev, ctd.DetailName, ctd.Description, ctd.ActivityType, \nctd.ActivitySubType, ctd.System, ctd.Service, ctd.TakeOffQuantity, ctd.QuantityUnit, ctd.EstimatedHours, \nctd.WBS1, ctd.WBS2, ctd.WBS3, ctd.WBS4, ctd.WBS5, ctd.WBS6, ctd.WBS7, ctd.WBS8, ctd.WBS9, ctd.WBS10, \n\n\ncount(ctd.BidID) AS SellPunchCount,\nsum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,\nsum(COALESCE(ercs.InstalledSellPunch,0)) AS SellPunchInstalled,\nsum(IF(ercs.InstalledSellPunch = 1, \n/*TRUE*/\n(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')),\n/*FALSE*/\n0\n)) AS EarnedSellPunchHours,\n\nctd.Rev, ctd.TimeStamp\n\nFROM CivilTrackerDetails ctd\n\nLEFT JOIN CivilSellPackage csp\n\tON csp.SellTestPackageNumber = ctd.TestPackageNumber\n\nLEFT JOIN (SELECT csp.SellTestPackageNumber, 1 AS InstalledSellPunch\n\t\t\tFROM CivilSellPackage csp\n\t\t\tINNER JOIN SubmissionStatus ss\n\t\t\t\tON ss.ActivityRowId = csp.ID AND ss.ActivityType = 72 AND ss.fk_ActivityStatus IN (5,12)) ercs\n    ON ercs.SellTestPackageNumber = ctd.TestPackageNumber\n\nWHERE ctd.TestPackageNumber = :TestPackage\nGROUP BY BidID\nORDER By ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DetailDrawingNumber, ctd.DetailName, ctd.Description",
    "countQueryString" : "select count(*) from (SELECT ctd.UID, ctd.BidID, ctd.EWONumber, ctd.Scope, ctd.Phase, ctd.Stage, ctd.TestPackageNumber, ctd.CostCode, ctd.P6ID, ctd.AssignedContractor, ctd.Area, ctd.Location, ctd.Structure, ctd.Grouping, \nctd.FoundationDescription, ctd.CU, ctd.P6Description, ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DrawingRev, ctd.DetailDrawingNumber, ctd.DetailRev, ctd.DetailName, ctd.Description, ctd.ActivityType, \nctd.ActivitySubType, ctd.System, ctd.Service, ctd.TakeOffQuantity, ctd.QuantityUnit, ctd.EstimatedHours, \nctd.WBS1, ctd.WBS2, ctd.WBS3, ctd.WBS4, ctd.WBS5, ctd.WBS6, ctd.WBS7, ctd.WBS8, ctd.WBS9, ctd.WBS10, \n\n\ncount(ctd.BidID) AS SellPunchCount,\nsum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,\nsum(COALESCE(ercs.InstalledSellPunch,0)) AS SellPunchInstalled,\nsum(IF(ercs.InstalledSellPunch = 1, \n/*TRUE*/\n(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')),\n/*FALSE*/\n0\n)) AS EarnedSellPunchHours,\n\nctd.Rev, ctd.TimeStamp\n\nFROM CivilTrackerDetails ctd\n\nLEFT JOIN CivilSellPackage csp\n\tON csp.SellTestPackageNumber = ctd.TestPackageNumber\n\nLEFT JOIN (SELECT csp.SellTestPackageNumber, 1 AS InstalledSellPunch\n\t\t\tFROM CivilSellPackage csp\n\t\t\tINNER JOIN SubmissionStatus ss\n\t\t\t\tON ss.ActivityRowId = csp.ID AND ss.ActivityType = 72 AND ss.fk_ActivityStatus IN (5,12)) ercs\n    ON ercs.SellTestPackageNumber = ctd.TestPackageNumber\n\nWHERE ctd.TestPackageNumber = :TestPackage\nGROUP BY BidID\nORDER By ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DetailDrawingNumber, ctd.DetailName, ctd.Description) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesByTestPackageCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivitySubType",
        "fieldName" : "activitySubType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailDrawingNumber",
        "fieldName" : "detailDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailName",
        "fieldName" : "detailName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailRev",
        "fieldName" : "detailRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "DrawingRev",
        "fieldName" : "drawingRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedSellPunchHours",
        "fieldName" : "earnedSellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "FoundationDescription",
        "fieldName" : "foundationDescription",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Grouping",
        "fieldName" : "grouping",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SellPunchCount",
        "fieldName" : "sellPunchCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "SellPunchHours",
        "fieldName" : "sellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellPunchInstalled",
        "fieldName" : "sellPunchInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "UID",
        "fieldName" : "uid",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesByTestPackageSteel" : {
    "name" : "GetBidActivityMatchesByTestPackageSteel",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "SELECT std.BidID, std.Scope, std.EWONumber, std.Phase, std.Area, std.Location, std.Elevation, std.CU, std.P6ID, std.P6Description, std.Stage, std.TestPackageNumber, std.CostCode, std.PieceMark, \nstd.RevisionNumber, std.Description, std.ActivityType, std.SteelType, std.MaterialCode, std.Length, std.Weight, \nstd.WeldCount, std.TakeOffQuantity, std.SteelHours, std.WeldHours, \nstd.WBS1, std.WBS2, std.WBS3, std.WBS4, std.WBS5, std.WBS6, std.WBS7, std.WBS8, std.WBS9, std.WBS10,\n\n### Installed Quantities ###\nsum(COALESCE(stlsell.FASellQuantity,0)) AS InstalledSell,\n\n### Remaining Quantities ###\n(COALESCE(std.TakeOffQuantity,0) - sum(COALESCE(stlsell.FASellQuantity,0))) AS RemainingSell\n\nFROM (SELECT BidID, Scope, EWONumber, Phase, Area, Location, Elevation, CU, P6ID, P6Description, Stage, TestPackageNumber, CostCode, PieceMark, RevisionNumber, Description, ActivityType, SteelType, \n\t\tMaterialCode, Length, Weight, \n\t\tsum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,\n        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\t\tFROM SteelTrackerDetails \n\t\tGROUP BY BidID) std\n        \nLEFT JOIN SubmissionStatus ss\n\tON ss.fk_BidIDAssigned = std.BidID AND ss.ActivityType = 65 AND ss.fk_ActivityStatus IN (5,12)\n    \nLEFT JOIN SteelSell stlsell\n\tON stlsell.ID = ss.ActivityRowId AND stlsell.FARework = 0\n  \nWHERE TestPackageNumber = :TestPackage\nGROUP BY BidID\nORDER BY std.Area, std.PieceMark",
    "countQueryString" : "select count(*) from (SELECT std.BidID, std.Scope, std.EWONumber, std.Phase, std.Area, std.Location, std.Elevation, std.CU, std.P6ID, std.P6Description, std.Stage, std.TestPackageNumber, std.CostCode, std.PieceMark, \nstd.RevisionNumber, std.Description, std.ActivityType, std.SteelType, std.MaterialCode, std.Length, std.Weight, \nstd.WeldCount, std.TakeOffQuantity, std.SteelHours, std.WeldHours, \nstd.WBS1, std.WBS2, std.WBS3, std.WBS4, std.WBS5, std.WBS6, std.WBS7, std.WBS8, std.WBS9, std.WBS10,\n\n### Installed Quantities ###\nsum(COALESCE(stlsell.FASellQuantity,0)) AS InstalledSell,\n\n### Remaining Quantities ###\n(COALESCE(std.TakeOffQuantity,0) - sum(COALESCE(stlsell.FASellQuantity,0))) AS RemainingSell\n\nFROM (SELECT BidID, Scope, EWONumber, Phase, Area, Location, Elevation, CU, P6ID, P6Description, Stage, TestPackageNumber, CostCode, PieceMark, RevisionNumber, Description, ActivityType, SteelType, \n\t\tMaterialCode, Length, Weight, \n\t\tsum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,\n        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\t\tFROM SteelTrackerDetails \n\t\tGROUP BY BidID) std\n        \nLEFT JOIN SubmissionStatus ss\n\tON ss.fk_BidIDAssigned = std.BidID AND ss.ActivityType = 65 AND ss.fk_ActivityStatus IN (5,12)\n    \nLEFT JOIN SteelSell stlsell\n\tON stlsell.ID = ss.ActivityRowId AND stlsell.FARework = 0\n  \nWHERE TestPackageNumber = :TestPackage\nGROUP BY BidID\nORDER BY std.Area, std.PieceMark) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesByTestPackageSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "InstalledSell",
        "fieldName" : "installedSell",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Length",
        "fieldName" : "length",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MaterialCode",
        "fieldName" : "materialCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMark",
        "fieldName" : "pieceMark",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "RemainingSell",
        "fieldName" : "remainingSell",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "RevisionNumber",
        "fieldName" : "revisionNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SteelHours",
        "fieldName" : "steelHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SteelType",
        "fieldName" : "steelType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Weight",
        "fieldName" : "weight",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldCount",
        "fieldName" : "weldCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldHours",
        "fieldName" : "weldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesCivil" : {
    "name" : "GetBidActivityMatchesCivil",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "SELECT \nmin(UID) AS UID, min(BidID) AS BidID, EWONumber, Scope, Phase, Stage, TestPackageNumber, CostCode, P6ID, AssignedContractor, Area, Location, Structure, Grouping, FoundationDescription, CU, P6Description, \nEngDrawingNumber, SheetNumber, DrawingRev, DetailDrawingNumber, DetailRev, DetailName, Description, ActivityType, ActivitySubType, System, Service, \nsum(TakeOffQuantity) AS TakeOffQuantity, QuantityUnit, sum(EstimatedHours) AS EstimatedHours, \nWBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\nFROM CivilTrackerDetails\nWHERE BidID = :BidID\nOR \n(FoundationDescription LIKE :Foundation\nAND EngDrawingNumber LIKE :DrawingNumber\nAND DetailDrawingNumber LIKE :DetailDrawingNumber)\nGROUP BY BidID",
    "countQueryString" : "select count(*) from (SELECT \nmin(UID) AS UID, min(BidID) AS BidID, EWONumber, Scope, Phase, Stage, TestPackageNumber, CostCode, P6ID, AssignedContractor, Area, Location, Structure, Grouping, FoundationDescription, CU, P6Description, \nEngDrawingNumber, SheetNumber, DrawingRev, DetailDrawingNumber, DetailRev, DetailName, Description, ActivityType, ActivitySubType, System, Service, \nsum(TakeOffQuantity) AS TakeOffQuantity, QuantityUnit, sum(EstimatedHours) AS EstimatedHours, \nWBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\nFROM CivilTrackerDetails\nWHERE BidID = :BidID\nOR \n(FoundationDescription LIKE :Foundation\nAND EngDrawingNumber LIKE :DrawingNumber\nAND DetailDrawingNumber LIKE :DetailDrawingNumber)\nGROUP BY BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "Foundation",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "DetailDrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivitySubType",
        "fieldName" : "activitySubType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailDrawingNumber",
        "fieldName" : "detailDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailName",
        "fieldName" : "detailName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailRev",
        "fieldName" : "detailRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "DrawingRev",
        "fieldName" : "drawingRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "FoundationDescription",
        "fieldName" : "foundationDescription",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Grouping",
        "fieldName" : "grouping",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "UID",
        "fieldName" : "uid",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesEquip" : {
    "name" : "GetBidActivityMatchesEquip",
    "description" : "Get all Equip Tracker Details that math the given FA",
    "version" : "V2",
    "queryString" : "SELECT \nmin(UID) AS UID, min(BidID) AS BidID, EWONumber, Scope, Phase, Stage, TestPackageNumber, CostCode, P6ID, AssignedContractor, Area, Location, Structure, CU, Elevation, P6Description, \nEngDrawingNumber, SheetNumber, DrawingRev, ComponentNumber, Description, EquipmentType, ActivityType, ClientMaterialSpec, PerformanceMaterialSpec, System, Service, \nsum(TakeOffQuantity) AS TakeOffQuantity, QuantityUnit, sum(EstimatedHours) AS EstimatedHours, \nWBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\n\nFROM EquipTrackerDetails\nWHERE BidID = :BidID\nOR \n(ComponentNumber LIKE :TagNumber\nAND Description LIKE :Description)\nGROUP BY BidID",
    "countQueryString" : "select count(*) from (SELECT \nmin(UID) AS UID, min(BidID) AS BidID, EWONumber, Scope, Phase, Stage, TestPackageNumber, CostCode, P6ID, AssignedContractor, Area, Location, Structure, CU, Elevation, P6Description, \nEngDrawingNumber, SheetNumber, DrawingRev, ComponentNumber, Description, EquipmentType, ActivityType, ClientMaterialSpec, PerformanceMaterialSpec, System, Service, \nsum(TakeOffQuantity) AS TakeOffQuantity, QuantityUnit, sum(EstimatedHours) AS EstimatedHours, \nWBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\n\nFROM EquipTrackerDetails\nWHERE BidID = :BidID\nOR \n(ComponentNumber LIKE :TagNumber\nAND Description LIKE :Description)\nGROUP BY BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "29",
      "required" : false
    }, {
      "name" : "TagNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "DEGASIFIER",
      "required" : false
    }, {
      "name" : "Description",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "SET DEGASIFIER",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesEquipResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "UID",
        "fieldName" : "uid",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "DrawingRev",
        "fieldName" : "drawingRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ComponentNumber",
        "fieldName" : "componentNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EquipmentType",
        "fieldName" : "equipmentType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientMaterialSpec",
        "fieldName" : "clientMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PerformanceMaterialSpec",
        "fieldName" : "performanceMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesSteel" : {
    "name" : "GetBidActivityMatchesSteel",
    "description" : "above",
    "version" : "V1",
    "queryString" : "SELECT \nmin(std.UID) AS UID, min(std.BidID) AS BidID, std.EWONumber, std.Scope, std.Phase,  std.Stage, std.TestPackageNumber, std.CostCode, std.P6ID, std.AssignedContractor, std.Area, std.Location, std.Structure, std.CU, \nstd.Elevation, std.P6Description, std.PieceMark, std.PieceMarkRev, std.Description, std.ActivityType, std.ClientMaterialSpec, std.PerformanceMaterialSpec, std.MaterialType, sum(std.Length) AS Length, \nsum(std.Weight) AS Weight, std.System, std.Service, sum(std.TakeOffQuantity) AS TakeOffQuantity, sum(std.WeldCount) AS WeldCount, sum(std.SteelHours) AS SteelHours, sum(std.WeldHours) WeldHours,\nstd.WBS1, std.WBS2, std.WBS3, std.WBS4, std.WBS5, std.WBS6, std.WBS7, std.WBS8, std.WBS9, std.WBS10\n\nFROM SteelTrackerDetails std\nWHERE Area LIKE :Area\nAND PieceMark LIKE :PieceMark\nAND ActivityType LIKE :BidActivityType\nAND MaterialType LIKE :SteelType\nGROUP BY Area, PieceMark",
    "countQueryString" : "select count(*) from (SELECT \nmin(std.UID) AS UID, min(std.BidID) AS BidID, std.EWONumber, std.Scope, std.Phase,  std.Stage, std.TestPackageNumber, std.CostCode, std.P6ID, std.AssignedContractor, std.Area, std.Location, std.Structure, std.CU, \nstd.Elevation, std.P6Description, std.PieceMark, std.PieceMarkRev, std.Description, std.ActivityType, std.ClientMaterialSpec, std.PerformanceMaterialSpec, std.MaterialType, sum(std.Length) AS Length, \nsum(std.Weight) AS Weight, std.System, std.Service, sum(std.TakeOffQuantity) AS TakeOffQuantity, sum(std.WeldCount) AS WeldCount, sum(std.SteelHours) AS SteelHours, sum(std.WeldHours) WeldHours,\nstd.WBS1, std.WBS2, std.WBS3, std.WBS4, std.WBS5, std.WBS6, std.WBS7, std.WBS8, std.WBS9, std.WBS10\n\nFROM SteelTrackerDetails std\nWHERE Area LIKE :Area\nAND PieceMark LIKE :PieceMark\nAND ActivityType LIKE :BidActivityType\nAND MaterialType LIKE :SteelType\nGROUP BY Area, PieceMark) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "CWP-063-S-002",
      "required" : false
    }, {
      "name" : "PieceMark",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "19BP2",
      "required" : false
    }, {
      "name" : "BidActivityType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "E",
      "required" : false
    }, {
      "name" : "SteelType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Beam",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "UID",
        "fieldName" : "uid",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMark",
        "fieldName" : "pieceMark",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMarkRev",
        "fieldName" : "pieceMarkRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientMaterialSpec",
        "fieldName" : "clientMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PerformanceMaterialSpec",
        "fieldName" : "performanceMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MaterialType",
        "fieldName" : "materialType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Length",
        "fieldName" : "length",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Weight",
        "fieldName" : "weight",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldCount",
        "fieldName" : "weldCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "SteelHours",
        "fieldName" : "steelHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldHours",
        "fieldName" : "weldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityQuantity" : {
    "name" : "GetBidActivityQuantity",
    "description" : "Gets the Bid estimate Quantity of a specified BidID",
    "version" : "V1",
    "queryString" : "SELECT sum(td.TakeOffQuantity) AS TakeOffQuantity , td.QuantityUnit, \nIF(td.ECT = 'D', sum(COALESCE(td.EstimatedHours,0)), \n    sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),0)) \n)AS EstimatedHours\nFROM trackerDetails td\nWHERE BidID = :BidID\nGROUP BY BidID",
    "countQueryString" : "select count(*) from (SELECT sum(td.TakeOffQuantity) AS TakeOffQuantity , td.QuantityUnit, \nIF(td.ECT = 'D', sum(COALESCE(td.EstimatedHours,0)), \n    sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),0)) \n)AS EstimatedHours\nFROM trackerDetails td\nWHERE BidID = :BidID\nGROUP BY BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "84",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityQuantityResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidChangeLogByID" : {
    "name" : "GetBidChangeLogByID",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT ID,BidID,Scope,Phase,Area,Location,Elevation,CU,P6ID,P6Description,Stage,TestPackageNumber,CostCode,LineNumber,EngDrawingNumber,SheetNumber,RevisionNumber,System,Service,ClientPipeSpec,MaterialCode,Description,ComponentNumber,ECT,PipingActivityType,PipeSize,TakeOffQuantity,QuantityUnit,EstimatedHours,WBS1,WBS2,WBS3,WBS4,WBS5,WBS6,WBS7,WBS8,WBS9,WBS10,Rev,TimeStamp \nFROM trackerDetails td\nWHERE ID = :ID\nUNION\nSELECT fk_OrgId,BidID,Scope,Phase,Area,Location,Elevation,CU,P6ID,P6Description,Stage,TestPackageNumber,CostCode,LineNumber,EngDrawingNumber,SheetNumber,RevisionNumber,System,Service,ClientPipeSpec,MaterialCode,Description,ComponentNumber,ECT,PipingActivityType,PipeSize,TakeOffQuantity,QuantityUnit,EstimatedHours,WBS1,WBS2,WBS3,WBS4,WBS5,WBS6,WBS7,WBS8,WBS9,WBS10,Rev,TimeStamp\nFROM trackerDetailsREV tdr\nWHERE tdr.fk_OrgID = :ID\nOrder By TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT ID,BidID,Scope,Phase,Area,Location,Elevation,CU,P6ID,P6Description,Stage,TestPackageNumber,CostCode,LineNumber,EngDrawingNumber,SheetNumber,RevisionNumber,System,Service,ClientPipeSpec,MaterialCode,Description,ComponentNumber,ECT,PipingActivityType,PipeSize,TakeOffQuantity,QuantityUnit,EstimatedHours,WBS1,WBS2,WBS3,WBS4,WBS5,WBS6,WBS7,WBS8,WBS9,WBS10,Rev,TimeStamp \nFROM trackerDetails td\nWHERE ID = :ID\nUNION\nSELECT fk_OrgId,BidID,Scope,Phase,Area,Location,Elevation,CU,P6ID,P6Description,Stage,TestPackageNumber,CostCode,LineNumber,EngDrawingNumber,SheetNumber,RevisionNumber,System,Service,ClientPipeSpec,MaterialCode,Description,ComponentNumber,ECT,PipingActivityType,PipeSize,TakeOffQuantity,QuantityUnit,EstimatedHours,WBS1,WBS2,WBS3,WBS4,WBS5,WBS6,WBS7,WBS8,WBS9,WBS10,Rev,TimeStamp\nFROM trackerDetailsREV tdr\nWHERE tdr.fk_OrgID = :ID\nOrder By TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1005",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidChangeLogByIdResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PipeSize",
        "fieldName" : "pipeSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ECT",
        "fieldName" : "ect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "LineNumber",
        "fieldName" : "lineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MaterialCode",
        "fieldName" : "materialCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "RevisionNumber",
        "fieldName" : "revisionNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PipingActivityType",
        "fieldName" : "pipingActivityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientPipeSpec",
        "fieldName" : "clientPipeSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ComponentNumber",
        "fieldName" : "componentNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistory" : {
    "name" : "GetBidWorkHistory",
    "description" : "Get all activities assigned/ earning hours against bid ID",
    "version" : "V1",
    "queryString" : "SELECT ss.PSAActivityID, at.ActivityType, ss.ActivityRowId,\n \nCOALESCE((se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6),0) AS Quantity,\nse.ErectionNotes AS Notes,\nse.Rev,\nse.ErectionRework AS Rework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionStatusREV ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2\n\nINNER JOIN SubsErection se\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11\n\t\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_ActivityStatus IN (5,12)\n\nGROUP BY ss.PSAActivityID\n\n\nUNION ALL\n\n\nSELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,\n \nsb.BoltUpInstalled AS Quantity,\nsb.BoltUpNotes AS Notes,\nsb.Rev,\nsb.BoltUpRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionStatusREV ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2\n\nINNER JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled, sb.BoltUpNotes, sb.Rev, sb.BoltUpRework\n\t\t\tFROM SubsBoltUp sb) sb\n\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\n\t\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_ActivityStatus IN (5,12)\n\nGROUP BY ss.PSAActivityID\n\n\nUNION ALL\n\n\nSELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,\n \nsw.WeldInstalled AS Quantity,\nsw.WeldNotes AS Notes,\nsw.Rev,\nsw.WeldRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionStatusREV ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2\n\nINNER JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled, sw.WeldNotes, sw.Rev, sw.WeldRework\n\t\t\tFROM SubsWeld sw) sw\n\tON sw.ID = ss.ActivityRowId AND ss.ActivityType IN (22,23)\n\t\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_ActivityStatus IN (5,12)\n\nGROUP BY ss.PSAActivityID\n\n\nUNION ALL\n\n\nSELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,\n \nst.TrimInstalled AS Quantity,\nst.TrimNotes AS Notes,  \nst.Rev,\nst.TrimRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionStatusREV ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2\n\nINNER JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled, st.TrimNotes, st.Rev, st.TrimRework\n\t\t\tFROM SubsTrim st) st\n\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)\n\t\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_ActivityStatus IN (5,12)\n\nGROUP BY ss.PSAActivityID\n\n\nUNION ALL\n\n\nSELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,\n \nssu.SupportInstalled AS Quantity,\nssu.SupportNotes AS Notes,  \nssu.Rev,\nssu.SupportRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionStatusREV ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2\n\nINNER JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled, ssu.SupportNotes, ssu.Rev, ssu.SupportRework\n\t\t\tFROM SubsSupports ssu) ssu\n\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \n\t\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_ActivityStatus IN (5,12)\n\nGROUP BY ss.PSAActivityID\n\n\nUNION ALL\n\n\nSELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,\n \nd.DemoInstalled AS Quantity,\nd.DemoNotes AS Notes, \nd.Rev,\n'0',\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionStatusREV ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2\n\nINNER JOIN (SELECT d.ID, d.DemoQuantity AS DemoInstalled, d.DemoNotes, d.Rev\n\t\t\tFROM SubsDemo d) d\n\tON d.ID = ss.ActivityRowId AND ss.ActivityType IN (50,51,52,53,54,59)\n\t\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_ActivityStatus IN (5,12)\n\nGROUP BY ss.PSAActivityID\n\n\nUNION ALL\n\n\nSELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,\n \nsm.MiscInstalled AS Quantity,\nsm.MiscNotes AS Notes,\nsm.Rev,\nsm.MiscRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionStatusREV ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2\n\nINNER JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled, sm.MiscNotes, sm.Rev, sm.MiscRework\n\t\t\tFROM SubsMisc sm) sm\n\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91\n\t\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_ActivityStatus IN (5,12)\n\nGROUP BY ss.PSAActivityID\n\n\nUNION ALL\n\n\nSELECT steR.PSAActivityID, at.ActivityType,  steR.ActivityRowId,\n \n1 AS Quantity,\nsteR.TestingNotes AS Notes,\nsteR.Rev,\nsteR.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, ssr.TimeStamp AS ReviewedTime \n\nFROM trackerDetails td\n\n\tLEFT JOIN (SELECT ss.PSAActivityID, ss.fk_SubmissionId, ss.ActivityRowId,\n\t\t\t\t ss.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework\n\t\t\tFROM SubsTesting ste\n            INNER JOIN SubmissionStatus ss\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 41 AND ss.fk_ActivityStatus IN (5,12)\n\t\t\t) steR\n\tON steR.TestingTestPackageNumber = td.TestPackageNumber AND steR.ActivityType = 41 AND td.ECT != 'D'\n\n\tLEFT JOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = steR.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionID = steR.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp, ssr.fk_ActivityStatus\n\t\t\t\tFROM SubmissionStatusREV ssr\n                WHERE ssr.fk_ActivityStatus = 2\n                GROUP BY fk_PSAActivityID) ssr\n\t\tON ssr.fk_PSAActivityID = steR.PSAActivityID \nWHERE td.BidID = :BidID\nAND steR.PSAActivityID IS NOT NULL\n\nUNION ALL\n\n\nSELECT steH.PSAActivityID, at.ActivityType,  steH.ActivityRowId,\n \n1 AS Quantity,\nsteH.TestingNotes AS Notes,\nsteH.Rev,\nsteH.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, ssr.TimeStamp AS ReviewedTime \n\nFROM trackerDetails td\n\n\tLEFT JOIN (SELECT ss.PSAActivityID, ss.fk_SubmissionId, ss.ActivityRowId, \n\t\t\t\t ss.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework\n\t\t\t\tFROM `Job1111`.SubsTesting ste\n\t\t\t\t\tINNER JOIN `Job1111`.SubmissionStatus ss\n\t\t\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 42 AND ss.fk_ActivityStatus IN (5,12) \n\t\t\t\t) steH\n\t\tON steH.TestingTestPackageNumber = td.TestPackageNumber AND steH.ActivityType = 42 AND td.ECT != 'D' \n\t\n    LEFT JOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = steH.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionID = steH.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\tLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp, ssr.fk_ActivityStatus\n\t\t\t\tFROM SubmissionStatusREV ssr\n                WHERE ssr.fk_ActivityStatus = 2\n                GROUP BY fk_PSAActivityID) ssr\n\t\tON ssr.fk_PSAActivityID = steH.PSAActivityID \n        \nWHERE td.BidID = :BidID\nAND steH.PSAActivityID IS NOT NULL\n\n\nUNION ALL\n\n\nSELECT steC.PSAActivityID, at.ActivityType,  steC.ActivityRowId,\n \n1 AS Quantity,\nsteC.TestingNotes AS Notes,\nsteC.Rev,\nsteC.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, ssr.TimeStamp AS ReviewedTime \n\nFROM trackerDetails td\n\n\tLEFT JOIN (SELECT ss.PSAActivityID, ss.fk_SubmissionId, ss.ActivityRowId,\n\t\t\t\t ss.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework\n\t\t\tFROM SubsTesting ste\n            INNER JOIN `Job1111`.SubmissionStatus ss\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 43 AND ss.fk_ActivityStatus IN (5,12)\n\t\t\t) steC\n\t\tON steC.TestingTestPackageNumber = td.TestPackageNumber AND steC.ActivityType = 43 AND td.ECT != 'D'\n\n\tLEFT JOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = steC.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionID = steC.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp, ssr.fk_ActivityStatus\n\t\t\t\tFROM SubmissionStatusREV ssr\n                WHERE ssr.fk_ActivityStatus = 2\n                GROUP BY fk_PSAActivityID) ssr\n\t\tON ssr.fk_PSAActivityID = steC.PSAActivityID \nWHERE td.BidID = :BidID\nAND steC.PSAActivityID IS NOT NULL",
    "countQueryString" : "select count(*) from (SELECT ss.PSAActivityID, at.ActivityType, ss.ActivityRowId,\n \nCOALESCE((se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6),0) AS Quantity,\nse.ErectionNotes AS Notes,\nse.Rev,\nse.ErectionRework AS Rework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionStatusREV ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2\n\nINNER JOIN SubsErection se\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11\n\t\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_ActivityStatus IN (5,12)\n\nGROUP BY ss.PSAActivityID\n\n\nUNION ALL\n\n\nSELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,\n \nsb.BoltUpInstalled AS Quantity,\nsb.BoltUpNotes AS Notes,\nsb.Rev,\nsb.BoltUpRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionStatusREV ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2\n\nINNER JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled, sb.BoltUpNotes, sb.Rev, sb.BoltUpRework\n\t\t\tFROM SubsBoltUp sb) sb\n\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\n\t\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_ActivityStatus IN (5,12)\n\nGROUP BY ss.PSAActivityID\n\n\nUNION ALL\n\n\nSELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,\n \nsw.WeldInstalled AS Quantity,\nsw.WeldNotes AS Notes,\nsw.Rev,\nsw.WeldRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionStatusREV ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2\n\nINNER JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled, sw.WeldNotes, sw.Rev, sw.WeldRework\n\t\t\tFROM SubsWeld sw) sw\n\tON sw.ID = ss.ActivityRowId AND ss.ActivityType IN (22,23)\n\t\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_ActivityStatus IN (5,12)\n\nGROUP BY ss.PSAActivityID\n\n\nUNION ALL\n\n\nSELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,\n \nst.TrimInstalled AS Quantity,\nst.TrimNotes AS Notes,  \nst.Rev,\nst.TrimRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionStatusREV ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2\n\nINNER JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled, st.TrimNotes, st.Rev, st.TrimRework\n\t\t\tFROM SubsTrim st) st\n\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)\n\t\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_ActivityStatus IN (5,12)\n\nGROUP BY ss.PSAActivityID\n\n\nUNION ALL\n\n\nSELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,\n \nssu.SupportInstalled AS Quantity,\nssu.SupportNotes AS Notes,  \nssu.Rev,\nssu.SupportRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionStatusREV ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2\n\nINNER JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled, ssu.SupportNotes, ssu.Rev, ssu.SupportRework\n\t\t\tFROM SubsSupports ssu) ssu\n\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \n\t\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_ActivityStatus IN (5,12)\n\nGROUP BY ss.PSAActivityID\n\n\nUNION ALL\n\n\nSELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,\n \nd.DemoInstalled AS Quantity,\nd.DemoNotes AS Notes, \nd.Rev,\n'0',\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionStatusREV ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2\n\nINNER JOIN (SELECT d.ID, d.DemoQuantity AS DemoInstalled, d.DemoNotes, d.Rev\n\t\t\tFROM SubsDemo d) d\n\tON d.ID = ss.ActivityRowId AND ss.ActivityType IN (50,51,52,53,54,59)\n\t\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_ActivityStatus IN (5,12)\n\nGROUP BY ss.PSAActivityID\n\n\nUNION ALL\n\n\nSELECT ss.PSAActivityID, at.ActivityType,  ss.ActivityRowId,\n \nsm.MiscInstalled AS Quantity,\nsm.MiscNotes AS Notes,\nsm.Rev,\nsm.MiscRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(ssr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionStatusREV ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID AND ssr.fk_ActivityStatus = 2\n\nINNER JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled, sm.MiscNotes, sm.Rev, sm.MiscRework\n\t\t\tFROM SubsMisc sm) sm\n\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91\n\t\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_ActivityStatus IN (5,12)\n\nGROUP BY ss.PSAActivityID\n\n\nUNION ALL\n\n\nSELECT steR.PSAActivityID, at.ActivityType,  steR.ActivityRowId,\n \n1 AS Quantity,\nsteR.TestingNotes AS Notes,\nsteR.Rev,\nsteR.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, ssr.TimeStamp AS ReviewedTime \n\nFROM trackerDetails td\n\n\tLEFT JOIN (SELECT ss.PSAActivityID, ss.fk_SubmissionId, ss.ActivityRowId,\n\t\t\t\t ss.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework\n\t\t\tFROM SubsTesting ste\n            INNER JOIN SubmissionStatus ss\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 41 AND ss.fk_ActivityStatus IN (5,12)\n\t\t\t) steR\n\tON steR.TestingTestPackageNumber = td.TestPackageNumber AND steR.ActivityType = 41 AND td.ECT != 'D'\n\n\tLEFT JOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = steR.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionID = steR.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp, ssr.fk_ActivityStatus\n\t\t\t\tFROM SubmissionStatusREV ssr\n                WHERE ssr.fk_ActivityStatus = 2\n                GROUP BY fk_PSAActivityID) ssr\n\t\tON ssr.fk_PSAActivityID = steR.PSAActivityID \nWHERE td.BidID = :BidID\nAND steR.PSAActivityID IS NOT NULL\n\nUNION ALL\n\n\nSELECT steH.PSAActivityID, at.ActivityType,  steH.ActivityRowId,\n \n1 AS Quantity,\nsteH.TestingNotes AS Notes,\nsteH.Rev,\nsteH.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, ssr.TimeStamp AS ReviewedTime \n\nFROM trackerDetails td\n\n\tLEFT JOIN (SELECT ss.PSAActivityID, ss.fk_SubmissionId, ss.ActivityRowId, \n\t\t\t\t ss.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework\n\t\t\t\tFROM `Job1111`.SubsTesting ste\n\t\t\t\t\tINNER JOIN `Job1111`.SubmissionStatus ss\n\t\t\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 42 AND ss.fk_ActivityStatus IN (5,12) \n\t\t\t\t) steH\n\t\tON steH.TestingTestPackageNumber = td.TestPackageNumber AND steH.ActivityType = 42 AND td.ECT != 'D' \n\t\n    LEFT JOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = steH.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionID = steH.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\tLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp, ssr.fk_ActivityStatus\n\t\t\t\tFROM SubmissionStatusREV ssr\n                WHERE ssr.fk_ActivityStatus = 2\n                GROUP BY fk_PSAActivityID) ssr\n\t\tON ssr.fk_PSAActivityID = steH.PSAActivityID \n        \nWHERE td.BidID = :BidID\nAND steH.PSAActivityID IS NOT NULL\n\n\nUNION ALL\n\n\nSELECT steC.PSAActivityID, at.ActivityType,  steC.ActivityRowId,\n \n1 AS Quantity,\nsteC.TestingNotes AS Notes,\nsteC.Rev,\nsteC.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, ssr.TimeStamp AS ReviewedTime \n\nFROM trackerDetails td\n\n\tLEFT JOIN (SELECT ss.PSAActivityID, ss.fk_SubmissionId, ss.ActivityRowId,\n\t\t\t\t ss.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework\n\t\t\tFROM SubsTesting ste\n            INNER JOIN `Job1111`.SubmissionStatus ss\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 43 AND ss.fk_ActivityStatus IN (5,12)\n\t\t\t) steC\n\t\tON steC.TestingTestPackageNumber = td.TestPackageNumber AND steC.ActivityType = 43 AND td.ECT != 'D'\n\n\tLEFT JOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = steC.ActivityType\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionID = steC.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\n\tLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    LEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp, ssr.fk_ActivityStatus\n\t\t\t\tFROM SubmissionStatusREV ssr\n                WHERE ssr.fk_ActivityStatus = 2\n                GROUP BY fk_PSAActivityID) ssr\n\t\tON ssr.fk_PSAActivityID = steC.PSAActivityID \nWHERE td.BidID = :BidID\nAND steC.PSAActivityID IS NOT NULL) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistoryResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "PSAActivityID",
        "fieldName" : "psaactivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityRowId",
        "fieldName" : "activityRowId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "org.joda.time.LocalDateTime",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistoryCivil" : {
    "name" : "GetBidWorkHistoryCivil",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT ss.fk_SubmissionId, ss.PSAActivityID, at.ActivityType, ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\n\n### Quantities Installed ###\nsum(COALESCE(cfa.FAQuantity,0)) AS Quantity,\n\n((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * 100) AS PercentClaimed,\n\nCONCAT(IF(cfa.FANotes IS NOT NULL, cfa.FANotes, ''), IF(cfm.MiscNotes IS NOT NULL, cfm.MiscNotes, '')) AS Notes,\nIF(cfa.FARework = 1 OR cfm.MiscRework = 1, 1, 0) AS Rework\n\n\n\nFROM SubmissionStatus ss\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType IN (70,71,97)\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\n#### Assigned Activities Joins #####    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN CivilFA cfa\n\tON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71)\nLEFT JOIN CivilMisc cfm\n\tON cfm.ID = ss.ActivityRowId AND ss.ActivityType = 97\nLEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours\n\t\t\tFROM `CivilTrackerDetails`\n\t\t\tGROUP BY BidID) ctd\n\tON ctd.BidID = ss.fk_BidIDAssigned\n\nWHERE ss.fk_BidIDAssigned = :BidID        \nAND fk_ActivityStatus IN (5,12)\nAND ss.ActivityType IN (70,71,97)\n\nGROUP BY ss.PSAActivityID",
    "countQueryString" : "select count(*) from (SELECT ss.fk_SubmissionId, ss.PSAActivityID, at.ActivityType, ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\n\n### Quantities Installed ###\nsum(COALESCE(cfa.FAQuantity,0)) AS Quantity,\n\n((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * 100) AS PercentClaimed,\n\nCONCAT(IF(cfa.FANotes IS NOT NULL, cfa.FANotes, ''), IF(cfm.MiscNotes IS NOT NULL, cfm.MiscNotes, '')) AS Notes,\nIF(cfa.FARework = 1 OR cfm.MiscRework = 1, 1, 0) AS Rework\n\n\n\nFROM SubmissionStatus ss\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType IN (70,71,97)\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\n#### Assigned Activities Joins #####    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN CivilFA cfa\n\tON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71)\nLEFT JOIN CivilMisc cfm\n\tON cfm.ID = ss.ActivityRowId AND ss.ActivityType = 97\nLEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours\n\t\t\tFROM `CivilTrackerDetails`\n\t\t\tGROUP BY BidID) ctd\n\tON ctd.BidID = ss.fk_BidIDAssigned\n\nWHERE ss.fk_BidIDAssigned = :BidID        \nAND fk_ActivityStatus IN (5,12)\nAND ss.ActivityType IN (70,71,97)\n\nGROUP BY ss.PSAActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "694",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistoryCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityRowId",
        "fieldName" : "activityRowId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PSAActivityID",
        "fieldName" : "psaactivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "PercentClaimed",
        "fieldName" : "percentClaimed",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistoryEquip" : {
    "name" : "GetBidWorkHistoryEquip",
    "description" : "name",
    "version" : "V2",
    "queryString" : "SELECT ss.fk_SubmissionId, ss.PSAActivityID, at.ActivityType, ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\n\n### Quantities Installed ###\nsum(COALESCE(efa.FAQuantity,0)) AS Quantity,\n\n(COALESCE(efa.FAPercentComplete,0) * 100) AS PercentClaimed,\n\nIF(efa.FANotes IS NOT NULL, efa.FANotes, '') AS Notes,\n(efa.FARework = 1) AS Rework\n\n\n\nFROM SubmissionStatus ss\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 80\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\n#### Assigned Activities Joins #####    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN EquipFA efa\n\tON efa.ID = ss.ActivityRowId AND ss.ActivityType = 80\n\nLEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours\n\t\t\tFROM `EquipTrackerDetails`\n\t\t\tGROUP BY BidID) etd\n\tON etd.BidID = ss.fk_BidIDAssigned\n\nWHERE ss.fk_BidIDAssigned = :BidID        \nAND fk_ActivityStatus IN (5,12)\nAND ss.ActivityType = 80\n\nGROUP BY ss.PSAActivityID",
    "countQueryString" : "select count(*) from (SELECT ss.fk_SubmissionId, ss.PSAActivityID, at.ActivityType, ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\n\n### Quantities Installed ###\nsum(COALESCE(efa.FAQuantity,0)) AS Quantity,\n\n(COALESCE(efa.FAPercentComplete,0) * 100) AS PercentClaimed,\n\nIF(efa.FANotes IS NOT NULL, efa.FANotes, '') AS Notes,\n(efa.FARework = 1) AS Rework\n\n\n\nFROM SubmissionStatus ss\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 80\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\n#### Assigned Activities Joins #####    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN EquipFA efa\n\tON efa.ID = ss.ActivityRowId AND ss.ActivityType = 80\n\nLEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours\n\t\t\tFROM `EquipTrackerDetails`\n\t\t\tGROUP BY BidID) etd\n\tON etd.BidID = ss.fk_BidIDAssigned\n\nWHERE ss.fk_BidIDAssigned = :BidID        \nAND fk_ActivityStatus IN (5,12)\nAND ss.ActivityType = 80\n\nGROUP BY ss.PSAActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "28",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistoryEquipResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "PSAActivityID",
        "fieldName" : "psaactivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityRowId",
        "fieldName" : "activityRowId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "org.joda.time.LocalDateTime",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "PercentClaimed",
        "fieldName" : "percentClaimed",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistorySteel" : {
    "name" : "GetBidWorkHistorySteel",
    "description" : "Get all Field activities assigned to the given BidID, Grouped by Submission ID",
    "version" : "V1",
    "queryString" : "SELECT ss.fk_SubmissionId, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nsum(COALESCE(stls.FAShakeQuantity,0)) AS ShakeQuantity,\nsum(COALESCE(stle.FAErectQuantity,0)) AS ErectQuantity,\nsum(COALESCE(stle.FAErectPercent,0)) AS ErectPercent,\nsum(COALESCE(stlb.FABoltOutQuantity,0)) AS BoltoutQuantity,\nsum(COALESCE(stlb.FABoltOutPercent,0)) AS BoltoutPercent,\nsum(COALESCE(stli.FAImpQuantity,0)) AS ImpQuantity,\nsum(COALESCE(stli.FAImpPercent,0)) AS ImpPercent,\nsum(COALESCE(stlw.FAWeldQuantity,0)) AS WeldQuantity,\nsum(COALESCE(stlw.FAWeldPercent,0)) AS WeldPercent,\nsum(COALESCE(stlsell.FASellQuantity,0)) AS SellQuantity,\nsum(COALESCE(stld.DemoQuantity,0)) AS DemoQuantity,\nsum(COALESCE(stlm.MiscQuantity,0)) AS MiscQuantity\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType IN (61,62,63,64,65,67,68,96)\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\nLEFT JOIN SteelShake stls\n\tON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID \n    \nLEFT JOIN SteelErect stle\n\tON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID\n    \nLEFT JOIN SteelBoltOut stlb\n\tON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID\n    \nLEFT JOIN SteelImp stli\n\tON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID\n    \nLEFT JOIN SteelWeld stlw\n\tON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID\n    \nLEFT JOIN SteelSell stlsell\n\tON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID\n    \nLEFT JOIN SteelDemo stld\n\tON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID\n    \nLEFT JOIN SteelMisc stlm\n\tON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID\n\n\n\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.ActivityType IN (61,62,63,64,65,67,68,96)\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.fk_SubmissionId",
    "countQueryString" : "select count(*) from (SELECT ss.fk_SubmissionId, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nsum(COALESCE(stls.FAShakeQuantity,0)) AS ShakeQuantity,\nsum(COALESCE(stle.FAErectQuantity,0)) AS ErectQuantity,\nsum(COALESCE(stle.FAErectPercent,0)) AS ErectPercent,\nsum(COALESCE(stlb.FABoltOutQuantity,0)) AS BoltoutQuantity,\nsum(COALESCE(stlb.FABoltOutPercent,0)) AS BoltoutPercent,\nsum(COALESCE(stli.FAImpQuantity,0)) AS ImpQuantity,\nsum(COALESCE(stli.FAImpPercent,0)) AS ImpPercent,\nsum(COALESCE(stlw.FAWeldQuantity,0)) AS WeldQuantity,\nsum(COALESCE(stlw.FAWeldPercent,0)) AS WeldPercent,\nsum(COALESCE(stlsell.FASellQuantity,0)) AS SellQuantity,\nsum(COALESCE(stld.DemoQuantity,0)) AS DemoQuantity,\nsum(COALESCE(stlm.MiscQuantity,0)) AS MiscQuantity\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType IN (61,62,63,64,65,67,68,96)\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\nLEFT JOIN SteelShake stls\n\tON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID \n    \nLEFT JOIN SteelErect stle\n\tON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID\n    \nLEFT JOIN SteelBoltOut stlb\n\tON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID\n    \nLEFT JOIN SteelImp stli\n\tON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID\n    \nLEFT JOIN SteelWeld stlw\n\tON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID\n    \nLEFT JOIN SteelSell stlsell\n\tON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID\n    \nLEFT JOIN SteelDemo stld\n\tON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID\n    \nLEFT JOIN SteelMisc stlm\n\tON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID\n\n\n\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.ActivityType IN (61,62,63,64,65,67,68,96)\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.fk_SubmissionId) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "7431",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistorySteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "org.joda.time.LocalDateTime",
          "list" : false
        }
      }, {
        "name" : "ShakeQuantity",
        "fieldName" : "shakeQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ErectQuantity",
        "fieldName" : "erectQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ErectPercent",
        "fieldName" : "erectPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "BoltoutQuantity",
        "fieldName" : "boltoutQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "BoltoutPercent",
        "fieldName" : "boltoutPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ImpQuantity",
        "fieldName" : "impQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ImpPercent",
        "fieldName" : "impPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldQuantity",
        "fieldName" : "weldQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "WeldPercent",
        "fieldName" : "weldPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellQuantity",
        "fieldName" : "sellQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "DemoQuantity",
        "fieldName" : "demoQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "MiscQuantity",
        "fieldName" : "miscQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistorySteelExpanded" : {
    "name" : "GetBidWorkHistorySteelExpanded",
    "description" : "Gets the Bid Work History, with each Field activity having its own row.  Of the given SubID",
    "version" : "V1",
    "queryString" : "SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType AS ActivityTypeName,\nCOALESCE(stls.FAShakeQuantity,0) AS Quantity, \n'1' AS Percent,\nstls.FANotes AS Notes,\nstls.FARework AS Rework\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 61\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\nLEFT JOIN SteelShake stls\n\tON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID \n\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 61\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID\n\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID,  ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stle.FAErectQuantity,0) AS ErectQuantity,\nCOALESCE(stle.FAErectPercent,0) AS ErectPercent,\nstle.FANotes,\nstle.FARework\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 62\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\n\nLEFT JOIN SteelErect stle\n\tON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID\n\n\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 62\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlb.FABoltOutQuantity,0) AS BoltoutQuantity,\nCOALESCE(stlb.FABoltOutPercent,0) AS BoltoutPercent, \nstlb.FANotes,\nstlb.FARework\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 63\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\n\nLEFT JOIN SteelBoltOut stlb\n\tON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID\n \n\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 63\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID\n\n\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stli.FAImpQuantity,0) AS ImpQuantity,\nCOALESCE(stli.FAImpPercent,0) AS ImpPercent, \nstli.FANotes,\nstli.FARework\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType =64\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\nLEFT JOIN SteelImp stli\n\tON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID\n \n\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 64\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID,  ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlw.FAWeldQuantity,0) AS WeldQuantity,\nCOALESCE(stlw.FAWeldPercent,0) AS WeldPercent,\nstlw.FANotes,\nstlw.FARework\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 68\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\nLEFT JOIN SteelWeld stlw\n\tON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID\n \nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 68\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlsell.FASellQuantity,0) AS SellQuantity, \n'1' AS Percent, \nstlsell.FANotes,\nstlsell.FARework\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 65\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\n    \nLEFT JOIN SteelSell stlsell\n\tON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID\n \n\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 65\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stld.DemoQuantity,0) AS DemoQuantity, \n'1' AS Percent, \nstld.DemoNotes,\n0 AS Rework\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 67\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\n\nLEFT JOIN SteelDemo stld\n\tON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID\n \nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 67\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID,  ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlm.MiscQuantity,0) AS MiscQuantity, \n'1' AS Percent,\nstlm.MiscNotes,\nstlm.MiscRework\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 96\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\n\nLEFT JOIN SteelMisc stlm\n\tON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID\n    \nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 96\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID",
    "countQueryString" : "select count(*) from (SELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType AS ActivityTypeName,\nCOALESCE(stls.FAShakeQuantity,0) AS Quantity, \n'1' AS Percent,\nstls.FANotes AS Notes,\nstls.FARework AS Rework\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 61\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\nLEFT JOIN SteelShake stls\n\tON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID \n\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 61\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID\n\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID,  ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stle.FAErectQuantity,0) AS ErectQuantity,\nCOALESCE(stle.FAErectPercent,0) AS ErectPercent,\nstle.FANotes,\nstle.FARework\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 62\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\n\nLEFT JOIN SteelErect stle\n\tON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID\n\n\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 62\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID\n\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlb.FABoltOutQuantity,0) AS BoltoutQuantity,\nCOALESCE(stlb.FABoltOutPercent,0) AS BoltoutPercent, \nstlb.FANotes,\nstlb.FARework\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 63\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\n\nLEFT JOIN SteelBoltOut stlb\n\tON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID\n \n\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 63\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID\n\n\n\nUNION\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stli.FAImpQuantity,0) AS ImpQuantity,\nCOALESCE(stli.FAImpPercent,0) AS ImpPercent, \nstli.FANotes,\nstli.FARework\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType =64\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\nLEFT JOIN SteelImp stli\n\tON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID\n \n\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 64\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID,  ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlw.FAWeldQuantity,0) AS WeldQuantity,\nCOALESCE(stlw.FAWeldPercent,0) AS WeldPercent,\nstlw.FANotes,\nstlw.FARework\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 68\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\nLEFT JOIN SteelWeld stlw\n\tON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID\n \nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 68\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlsell.FASellQuantity,0) AS SellQuantity, \n'1' AS Percent, \nstlsell.FANotes,\nstlsell.FARework\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 65\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\n    \nLEFT JOIN SteelSell stlsell\n\tON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID\n \n\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 65\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID, ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stld.DemoQuantity,0) AS DemoQuantity, \n'1' AS Percent, \nstld.DemoNotes,\n0 AS Rework\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 67\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\n\nLEFT JOIN SteelDemo stld\n\tON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID\n \nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 67\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID\n\n\nUNION\n\n\n\nSELECT ss.fk_SubmissionId, ss.PSAActivityID,  ss.ActivityRowId,\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(ssr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlm.MiscQuantity,0) AS MiscQuantity, \n'1' AS Percent,\nstlm.MiscNotes,\nstlm.MiscRework\n\n\nFROM SubmissionStatus ss\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT ssr.fk_PSAActivityID, max(ssr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionStatusREV ssr\n            WHERE ssr.fk_ActivityStatus = 2\n            AND ssr.ActivityType = 96\n            GROUP BY ssr.fk_PSAActivityID) ssr\n\tON ssr.fk_PSAActivityID = ss.PSAActivityID \n\n\nLEFT JOIN SteelMisc stlm\n\tON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID\n    \nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.fk_SubmissionID = :SubID\nAND ss.ActivityType = 96\nAND ss.fk_ActivityStatus IN (5,12)\nGROUP BY ss.PSAActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "7431",
      "required" : false
    }, {
      "name" : "SubID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "455",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistorySteelExpandedResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityRowId",
        "fieldName" : "activityRowId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PSAActivityID",
        "fieldName" : "psaactivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Percent",
        "fieldName" : "percent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetCivilBidActivityQuantities" : {
    "name" : "GetCivilBidActivityQuantities",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT ctd.BidID,\nsum(ctd.TakeOffQuantity) AS TakeOffQuantity, ctd.QuantityUnit,\n\nsum(COALESCE(ctd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent'),0)) AS FAHours,\nsum(COALESCE(er.InstalledQuantity,0)) AS InstalledQuantity,\nsum(COALESCE(er.InstalledPercent,0)) AS InstalledPercent\n\nFROM (SELECT BidID, TakeOffQuantity, QuantityUnit, EstimatedHours FROM CivilTrackerDetails WHERE BidID = :BidID GROUP BY BidID) ctd\nLEFT JOIN(SELECT ctd.BidID,\nCOALESCE(\nIF(cfa.ActivityType = 70, \n/*TRUE*/((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cm.MiscPercentComplete,0)) * ctd.TakeOffQuantity),\n/*FALSE*/cfa.FAQuantity)\n,0) AS InstalledQuantity,\n(COALESCE(cfa.FAPercentComplete,0) + COALESCE(cm.MiscPercentComplete,0)) AS InstalledPercent\n\nFROM SubmissionStatus ss \nLEFT JOIN CivilTrackerDetails ctd\n    ON ctd.BidID = ss.fk_BidIDAssigned\nLEFT JOIN CivilFA cfa\n\tON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71) AND cfa.FARework = 0\nLEFT JOIN CivilMisc cm\n\tON cm.ID = ss.ActivityRowId AND ss.ActivityType = 97 AND cm.MiscRework = 0\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.ActivityType IN (70,71,77,97)\nAND ss.fk_ActivityStatus IN(5,12)\n) er\n\tON er.BidID = ctd.BidID\nGROUP BY ctd.BidID",
    "countQueryString" : "select count(*) from (SELECT ctd.BidID,\nsum(ctd.TakeOffQuantity) AS TakeOffQuantity, ctd.QuantityUnit,\n\nsum(COALESCE(ctd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent'),0)) AS FAHours,\nsum(COALESCE(er.InstalledQuantity,0)) AS InstalledQuantity,\nsum(COALESCE(er.InstalledPercent,0)) AS InstalledPercent\n\nFROM (SELECT BidID, TakeOffQuantity, QuantityUnit, EstimatedHours FROM CivilTrackerDetails WHERE BidID = :BidID GROUP BY BidID) ctd\nLEFT JOIN(SELECT ctd.BidID,\nCOALESCE(\nIF(cfa.ActivityType = 70, \n/*TRUE*/((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cm.MiscPercentComplete,0)) * ctd.TakeOffQuantity),\n/*FALSE*/cfa.FAQuantity)\n,0) AS InstalledQuantity,\n(COALESCE(cfa.FAPercentComplete,0) + COALESCE(cm.MiscPercentComplete,0)) AS InstalledPercent\n\nFROM SubmissionStatus ss \nLEFT JOIN CivilTrackerDetails ctd\n    ON ctd.BidID = ss.fk_BidIDAssigned\nLEFT JOIN CivilFA cfa\n\tON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71) AND cfa.FARework = 0\nLEFT JOIN CivilMisc cm\n\tON cm.ID = ss.ActivityRowId AND ss.ActivityType = 97 AND cm.MiscRework = 0\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.ActivityType IN (70,71,77,97)\nAND ss.fk_ActivityStatus IN(5,12)\n) er\n\tON er.BidID = ctd.BidID\nGROUP BY ctd.BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1513",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetCivilBidActivityQuantitiesResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAHours",
        "fieldName" : "fahours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledQuantity",
        "fieldName" : "installedQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledPercent",
        "fieldName" : "installedPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetDrawingByTestPackageCivil" : {
    "name" : "GetDrawingByTestPackageCivil",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT DISTINCT ctd.EngDrawingNumber, ctd.DetailDrawingNumber, ctd.FoundationDescription\nFROM CivilTrackerDetails ctd\nWHERE ctd.TestPackageNumber = :TestPackage\nORDER BY ctd.EngDrawingNumber, ctd.DetailDrawingNumber",
    "countQueryString" : "select count(*) from (SELECT DISTINCT ctd.EngDrawingNumber, ctd.DetailDrawingNumber, ctd.FoundationDescription\nFROM CivilTrackerDetails ctd\nWHERE ctd.TestPackageNumber = :TestPackage\nORDER BY ctd.EngDrawingNumber, ctd.DetailDrawingNumber) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "0",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetDrawingByTestPackageCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "DetailDrawingNumber",
        "fieldName" : "detailDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FoundationDescription",
        "fieldName" : "foundationDescription",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetDrawingByTestPackageSteel" : {
    "name" : "GetDrawingByTestPackageSteel",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT DISTINCT std.Area, std.PieceMark, std.Description\nFROM SteelTrackerDetails std\nWHERE std.TestPackageNumber = :TestPackage\nORDER BY std.Area, std.PieceMark",
    "countQueryString" : "select count(*) from (SELECT DISTINCT std.Area, std.PieceMark, std.Description\nFROM SteelTrackerDetails std\nWHERE std.TestPackageNumber = :TestPackage\nORDER BY std.Area, std.PieceMark) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetDrawingByTestPackageSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMark",
        "fieldName" : "pieceMark",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetDrawingsByTestPackage" : {
    "name" : "GetDrawingsByTestPackage",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT DISTINCT td.EngDrawingNumber, td.SheetNumber, td.LineNumber\nFROM trackerDetails td\nWHERE td.TestPackageNumber = :TestPackage\nORDER BY td.EngDrawingNumber, td.SheetNumber",
    "countQueryString" : "select count(*) from (SELECT DISTINCT td.EngDrawingNumber, td.SheetNumber, td.LineNumber\nFROM trackerDetails td\nWHERE td.TestPackageNumber = :TestPackage\nORDER BY td.EngDrawingNumber, td.SheetNumber) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetDrawingsByTestPackageResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "LineNumber",
        "fieldName" : "lineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      } ]
    }
  },
  "GetEarnedHoursReport" : {
    "name" : "GetEarnedHoursReport",
    "description" : "Get Hours earned total.  Over the last 1,7,14, & 21 days",
    "version" : "V1",
    "queryString" : "SELECT 21d.UserName, COALESCE(1d.EarnedHours, 0) AS 1dEarnedHours, COALESCE(7d.EarnedHours, 0) AS 7dEarnedHours, COALESCE(14d.EarnedHours, 0) AS 14dEarnedHours, COALESCE(21d.EarnedHours, 0) AS 21dEarnedHours\r\nFROM (\r\nSELECT u.ID, CONCAT(u.Firstname, ' ', u.Lastname) AS UserName,  \r\nsum(\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +\r\n(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +\r\nCOALESCE(stR.EarnedReadyForTestingHours,0) +\r\nCOALESCE(stH.EarnedHydroHours,0) +\r\nCOALESCE(stC.EarnedClientTurnoverHours,0)\r\n) AS EarnedHours \r\nFROM SubmissionStatus ss\r\n\r\n\tLEFT JOIN SubsDetails sd\r\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\r\n\tleft JOIN PSA.tblCrews tc\r\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblCrewsRev tcr\r\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblUserPSA u\r\n\t\tON u.ID = tc.Foreman OR u.ID = tcr.Foreman\r\n\t\t\r\n    \tLEFT JOIN SubsErection se\r\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0\r\n\t\r\n    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled\r\n\t\t\t\tFROM SubsBoltUp sb \r\n                WHERE sb.BoltUpRework = 0) sb\r\n\t\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0) sw\r\n\t\tON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0\r\n                GROUP BY sw.ID) scut\r\n\t\tON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23\r\n        \r\n    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled\r\n\t\t\t\tFROM SubsTrim st\r\n                WHERE st.TrimRework = 0) st\r\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  \r\n        \r\n\tLEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled\r\n\t\t\t\tFROM SubsSupports ssu\r\n                WHERE ssu.SupportRework = 0) ssu\r\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \r\n\t\r\n    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled\r\n\t\t\t\tFROM SubsDemo sd) sd\r\n\t\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) \r\n\r\n\r\n\r\n\t\r\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\r\n\t\t\t\tFROM `trackerDetails`\r\n\t\t\t\tGROUP BY BidID)td\r\n\t\tON td.BidID = ss.fk_BidIDAssigned\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sm\r\n\t\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'\r\n        \r\n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sme\r\n\t\tON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'\r\n       \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smb\r\n\t\tON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'\r\n\t\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smw\r\n\t\tON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'\r\n\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smc\r\n\t\tON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smt\r\n\t\tON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smssu\r\n\t\tON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smd\r\n\t\tON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stR\r\n\t\t\t\t\t\tON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stR.TestingTestPackageNumber\r\n\t\t\t\tWHERE stR.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stR\r\n        ON stR.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stH\r\n\t\t\t\t\t\tON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stH.TestingTestPackageNumber\r\n\t\t\t\tWHERE stH.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stH\r\n        ON stH.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stC\r\n\t\t\t\t\t\tON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stC.TestingTestPackageNumber\r\n\t\t\t\tWHERE stC.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stC\r\n        ON stC.PSAActivityID = ss.PSAActivityID\r\n        \r\nWHERE ss.fk_ActivityStatus IN (5,12)\r\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\r\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\r\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\r\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)\r\nAND sd.ReceivedTime < :Date \r\n+ INTERVAL 1 day\r\nAND sd.ReceivedTime >= :Date - INTERVAL 20 DAY\r\nGROUP BY u.ID\r\n) 21d\r\n\r\nLEFT JOIN (\r\nSELECT u.ID,  \r\nsum(\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +\r\n(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +\r\nCOALESCE(stR.EarnedReadyForTestingHours,0) +\r\nCOALESCE(stH.EarnedHydroHours,0) +\r\nCOALESCE(stC.EarnedClientTurnoverHours,0)\r\n) AS EarnedHours \r\nFROM SubmissionStatus ss\r\n\r\n\tLEFT JOIN SubsDetails sd\r\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\r\n\tleft JOIN PSA.tblCrews tc\r\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblCrewsRev tcr\r\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblUserPSA u\r\n\t\tON u.ID = tc.Foreman OR u.ID = tcr.Foreman\r\n\t\r\n    \tLEFT JOIN SubsErection se\r\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0\r\n\t\r\n    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled\r\n\t\t\t\tFROM SubsBoltUp sb \r\n                WHERE sb.BoltUpRework = 0) sb\r\n\t\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0) sw\r\n\t\tON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0\r\n                GROUP BY sw.ID) scut\r\n\t\tON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23\r\n        \r\n    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled\r\n\t\t\t\tFROM SubsTrim st\r\n                WHERE st.TrimRework = 0) st\r\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  \r\n        \r\n\tLEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled\r\n\t\t\t\tFROM SubsSupports ssu\r\n                WHERE ssu.SupportRework = 0) ssu\r\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \r\n\t\r\n    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled\r\n\t\t\t\tFROM SubsDemo sd) sd\r\n\t\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) \r\n\r\n\r\n\r\n\t\r\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\r\n\t\t\t\tFROM `trackerDetails`\r\n\t\t\t\tGROUP BY BidID)td\r\n\t\tON td.BidID = ss.fk_BidIDAssigned\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sm\r\n\t\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'\r\n        \r\n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sme\r\n\t\tON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'\r\n       \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smb\r\n\t\tON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'\r\n\t\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smw\r\n\t\tON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'\r\n\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smc\r\n\t\tON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smt\r\n\t\tON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smssu\r\n\t\tON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smd\r\n\t\tON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stR\r\n\t\t\t\t\t\tON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stR.TestingTestPackageNumber\r\n\t\t\t\tWHERE stR.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stR\r\n        ON stR.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stH\r\n\t\t\t\t\t\tON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stH.TestingTestPackageNumber\r\n\t\t\t\tWHERE stH.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stH\r\n        ON stH.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stC\r\n\t\t\t\t\t\tON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stC.TestingTestPackageNumber\r\n\t\t\t\tWHERE stC.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stC\r\n        ON stC.PSAActivityID = ss.PSAActivityID\r\n        \r\nWHERE ss.fk_ActivityStatus IN (5,12)\r\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\r\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\r\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\r\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)\r\nAND sd.ReceivedTime < :Date + INTERVAL 1 day\r\nAND sd.ReceivedTime >= :Date - INTERVAL 6 DAY\r\nGROUP BY u.ID\r\n) 7d\r\nON 7d.ID = 21d.ID\r\n\r\nLEFT JOIN (\r\nSELECT u.ID,  \r\nsum(\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +\r\n(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +\r\nCOALESCE(stR.EarnedReadyForTestingHours,0) +\r\nCOALESCE(stH.EarnedHydroHours,0) +\r\nCOALESCE(stC.EarnedClientTurnoverHours,0)\r\n) AS EarnedHours \r\nFROM SubmissionStatus ss\r\n\r\n\tLEFT JOIN SubsDetails sd\r\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\r\n\tleft JOIN PSA.tblCrews tc\r\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblCrewsRev tcr\r\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblUserPSA u\r\n\t\tON u.ID = tc.Foreman OR u.ID = tcr.Foreman\r\n\t\r\n    \tLEFT JOIN SubsErection se\r\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0\r\n\t\r\n    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled\r\n\t\t\t\tFROM SubsBoltUp sb \r\n                WHERE sb.BoltUpRework = 0) sb\r\n\t\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0) sw\r\n\t\tON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0\r\n                GROUP BY sw.ID) scut\r\n\t\tON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23\r\n        \r\n    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled\r\n\t\t\t\tFROM SubsTrim st\r\n                WHERE st.TrimRework = 0) st\r\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  \r\n        \r\n\tLEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled\r\n\t\t\t\tFROM SubsSupports ssu\r\n                WHERE ssu.SupportRework = 0) ssu\r\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \r\n\t\r\n    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled\r\n\t\t\t\tFROM SubsDemo sd) sd\r\n\t\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) \r\n\r\n\r\n\r\n\t\r\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\r\n\t\t\t\tFROM `trackerDetails`\r\n\t\t\t\tGROUP BY BidID)td\r\n\t\tON td.BidID = ss.fk_BidIDAssigned\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sm\r\n\t\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'\r\n        \r\n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sme\r\n\t\tON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'\r\n       \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smb\r\n\t\tON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'\r\n\t\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smw\r\n\t\tON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'\r\n\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smc\r\n\t\tON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smt\r\n\t\tON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smssu\r\n\t\tON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smd\r\n\t\tON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stR\r\n\t\t\t\t\t\tON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stR.TestingTestPackageNumber\r\n\t\t\t\tWHERE stR.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stR\r\n        ON stR.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stH\r\n\t\t\t\t\t\tON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stH.TestingTestPackageNumber\r\n\t\t\t\tWHERE stH.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stH\r\n        ON stH.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stC\r\n\t\t\t\t\t\tON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stC.TestingTestPackageNumber\r\n\t\t\t\tWHERE stC.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stC\r\n        ON stC.PSAActivityID = ss.PSAActivityID\r\n        \r\nWHERE ss.fk_ActivityStatus IN (5,12)\r\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\r\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\r\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\r\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)\r\nAND sd.ReceivedTime < :Date + INTERVAL 1 day\r\nAND sd.ReceivedTime >= :Date - INTERVAL 13 DAY\r\nGROUP BY u.ID\r\n) 14d\r\nON 14d.ID = 21d.ID\r\n\r\nLEFT JOIN (\r\nSELECT u.ID,  \r\nsum(\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +\r\n(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +\r\nCOALESCE(stR.EarnedReadyForTestingHours,0) +\r\nCOALESCE(stH.EarnedHydroHours,0) +\r\nCOALESCE(stC.EarnedClientTurnoverHours,0)\r\n) AS EarnedHours \r\nFROM SubmissionStatus ss\r\n\r\n\tLEFT JOIN SubsDetails sd\r\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\r\n\tleft JOIN PSA.tblCrews tc\r\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblCrewsRev tcr\r\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblUserPSA u\r\n\t\tON u.ID = tc.Foreman OR u.ID = tcr.Foreman\r\n\t\r\n    \tLEFT JOIN SubsErection se\r\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0\r\n\t\r\n    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled\r\n\t\t\t\tFROM SubsBoltUp sb \r\n                WHERE sb.BoltUpRework = 0) sb\r\n\t\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0) sw\r\n\t\tON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0\r\n                GROUP BY sw.ID) scut\r\n\t\tON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23\r\n        \r\n    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled\r\n\t\t\t\tFROM SubsTrim st\r\n                WHERE st.TrimRework = 0) st\r\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  \r\n        \r\n\tLEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled\r\n\t\t\t\tFROM SubsSupports ssu\r\n                WHERE ssu.SupportRework = 0) ssu\r\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \r\n\t\r\n    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled\r\n\t\t\t\tFROM SubsDemo sd) sd\r\n\t\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) \r\n\r\n\r\n\r\n\t\r\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\r\n\t\t\t\tFROM `trackerDetails`\r\n\t\t\t\tGROUP BY BidID)td\r\n\t\tON td.BidID = ss.fk_BidIDAssigned\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sm\r\n\t\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'\r\n        \r\n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sme\r\n\t\tON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'\r\n       \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smb\r\n\t\tON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'\r\n\t\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smw\r\n\t\tON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'\r\n\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smc\r\n\t\tON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smt\r\n\t\tON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smssu\r\n\t\tON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smd\r\n\t\tON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stR\r\n\t\t\t\t\t\tON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stR.TestingTestPackageNumber\r\n\t\t\t\tWHERE stR.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stR\r\n        ON stR.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stH\r\n\t\t\t\t\t\tON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stH.TestingTestPackageNumber\r\n\t\t\t\tWHERE stH.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stH\r\n        ON stH.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stC\r\n\t\t\t\t\t\tON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stC.TestingTestPackageNumber\r\n\t\t\t\tWHERE stC.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stC\r\n        ON stC.PSAActivityID = ss.PSAActivityID\r\n        \r\nWHERE ss.fk_ActivityStatus IN (5,12)\r\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\r\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\r\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\r\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)\r\nAND sd.ReceivedTime < :Date + INTERVAL 1 day\r\nAND sd.ReceivedTime >= :Date\r\nGROUP BY u.ID\r\n) 1d\r\nON 1d.ID = 21d.ID",
    "countQueryString" : "select count(*) from (SELECT 21d.UserName, COALESCE(1d.EarnedHours, 0) AS 1dEarnedHours, COALESCE(7d.EarnedHours, 0) AS 7dEarnedHours, COALESCE(14d.EarnedHours, 0) AS 14dEarnedHours, COALESCE(21d.EarnedHours, 0) AS 21dEarnedHours\r\nFROM (\r\nSELECT u.ID, CONCAT(u.Firstname, ' ', u.Lastname) AS UserName,  \r\nsum(\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +\r\n(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +\r\nCOALESCE(stR.EarnedReadyForTestingHours,0) +\r\nCOALESCE(stH.EarnedHydroHours,0) +\r\nCOALESCE(stC.EarnedClientTurnoverHours,0)\r\n) AS EarnedHours \r\nFROM SubmissionStatus ss\r\n\r\n\tLEFT JOIN SubsDetails sd\r\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\r\n\tleft JOIN PSA.tblCrews tc\r\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblCrewsRev tcr\r\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblUserPSA u\r\n\t\tON u.ID = tc.Foreman OR u.ID = tcr.Foreman\r\n\t\t\r\n    \tLEFT JOIN SubsErection se\r\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0\r\n\t\r\n    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled\r\n\t\t\t\tFROM SubsBoltUp sb \r\n                WHERE sb.BoltUpRework = 0) sb\r\n\t\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0) sw\r\n\t\tON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0\r\n                GROUP BY sw.ID) scut\r\n\t\tON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23\r\n        \r\n    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled\r\n\t\t\t\tFROM SubsTrim st\r\n                WHERE st.TrimRework = 0) st\r\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  \r\n        \r\n\tLEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled\r\n\t\t\t\tFROM SubsSupports ssu\r\n                WHERE ssu.SupportRework = 0) ssu\r\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \r\n\t\r\n    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled\r\n\t\t\t\tFROM SubsDemo sd) sd\r\n\t\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) \r\n\r\n\r\n\r\n\t\r\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\r\n\t\t\t\tFROM `trackerDetails`\r\n\t\t\t\tGROUP BY BidID)td\r\n\t\tON td.BidID = ss.fk_BidIDAssigned\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sm\r\n\t\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'\r\n        \r\n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sme\r\n\t\tON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'\r\n       \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smb\r\n\t\tON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'\r\n\t\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smw\r\n\t\tON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'\r\n\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smc\r\n\t\tON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smt\r\n\t\tON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smssu\r\n\t\tON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smd\r\n\t\tON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stR\r\n\t\t\t\t\t\tON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stR.TestingTestPackageNumber\r\n\t\t\t\tWHERE stR.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stR\r\n        ON stR.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stH\r\n\t\t\t\t\t\tON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stH.TestingTestPackageNumber\r\n\t\t\t\tWHERE stH.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stH\r\n        ON stH.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stC\r\n\t\t\t\t\t\tON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stC.TestingTestPackageNumber\r\n\t\t\t\tWHERE stC.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stC\r\n        ON stC.PSAActivityID = ss.PSAActivityID\r\n        \r\nWHERE ss.fk_ActivityStatus IN (5,12)\r\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\r\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\r\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\r\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)\r\nAND sd.ReceivedTime < :Date \r\n+ INTERVAL 1 day\r\nAND sd.ReceivedTime >= :Date - INTERVAL 20 DAY\r\nGROUP BY u.ID\r\n) 21d\r\n\r\nLEFT JOIN (\r\nSELECT u.ID,  \r\nsum(\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +\r\n(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +\r\nCOALESCE(stR.EarnedReadyForTestingHours,0) +\r\nCOALESCE(stH.EarnedHydroHours,0) +\r\nCOALESCE(stC.EarnedClientTurnoverHours,0)\r\n) AS EarnedHours \r\nFROM SubmissionStatus ss\r\n\r\n\tLEFT JOIN SubsDetails sd\r\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\r\n\tleft JOIN PSA.tblCrews tc\r\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblCrewsRev tcr\r\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblUserPSA u\r\n\t\tON u.ID = tc.Foreman OR u.ID = tcr.Foreman\r\n\t\r\n    \tLEFT JOIN SubsErection se\r\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0\r\n\t\r\n    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled\r\n\t\t\t\tFROM SubsBoltUp sb \r\n                WHERE sb.BoltUpRework = 0) sb\r\n\t\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0) sw\r\n\t\tON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0\r\n                GROUP BY sw.ID) scut\r\n\t\tON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23\r\n        \r\n    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled\r\n\t\t\t\tFROM SubsTrim st\r\n                WHERE st.TrimRework = 0) st\r\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  \r\n        \r\n\tLEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled\r\n\t\t\t\tFROM SubsSupports ssu\r\n                WHERE ssu.SupportRework = 0) ssu\r\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \r\n\t\r\n    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled\r\n\t\t\t\tFROM SubsDemo sd) sd\r\n\t\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) \r\n\r\n\r\n\r\n\t\r\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\r\n\t\t\t\tFROM `trackerDetails`\r\n\t\t\t\tGROUP BY BidID)td\r\n\t\tON td.BidID = ss.fk_BidIDAssigned\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sm\r\n\t\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'\r\n        \r\n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sme\r\n\t\tON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'\r\n       \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smb\r\n\t\tON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'\r\n\t\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smw\r\n\t\tON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'\r\n\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smc\r\n\t\tON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smt\r\n\t\tON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smssu\r\n\t\tON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smd\r\n\t\tON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stR\r\n\t\t\t\t\t\tON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stR.TestingTestPackageNumber\r\n\t\t\t\tWHERE stR.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stR\r\n        ON stR.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stH\r\n\t\t\t\t\t\tON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stH.TestingTestPackageNumber\r\n\t\t\t\tWHERE stH.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stH\r\n        ON stH.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stC\r\n\t\t\t\t\t\tON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stC.TestingTestPackageNumber\r\n\t\t\t\tWHERE stC.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stC\r\n        ON stC.PSAActivityID = ss.PSAActivityID\r\n        \r\nWHERE ss.fk_ActivityStatus IN (5,12)\r\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\r\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\r\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\r\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)\r\nAND sd.ReceivedTime < :Date + INTERVAL 1 day\r\nAND sd.ReceivedTime >= :Date - INTERVAL 6 DAY\r\nGROUP BY u.ID\r\n) 7d\r\nON 7d.ID = 21d.ID\r\n\r\nLEFT JOIN (\r\nSELECT u.ID,  \r\nsum(\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +\r\n(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +\r\nCOALESCE(stR.EarnedReadyForTestingHours,0) +\r\nCOALESCE(stH.EarnedHydroHours,0) +\r\nCOALESCE(stC.EarnedClientTurnoverHours,0)\r\n) AS EarnedHours \r\nFROM SubmissionStatus ss\r\n\r\n\tLEFT JOIN SubsDetails sd\r\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\r\n\tleft JOIN PSA.tblCrews tc\r\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblCrewsRev tcr\r\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblUserPSA u\r\n\t\tON u.ID = tc.Foreman OR u.ID = tcr.Foreman\r\n\t\r\n    \tLEFT JOIN SubsErection se\r\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0\r\n\t\r\n    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled\r\n\t\t\t\tFROM SubsBoltUp sb \r\n                WHERE sb.BoltUpRework = 0) sb\r\n\t\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0) sw\r\n\t\tON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0\r\n                GROUP BY sw.ID) scut\r\n\t\tON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23\r\n        \r\n    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled\r\n\t\t\t\tFROM SubsTrim st\r\n                WHERE st.TrimRework = 0) st\r\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  \r\n        \r\n\tLEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled\r\n\t\t\t\tFROM SubsSupports ssu\r\n                WHERE ssu.SupportRework = 0) ssu\r\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \r\n\t\r\n    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled\r\n\t\t\t\tFROM SubsDemo sd) sd\r\n\t\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) \r\n\r\n\r\n\r\n\t\r\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\r\n\t\t\t\tFROM `trackerDetails`\r\n\t\t\t\tGROUP BY BidID)td\r\n\t\tON td.BidID = ss.fk_BidIDAssigned\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sm\r\n\t\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'\r\n        \r\n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sme\r\n\t\tON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'\r\n       \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smb\r\n\t\tON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'\r\n\t\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smw\r\n\t\tON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'\r\n\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smc\r\n\t\tON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smt\r\n\t\tON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smssu\r\n\t\tON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smd\r\n\t\tON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stR\r\n\t\t\t\t\t\tON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stR.TestingTestPackageNumber\r\n\t\t\t\tWHERE stR.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stR\r\n        ON stR.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stH\r\n\t\t\t\t\t\tON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stH.TestingTestPackageNumber\r\n\t\t\t\tWHERE stH.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stH\r\n        ON stH.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stC\r\n\t\t\t\t\t\tON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stC.TestingTestPackageNumber\r\n\t\t\t\tWHERE stC.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stC\r\n        ON stC.PSAActivityID = ss.PSAActivityID\r\n        \r\nWHERE ss.fk_ActivityStatus IN (5,12)\r\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\r\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\r\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\r\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)\r\nAND sd.ReceivedTime < :Date + INTERVAL 1 day\r\nAND sd.ReceivedTime >= :Date - INTERVAL 13 DAY\r\nGROUP BY u.ID\r\n) 14d\r\nON 14d.ID = 21d.ID\r\n\r\nLEFT JOIN (\r\nSELECT u.ID,  \r\nsum(\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6)),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sb.BoltUpInstalled), 0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sw.WeldInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*scut.CutInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*st.TrimInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*ssu.SupportInstalled),0)) +\r\n(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*sm.MiscInstalled),0)) +\r\n(COALESCE((td.EstimatedHours/td.TakeOffQuantity*sd.DemoInstalled),0)) +\r\nCOALESCE(stR.EarnedReadyForTestingHours,0) +\r\nCOALESCE(stH.EarnedHydroHours,0) +\r\nCOALESCE(stC.EarnedClientTurnoverHours,0)\r\n) AS EarnedHours \r\nFROM SubmissionStatus ss\r\n\r\n\tLEFT JOIN SubsDetails sd\r\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\r\n\tleft JOIN PSA.tblCrews tc\r\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblCrewsRev tcr\r\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\r\n\tleft JOIN PSA.tblUserPSA u\r\n\t\tON u.ID = tc.Foreman OR u.ID = tcr.Foreman\r\n\t\r\n    \tLEFT JOIN SubsErection se\r\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0\r\n\t\r\n    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled\r\n\t\t\t\tFROM SubsBoltUp sb \r\n                WHERE sb.BoltUpRework = 0) sb\r\n\t\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0) sw\r\n\t\tON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE(sum((sw.WeldPercentCompleted * .01)),0) AS CutInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0\r\n                GROUP BY sw.ID) scut\r\n\t\tON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23\r\n        \r\n    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled\r\n\t\t\t\tFROM SubsTrim st\r\n                WHERE st.TrimRework = 0) st\r\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  \r\n        \r\n\tLEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled\r\n\t\t\t\tFROM SubsSupports ssu\r\n                WHERE ssu.SupportRework = 0) ssu\r\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \r\n\t\r\n    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled\r\n\t\t\t\tFROM SubsDemo sd) sd\r\n\t\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) \r\n\r\n\r\n\r\n\t\r\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\r\n\t\t\t\tFROM `trackerDetails`\r\n\t\t\t\tGROUP BY BidID)td\r\n\t\tON td.BidID = ss.fk_BidIDAssigned\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sm\r\n\t\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'\r\n        \r\n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sme\r\n\t\tON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'\r\n       \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smb\r\n\t\tON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'\r\n\t\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smw\r\n\t\tON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'\r\n\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smc\r\n\t\tON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smt\r\n\t\tON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smssu\r\n\t\tON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smd\r\n\t\tON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') , 0)) AS EarnedReadyForTestingHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stR\r\n\t\t\t\t\t\tON stR.ID = ss.ActivityRowId AND ss.ActivityType = 41\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stR.TestingTestPackageNumber\r\n\t\t\t\tWHERE stR.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stR\r\n        ON stR.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') , 0)) AS EarnedHydroHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stH\r\n\t\t\t\t\t\tON stH.ID = ss.ActivityRowId AND ss.ActivityType = 42\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stH.TestingTestPackageNumber\r\n\t\t\t\tWHERE stH.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stH\r\n        ON stH.PSAActivityID = ss.PSAActivityID\r\n        \r\n\tLEFT JOIN (SELECT ss.PSAActivityID, \r\n\t\t\t\t\tsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')\r\n\t\t\t\t\t\t*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') , 0)) AS EarnedClientTurnoverHours\r\n\t\t\t\tFROM SubmissionStatus ss\r\n\t\t\t\t\tLEFT JOIN SubsTesting stC\r\n\t\t\t\t\t\tON stC.ID = ss.ActivityRowId AND ss.ActivityType = 43\r\n\t\t\t\t\tLEFT JOIN trackerDetails td\r\n\t\t\t\t\t\tON td.TestPackageNumber = stC.TestingTestPackageNumber\r\n\t\t\t\tWHERE stC.TestingRework = 0\r\n\t\t\t\tGROUP BY ss.PSAActivityID) stC\r\n        ON stC.PSAActivityID = ss.PSAActivityID\r\n        \r\nWHERE ss.fk_ActivityStatus IN (5,12)\r\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\r\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\r\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\r\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)\r\nAND sd.ReceivedTime < :Date + INTERVAL 1 day\r\nAND sd.ReceivedTime >= :Date\r\nGROUP BY u.ID\r\n) 1d\r\nON 1d.ID = 21d.ID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ForemanID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "SuperID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ManagerID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "Date",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2016-07-15",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetEarnedHoursReportResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "14dEarnedHours",
        "fieldName" : "_14dEarnedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "1dEarnedHours",
        "fieldName" : "_1dEarnedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "21dEarnedHours",
        "fieldName" : "_21dEarnedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "7dEarnedHours",
        "fieldName" : "_7dEarnedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "UserName",
        "fieldName" : "userName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetEquipBidActivityQuantites" : {
    "name" : "GetEquipBidActivityQuantites",
    "description" : "name",
    "version" : "V2",
    "queryString" : "SELECT etd.BidID,\nsum(etd.TakeOffQuantity) AS TakeOffQuantity, etd.QuantityUnit,\n\nsum(COALESCE(etd.EstimatedHours,0)) AS FAHours,\nsum(COALESCE(er.InstalledPercent,0)) AS InstalledPercent\n\nFROM (SELECT BidID, TakeOffQuantity, QuantityUnit, EstimatedHours FROM EquipTrackerDetails WHERE BidID = :BidID GROUP BY BidID) etd\nLEFT JOIN(SELECT etd.BidID,\nCOALESCE(efa.FAPercentComplete,0) AS InstalledPercent\n\nFROM SubmissionStatus ss \nLEFT JOIN EquipTrackerDetails etd\n    ON etd.BidID = ss.fk_BidIDAssigned\nLEFT JOIN EquipFA efa\n\tON efa.ID = ss.ActivityRowId AND ss.ActivityType = 80 AND efa.FARework = 0\n\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.ActivityType = 80\nAND ss.fk_ActivityStatus IN(5,12)\n) er\n\tON er.BidID = etd.BidID\nGROUP BY etd.BidID",
    "countQueryString" : "select count(*) from (SELECT etd.BidID,\nsum(etd.TakeOffQuantity) AS TakeOffQuantity, etd.QuantityUnit,\n\nsum(COALESCE(etd.EstimatedHours,0)) AS FAHours,\nsum(COALESCE(er.InstalledPercent,0)) AS InstalledPercent\n\nFROM (SELECT BidID, TakeOffQuantity, QuantityUnit, EstimatedHours FROM EquipTrackerDetails WHERE BidID = :BidID GROUP BY BidID) etd\nLEFT JOIN(SELECT etd.BidID,\nCOALESCE(efa.FAPercentComplete,0) AS InstalledPercent\n\nFROM SubmissionStatus ss \nLEFT JOIN EquipTrackerDetails etd\n    ON etd.BidID = ss.fk_BidIDAssigned\nLEFT JOIN EquipFA efa\n\tON efa.ID = ss.ActivityRowId AND ss.ActivityType = 80 AND efa.FARework = 0\n\nWHERE ss.fk_BidIDAssigned = :BidID\nAND ss.ActivityType = 80\nAND ss.fk_ActivityStatus IN(5,12)\n) er\n\tON er.BidID = etd.BidID\nGROUP BY etd.BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetEquipBidActivityQuantitesResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAHours",
        "fieldName" : "fahours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledPercent",
        "fieldName" : "installedPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetErectionTotal" : {
    "name" : "GetErectionTotal",
    "description" : "Gets the Total footage of a given Erection Activity",
    "version" : "V1",
    "queryString" : "SELECT e.ErectionLengthSpool1 + e.ErectionLengthSpool2 + e.ErectionLengthSpool3 + e.ErectionLengthSpool4 + e.ErectionLengthSpool5 + e.ErectionLengthSpool6 AS Total\nFROM SubsErection e\nWHERE ID = :ActivityId",
    "countQueryString" : "select count(*) from (SELECT e.ErectionLengthSpool1 + e.ErectionLengthSpool2 + e.ErectionLengthSpool3 + e.ErectionLengthSpool4 + e.ErectionLengthSpool5 + e.ErectionLengthSpool6 AS Total\nFROM SubsErection e\nWHERE ID = :ActivityId) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityId",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetErectionTotalResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      } ]
    }
  },
  "GetNoteCount" : {
    "name" : "GetNoteCount",
    "description" : "Gets the number of notes BY PSAActivityID",
    "version" : "V1",
    "queryString" : "SELECT count(ssn.ID) AS NoteCount\nFROM SSNotes ssn\nWHERE ssn.fk_PSAActivityID = :PSAActivityID",
    "countQueryString" : "select count(*) from (SELECT count(ssn.ID) AS NoteCount\nFROM SSNotes ssn\nWHERE ssn.fk_PSAActivityID = :PSAActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "PSAActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "20",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetNoteCountResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "NoteCount",
        "fieldName" : "noteCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      } ]
    }
  },
  "GetNotesByPSAActivityID" : {
    "name" : "GetNotesByPSAActivityID",
    "description" : "Gets all notes tied to a specified ID",
    "version" : "V1",
    "queryString" : "SELECT ssn.Notes, ssn.TimeStamp, u.Email\nFROM SSNotes ssn\n\tJOIN PSA.tblUserPSA u\n\t\tON u.ID = ssn.fk_uid\nWHERE ssn.fk_PSAActivityID = :ActivityID",
    "countQueryString" : "select count(*) from (SELECT ssn.Notes, ssn.TimeStamp, u.Email\nFROM SSNotes ssn\n\tJOIN PSA.tblUserPSA u\n\t\tON u.ID = ssn.fk_uid\nWHERE ssn.fk_PSAActivityID = :ActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "28",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetNotesByPsaactivityIdResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "Email",
        "fieldName" : "email",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetPSAActivityByUid" : {
    "name" : "GetPSAActivityByUid",
    "description" : "Get all activities pending Supervisor review BY SuperID",
    "version" : "V1",
    "queryString" : "SELECT ss.*, at.ActivityType AS ActivityTypeName, sd.ReceivedTime, sd.UserFirstName, sd.UserLastName, CONCAT(sd.UserFirstName, \" \", sd.UserLastName) AS NameFull, ats.Status,\nIF(ss.ActivityType IN (10,11,20,21,22,23,30,31,32,33,34,35,39,40,41,42,43,50,51,52,53,54,59,90,91,92,93),'PIPE',\nIF(ss.ActivityType IN (60,61,62,63,64,65,66,67,68,96),'STEEL',\nIF(ss.ActivityType IN (70,71,72,77,97),'CIVIL',\nIF(ss.ActivityType IN (80,81,82,83,84,85,98),'EQUIP.',''\n)))) AS Craft\nFROM SubmissionStatus ss\n\tleft JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tJOIN PSA.REF_ActivityTypes at\n\t\tON  at.ID = ss.ActivityType\n\tJOIN PSA.REF_ActivityStatuses ats\n\t    ON ats.ID = ss.fk_ActivityStatus\nWHERE ss.ActivityType != 0\nAND ss.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\nORDER BY ss.PSAActivityID DESC",
    "countQueryString" : "select count(*) from (SELECT ss.*, at.ActivityType AS ActivityTypeName, sd.ReceivedTime, sd.UserFirstName, sd.UserLastName, CONCAT(sd.UserFirstName, \" \", sd.UserLastName) AS NameFull, ats.Status,\nIF(ss.ActivityType IN (10,11,20,21,22,23,30,31,32,33,34,35,39,40,41,42,43,50,51,52,53,54,59,90,91,92,93),'PIPE',\nIF(ss.ActivityType IN (60,61,62,63,64,65,66,67,68,96),'STEEL',\nIF(ss.ActivityType IN (70,71,72,77,97),'CIVIL',\nIF(ss.ActivityType IN (80,81,82,83,84,85,98),'EQUIP.',''\n)))) AS Craft\nFROM SubmissionStatus ss\n\tleft JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tJOIN PSA.REF_ActivityTypes at\n\t\tON  at.ID = ss.ActivityType\n\tJOIN PSA.REF_ActivityStatuses ats\n\t    ON ats.ID = ss.fk_ActivityStatus\nWHERE ss.ActivityType != 0\nAND ss.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\nORDER BY ss.PSAActivityID DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "SuperID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "47",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetPsaactivityByUidResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityRowId",
        "fieldName" : "activityRowId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Craft",
        "fieldName" : "craft",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "LockField",
        "fieldName" : "lockField",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "NameFull",
        "fieldName" : "nameFull",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PSAActivityID",
        "fieldName" : "psaactivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "UserFirstName",
        "fieldName" : "userFirstName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "UserLastName",
        "fieldName" : "userLastName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "fk_ActivityStatus",
        "fieldName" : "fkActivityStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "fk_BidIDAssigned",
        "fieldName" : "fkBidIdassigned",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "fk_LastModifiedBy",
        "fieldName" : "fkLastModifiedBy",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "fk_SubmissionId",
        "fieldName" : "fkSubmissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetPSAActivityByUidCount" : {
    "name" : "GetPSAActivityByUidCount",
    "description" : "Gets the number of activities pending supervisor approval",
    "version" : "V1",
    "queryString" : "SELECT count(*) AS Count\nFROM SubmissionStatus ss\n\tleft JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tleft JOIN PSA.tblUserPSA u\n\t\tON u.ID = tc.Superintendent OR u.ID = tcr.Superintendent \nWHERE ss.ActivityType != 0\nAND ss.fk_ActivityStatus in (1,4,6,8,10)\nAND u.ID = :SuperID",
    "countQueryString" : "select count(*) from (SELECT count(*) AS Count\nFROM SubmissionStatus ss\n\tleft JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tleft JOIN PSA.tblUserPSA u\n\t\tON u.ID = tc.Superintendent OR u.ID = tcr.Superintendent \nWHERE ss.ActivityType != 0\nAND ss.fk_ActivityStatus in (1,4,6,8,10)\nAND u.ID = :SuperID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "SuperID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "47",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetPsaactivityByUidCountResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Count",
        "fieldName" : "_count",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      } ]
    }
  },
  "GetPSRecentActivities" : {
    "name" : "GetPSRecentActivities",
    "description" : "Gets the recent activities modified by a given user in PS review",
    "version" : "V1",
    "queryString" : "SELECT ss.PSAActivityID, at.ActivityType, ats.Status, ss.TimeStamp\nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\ton at.ID = ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats \n\ton ats.ID = ss.fk_ActivityStatus\n\nWHERE ss.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW()\nAND ss.fk_ActivityStatus IN (5,6,13)\nAND ss.fk_LastModifiedBy = :UserID\nORDER BY ss.TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT ss.PSAActivityID, at.ActivityType, ats.Status, ss.TimeStamp\nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\ton at.ID = ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats \n\ton ats.ID = ss.fk_ActivityStatus\n\nWHERE ss.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW()\nAND ss.fk_ActivityStatus IN (5,6,13)\nAND ss.fk_LastModifiedBy = :UserID\nORDER BY ss.TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "UserID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetPsrecentActivitiesResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PSAActivityID",
        "fieldName" : "psaactivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantitiesTestPackage" : {
    "name" : "GetQuantitiesTestPackage",
    "description" : "Get testing quantities",
    "version" : "V1",
    "queryString" : "SELECT td.TestPackageNumber, \r\n\r\ncount(td.BidID) AS ItemsTotal, \r\n\r\nTRUNCATE(sum(ste.ReadyForTestingHours),6) AS ReadyForTestingHours,\r\nTRUNCATE(sum(ste.HydroHours),6) AS HydroHours,\r\nTRUNCATE(sum(ste.ClientTurnoverHours),6) AS ClientTurnoverHours,\r\n\r\nSUM(ert.ReadyForTestingInstalled) AS ReadyForTestingInstalled, \r\nSUM(ert.HydroInstalled) AS HydroInstalled, \r\nSUM(ert.ClientTurnoverInstalled) AS ClientTurnoverInstalled,\r\n\r\nTRUNCATE(sum(ert.EarnedReadyForTestingHours),6) AS EarnedReadyForTestingHours, \r\nTRUNCATE(sum(ert.EarnedHydroHours),6) AS EarnedHydroHours, \r\nTRUNCATE(sum(ert.EarnedClientTurnoverHours),6) AS EarnedClientTurnoverHours,\r\n\r\nTRUNCATE(sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity *(td.TakeOffQuantity \r\n- (COALESCE(er.InstalledFootage,0) \r\n  + COALESCE(er.InstalledBoltUps,0)\r\n  + COALESCE(er.InstalledWelds,0)\r\n  + COALESCE(er.InstalledCuts,0)\r\n  + COALESCE(er.InstalledTrim,0)\r\n  + COALESCE(er.InstalledSupports,0)\r\n  + COALESCE(er.InstalledMisc,0)\r\n  + COALESCE(er.InstalledDemo,0))))),6) AS LooseHours\r\n\r\nFROM trackerDetails td\r\n\r\n\tLEFT JOIN (SELECT min(td.ID) AS ID,\r\n    \r\nIF( sum(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0)) \r\n\t> td.TakeOffQuantity, /*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0))),0))\r\n    ) AS EarnedErectionHours,\r\n\r\nIF(sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0))\r\n\t> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0))), 0))\r\n    ) AS EarnedBoltUpHours,\r\n\r\nIF(sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))\r\n\t> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))),0))\r\n    ) AS EarnedWeldHours,\r\n\r\nIF(sum(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0))\r\n\t> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0))),0))\r\n    ) AS EarnedCutHours,\r\n    \r\nIF(sum(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0))\r\n\t> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0))),0))\r\n    ) AS EarnedTrimHours,\r\n    \r\nIF(sum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0))\r\n\t> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0))),0))\r\n    ) AS EarnedSupportHours,\r\n    \r\nIF(sum(COALESCE(IF(td.PipingActivityType = 'MISC' AND td.ECT != 'D', sm.MiscInstalled,0),0))\r\n\t> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*COALESCE(IF(td.PipingActivityType = 'MISC' AND td.ECT != 'D', sm.MiscInstalled,0),0)),0))\r\n    ) AS EarnedMiscHours,\r\n    \r\nIF(sum(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0))\r\n\t> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours,\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours/td.TakeOffQuantity*(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0))),0))\r\n    ) AS EarnedDemoHours,\r\n    \r\n\r\nsum(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0)) AS InstalledFootage,\r\nsum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) AS InstalledBoltUps, \r\nsum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0)) AS InstalledWelds,\r\nsum(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0)) AS InstalledCuts,\r\n(sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) + sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))) AS InstalledBasicConnections, \r\nsum(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0)) AS InstalledTrim,\r\nsum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0)) AS InstalledSupports,\r\nsum(COALESCE(sm.MiscInstalled,0)) AS InstalledMisc,\r\nsum(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0)) AS InstalledDemo,\r\n\r\n(sum(COALESCE(st.TrimInstalled,0)) + sum(COALESCE(sm.MiscInstalled,0)) + sum(COALESCE(ssu.SupportInstalled,0))) AS InstalledBasicTrim\r\n\r\nFROM SubmissionStatus ss\r\n\tJOIN PSA.REF_ActivityTypes at\r\n\t\tON at.ID = ss.ActivityType\r\n        \r\n\tLEFT JOIN SubsErection se\r\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0\r\n\t\r\n    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled\r\n\t\t\t\tFROM SubsBoltUp sb \r\n                WHERE sb.BoltUpRework = 0) sb\r\n\t\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0) sw\r\n\t\tON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS CutInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0) scut\r\n\t\tON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23\r\n        \r\n    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled\r\n\t\t\t\tFROM SubsTrim st\r\n                WHERE st.TrimRework = 0) st\r\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  \r\n        \r\n\tLEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled\r\n\t\t\t\tFROM SubsSupports ssu\r\n                WHERE ssu.SupportRework = 0) ssu\r\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \r\n\t\r\n    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled\r\n\t\t\t\tFROM SubsDemo sd) sd\r\n\t\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) \r\n\r\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\r\n\t\t\t\tFROM`trackerDetails`\r\n\t\t\t\tGROUP BY BidID)td\r\n\t\tON td.BidID = ss.fk_BidIDAssigned\r\n        \r\n\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sm\r\n\t\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'  AND td.ECT != 'D'\r\n        \r\n\t\r\n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sme\r\n\t\tON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'\r\n       \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smb\r\n\t\tON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'\r\n\t\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smw\r\n\t\tON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'\r\n\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smc\r\n\t\tON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smt\r\n\t\tON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType IN ('V','Plug','HpLp','Other','Blind')\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smssu\r\n\t\tON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smd\r\n\t\tON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'\r\n        \r\n\r\n        \r\nWHERE fk_ActivityStatus IN (5,12)\r\nGROUP BY td.BidID) er\r\n\t\tON er.ID = td.ID\r\n\r\nLEFT JOIN (SELECT min(td.ID) AS ID,\r\nsum(COALESCE(steR.InstalledReadyForTesting, 0)) AS ReadyForTestingInstalled,\r\nsum(COALESCE(steH.InstalledHydro, 0)) AS HydroInstalled,\r\nsum(COALESCE(steC.InstalledClientTurnover, 0)) AS ClientTurnoverInstalled,\r\n\r\nsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * steR.InstalledReadyForTesting, 0)) AS EarnedReadyForTestingHours,\r\nsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') * steH.InstalledHydro, 0)) AS EarnedHydroHours,\r\nsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') * steC.InstalledClientTurnover, 0)) AS EarnedClientTurnoverHours\r\n\r\nFROM trackerDetails td\r\n\r\nLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledReadyForTesting\r\n\t\t\tFROM SubsTesting ste\r\n            INNER JOIN SubmissionStatus ss\r\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 41 AND ss.fk_ActivityStatus IN (5,12)) steR\r\n\tON steR.TestingTestPackageNumber = td.TestPackageNumber AND steR.ActivityType = 41 AND td.ECT != 'D'\r\n    \r\nLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledHydro\r\n\t\t\tFROM SubsTesting ste\r\n            INNER JOIN SubmissionStatus ss\r\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 42 AND ss.fk_ActivityStatus IN (5,12)) steH\r\n\tON steH.TestingTestPackageNumber = td.TestPackageNumber AND steH.ActivityType = 42 AND td.ECT != 'D'\r\n    \r\nLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledClientTurnover\r\n\t\t\tFROM SubsTesting ste\r\n            INNER JOIN SubmissionStatus ss\r\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 43 AND ss.fk_ActivityStatus IN (5,12)) steC\r\n\tON steC.TestingTestPackageNumber = td.TestPackageNumber AND steC.ActivityType = 43 AND td.ECT != 'D'\r\n\r\nGROUP BY td.BidID) ert\r\n\tON ert.ID = td.ID\r\n    \r\nLEFT JOIN (SELECT td.ID,\r\n\t\t\tCOALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent'),0) AS TestingHours,\r\n            COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent')),0) AS ReadyForTestingHours,\r\n            COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent')),0) AS HydroHours,\r\n            COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent')),0) AS ClientTurnoverHours\r\n\t\t\tFROM `trackerDetails` td\r\n\t\t\tWHERE td.ECT != 'D') ste\r\n\tON ste.ID = td.ID\r\n  \r\n    \r\nWHERE TestPackageNumber = :TestPackage\r\nGROUP BY TestPackageNumber",
    "countQueryString" : "select count(*) from (SELECT td.TestPackageNumber, \r\n\r\ncount(td.BidID) AS ItemsTotal, \r\n\r\nTRUNCATE(sum(ste.ReadyForTestingHours),6) AS ReadyForTestingHours,\r\nTRUNCATE(sum(ste.HydroHours),6) AS HydroHours,\r\nTRUNCATE(sum(ste.ClientTurnoverHours),6) AS ClientTurnoverHours,\r\n\r\nSUM(ert.ReadyForTestingInstalled) AS ReadyForTestingInstalled, \r\nSUM(ert.HydroInstalled) AS HydroInstalled, \r\nSUM(ert.ClientTurnoverInstalled) AS ClientTurnoverInstalled,\r\n\r\nTRUNCATE(sum(ert.EarnedReadyForTestingHours),6) AS EarnedReadyForTestingHours, \r\nTRUNCATE(sum(ert.EarnedHydroHours),6) AS EarnedHydroHours, \r\nTRUNCATE(sum(ert.EarnedClientTurnoverHours),6) AS EarnedClientTurnoverHours,\r\n\r\nTRUNCATE(sum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity *(td.TakeOffQuantity \r\n- (COALESCE(er.InstalledFootage,0) \r\n  + COALESCE(er.InstalledBoltUps,0)\r\n  + COALESCE(er.InstalledWelds,0)\r\n  + COALESCE(er.InstalledCuts,0)\r\n  + COALESCE(er.InstalledTrim,0)\r\n  + COALESCE(er.InstalledSupports,0)\r\n  + COALESCE(er.InstalledMisc,0)\r\n  + COALESCE(er.InstalledDemo,0))))),6) AS LooseHours\r\n\r\nFROM trackerDetails td\r\n\r\n\tLEFT JOIN (SELECT min(td.ID) AS ID,\r\n    \r\nIF( sum(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0)) \r\n\t> td.TakeOffQuantity, /*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0))),0))\r\n    ) AS EarnedErectionHours,\r\n\r\nIF(sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0))\r\n\t> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0))), 0))\r\n    ) AS EarnedBoltUpHours,\r\n\r\nIF(sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))\r\n\t> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))),0))\r\n    ) AS EarnedWeldHours,\r\n\r\nIF(sum(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0))\r\n\t> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0))),0))\r\n    ) AS EarnedCutHours,\r\n    \r\nIF(sum(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0))\r\n\t> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0))),0))\r\n    ) AS EarnedTrimHours,\r\n    \r\nIF(sum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0))\r\n\t> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0))),0))\r\n    ) AS EarnedSupportHours,\r\n    \r\nIF(sum(COALESCE(IF(td.PipingActivityType = 'MISC' AND td.ECT != 'D', sm.MiscInstalled,0),0))\r\n\t> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/td.TakeOffQuantity*COALESCE(IF(td.PipingActivityType = 'MISC' AND td.ECT != 'D', sm.MiscInstalled,0),0)),0))\r\n    ) AS EarnedMiscHours,\r\n    \r\nIF(sum(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0))\r\n\t> td.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\r\n    /*TRUE*/ td.EstimatedHours,\r\n    /*FALSE*/ sum(COALESCE((td.EstimatedHours/td.TakeOffQuantity*(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0))),0))\r\n    ) AS EarnedDemoHours,\r\n    \r\n\r\nsum(COALESCE(se.ErectionLengthSpool1,0) + COALESCE(se.ErectionLengthSpool2,0) + COALESCE(se.ErectionLengthSpool3,0) + COALESCE(se.ErectionLengthSpool4,0) + COALESCE(se.ErectionLengthSpool5,0) + COALESCE(se.ErectionLengthSpool6,0) + COALESCE(sme.MiscErectionInstalled,0)) AS InstalledFootage,\r\nsum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) AS InstalledBoltUps, \r\nsum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0)) AS InstalledWelds,\r\nsum(COALESCE(scut.CutInstalled,0) + COALESCE(smc.MiscCutInstalled,0)) AS InstalledCuts,\r\n(sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) + sum(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0))) AS InstalledBasicConnections, \r\nsum(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0)) AS InstalledTrim,\r\nsum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0)) AS InstalledSupports,\r\nsum(COALESCE(sm.MiscInstalled,0)) AS InstalledMisc,\r\nsum(COALESCE(sd.DemoInstalled,0) + COALESCE(smd.MiscDemoInstalled,0)) AS InstalledDemo,\r\n\r\n(sum(COALESCE(st.TrimInstalled,0)) + sum(COALESCE(sm.MiscInstalled,0)) + sum(COALESCE(ssu.SupportInstalled,0))) AS InstalledBasicTrim\r\n\r\nFROM SubmissionStatus ss\r\n\tJOIN PSA.REF_ActivityTypes at\r\n\t\tON at.ID = ss.ActivityType\r\n        \r\n\tLEFT JOIN SubsErection se\r\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0\r\n\t\r\n    LEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled\r\n\t\t\t\tFROM SubsBoltUp sb \r\n                WHERE sb.BoltUpRework = 0) sb\r\n\t\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0) sw\r\n\t\tON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\r\n        \r\n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS CutInstalled\r\n\t\t\t\tFROM SubsWeld sw \r\n                WHERE sw.WeldRework = 0) scut\r\n\t\tON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23\r\n        \r\n    LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled\r\n\t\t\t\tFROM SubsTrim st\r\n                WHERE st.TrimRework = 0) st\r\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)  \r\n        \r\n\tLEFT JOIN (SELECT ssu.ID, IF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)) AS SupportInstalled\r\n\t\t\t\tFROM SubsSupports ssu\r\n                WHERE ssu.SupportRework = 0) ssu\r\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \r\n\t\r\n    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled\r\n\t\t\t\tFROM SubsDemo sd) sd\r\n\t\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) \r\n\r\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\r\n\t\t\t\tFROM`trackerDetails`\r\n\t\t\t\tGROUP BY BidID)td\r\n\t\tON td.BidID = ss.fk_BidIDAssigned\r\n        \r\n\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sm\r\n\t\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'MISC'  AND td.ECT != 'D'\r\n        \r\n\t\r\n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) sme\r\n\t\tON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'\r\n       \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smb\r\n\t\tON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'\r\n\t\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smw\r\n\t\tON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'\r\n\t\r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smc\r\n\t\tON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smt\r\n\t\tON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType IN ('V','Plug','HpLp','Other','Blind')\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smssu\r\n\t\tON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'\r\n        \r\n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled\r\n\t\t\t\tFROM SubsMisc sm\r\n                WHERE sm.MiscRework = 0) smd\r\n\t\tON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'\r\n        \r\n\r\n        \r\nWHERE fk_ActivityStatus IN (5,12)\r\nGROUP BY td.BidID) er\r\n\t\tON er.ID = td.ID\r\n\r\nLEFT JOIN (SELECT min(td.ID) AS ID,\r\nsum(COALESCE(steR.InstalledReadyForTesting, 0)) AS ReadyForTestingInstalled,\r\nsum(COALESCE(steH.InstalledHydro, 0)) AS HydroInstalled,\r\nsum(COALESCE(steC.InstalledClientTurnover, 0)) AS ClientTurnoverInstalled,\r\n\r\nsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * steR.InstalledReadyForTesting, 0)) AS EarnedReadyForTestingHours,\r\nsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') * steH.InstalledHydro, 0)) AS EarnedHydroHours,\r\nsum(COALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') * steC.InstalledClientTurnover, 0)) AS EarnedClientTurnoverHours\r\n\r\nFROM trackerDetails td\r\n\r\nLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledReadyForTesting\r\n\t\t\tFROM SubsTesting ste\r\n            INNER JOIN SubmissionStatus ss\r\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 41 AND ss.fk_ActivityStatus IN (5,12)) steR\r\n\tON steR.TestingTestPackageNumber = td.TestPackageNumber AND steR.ActivityType = 41 AND td.ECT != 'D'\r\n    \r\nLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledHydro\r\n\t\t\tFROM SubsTesting ste\r\n            INNER JOIN SubmissionStatus ss\r\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 42 AND ss.fk_ActivityStatus IN (5,12)) steH\r\n\tON steH.TestingTestPackageNumber = td.TestPackageNumber AND steH.ActivityType = 42 AND td.ECT != 'D'\r\n    \r\nLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledClientTurnover\r\n\t\t\tFROM SubsTesting ste\r\n            INNER JOIN SubmissionStatus ss\r\n\t\t\t\tON ss.ActivityRowId = ste.ID AND ss.ActivityType = 43 AND ss.fk_ActivityStatus IN (5,12)) steC\r\n\tON steC.TestingTestPackageNumber = td.TestPackageNumber AND steC.ActivityType = 43 AND td.ECT != 'D'\r\n\r\nGROUP BY td.BidID) ert\r\n\tON ert.ID = td.ID\r\n    \r\nLEFT JOIN (SELECT td.ID,\r\n\t\t\tCOALESCE(td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent'),0) AS TestingHours,\r\n            COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent')),0) AS ReadyForTestingHours,\r\n            COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent')),0) AS HydroHours,\r\n            COALESCE((td.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent')),0) AS ClientTurnoverHours\r\n\t\t\tFROM `trackerDetails` td\r\n\t\t\tWHERE td.ECT != 'D') ste\r\n\tON ste.ID = td.ID\r\n  \r\n    \r\nWHERE TestPackageNumber = :TestPackage\r\nGROUP BY TestPackageNumber) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantitiesTestPackageResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ClientTurnoverHours",
        "fieldName" : "clientTurnoverHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ClientTurnoverInstalled",
        "fieldName" : "clientTurnoverInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedClientTurnoverHours",
        "fieldName" : "earnedClientTurnoverHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedHydroHours",
        "fieldName" : "earnedHydroHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedReadyForTestingHours",
        "fieldName" : "earnedReadyForTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HydroHours",
        "fieldName" : "hydroHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HydroInstalled",
        "fieldName" : "hydroInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ItemsTotal",
        "fieldName" : "itemsTotal",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "LooseHours",
        "fieldName" : "looseHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ReadyForTestingHours",
        "fieldName" : "readyForTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ReadyForTestingInstalled",
        "fieldName" : "readyForTestingInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantitiesTestPackageCivil" : {
    "name" : "GetQuantitiesTestPackageCivil",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT ctd.BidID, ctd.TestPackageNumber, \n\n#### Count ####\ncount(ctd.BidID) AS SellPunchCount,\n\n#### Hours ####\nsum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,\n\n#### Installed Count ####\nsum(COALESCE(ers.InstalledSellPunch,0)) AS SellPunchInstalled,\n\n#### Earned Hours ####\nsum(IF(ers.InstalledSellPunch = 1, \n/*TRUE*/\n(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')),\n/*FALSE*/\n0\n)) AS EarnedSellPunchHours,\n\n#### Loose Hours ####\nsum(\n(COALESCE(ctd.EstimatedHours,0) * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent') / COALESCE(ctd.TakeOffQuantity,0)) \n*\n(COALESCE(ctd.TakeOffQuantity,0) - COALESCE(EarnedFAHours,0))\n) AS LooseHours\n\nFROM CivilTrackerDetails ctd\n\nLEFT JOIN (SELECT min(ctd.UID) AS UID,\n### Hours Earned ###\nIF(sum(COALESCE(IF(ss.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), COALESCE(cfa.FAQuantity,0)),0)) /*Nested IF convertes % to Quantity*/\n\t> ctd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ctd.EstimatedHours*', CivilHoursPercent, ',\n    /*FALSE*/ sum(COALESCE((ctd.EstimatedHours*', CivilHoursPercent, '/ctd.TakeOffQuantity*(COALESCE(IF(ss.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), cfa.FAQuantity),0))), 0))\n    ) AS EarnedFAHours\n\n### SS Joins ###\nFROM SubmissionStatus ss\n\tJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN CivilFA cfa\n\t\tON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71) AND cfa.FARework = 0\n\n\tLEFT JOIN CivilMisc cfm\n\t\tON cfm.ID = ss.ActivityRowId AND ss.ActivityType = 97 AND cfm.MiscRework = 0\n \n    LEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours\n\t\t\t\tFROM`CivilTrackerDetails`\n\t\t\t\tGROUP BY BidID) ctd\n\t\tON ctd.BidID = ss.fk_BidIDAssigned\n        \nWHERE fk_ActivityStatus IN (5,12)\nAND ss.ActivityType IN (70,71,97)\nGROUP BY ctd.BidID) er\n\t\tON er.UID = ctd.UID\n\n\n ##### Earned Sell HOURS #####       \nLEFT JOIN (SELECT min(ctd.UID) AS UID, cs.InstalledSellPunch\n\t\t\tFROM CivilTrackerDetails ctd\n\t\t\tLEFT JOIN (SELECT ss.ActivityType, cs.SellTestPackageNumber, 1 AS InstalledSellPunch\n\t\t\t\t\t\tFROM CivilSellPackage cs \n\t\t\t\t\t\tINNER JOIN SubmissionStatus ss\n\t\t\t\t\t\t\tON ss.ActivityRowId = cs.ID AND ss.ActivityType = 72 AND ss.fk_ActivityStatus IN (5,12)) cs\n\tON cs.SellTestPackageNumber = ctd.TestPackageNumber AND ctd.ActivityType != \"Demo\"\nGROUP BY ctd.BidID) ers\n\tOn ers.UID = ctd.UID\n\nWHERE ctd.TestPackageNumber = :TestPackage",
    "countQueryString" : "select count(*) from (SELECT ctd.BidID, ctd.TestPackageNumber, \n\n#### Count ####\ncount(ctd.BidID) AS SellPunchCount,\n\n#### Hours ####\nsum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,\n\n#### Installed Count ####\nsum(COALESCE(ers.InstalledSellPunch,0)) AS SellPunchInstalled,\n\n#### Earned Hours ####\nsum(IF(ers.InstalledSellPunch = 1, \n/*TRUE*/\n(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')),\n/*FALSE*/\n0\n)) AS EarnedSellPunchHours,\n\n#### Loose Hours ####\nsum(\n(COALESCE(ctd.EstimatedHours,0) * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent') / COALESCE(ctd.TakeOffQuantity,0)) \n*\n(COALESCE(ctd.TakeOffQuantity,0) - COALESCE(EarnedFAHours,0))\n) AS LooseHours\n\nFROM CivilTrackerDetails ctd\n\nLEFT JOIN (SELECT min(ctd.UID) AS UID,\n### Hours Earned ###\nIF(sum(COALESCE(IF(ss.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), COALESCE(cfa.FAQuantity,0)),0)) /*Nested IF convertes % to Quantity*/\n\t> ctd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ctd.EstimatedHours*', CivilHoursPercent, ',\n    /*FALSE*/ sum(COALESCE((ctd.EstimatedHours*', CivilHoursPercent, '/ctd.TakeOffQuantity*(COALESCE(IF(ss.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), cfa.FAQuantity),0))), 0))\n    ) AS EarnedFAHours\n\n### SS Joins ###\nFROM SubmissionStatus ss\n\tJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN CivilFA cfa\n\t\tON cfa.ID = ss.ActivityRowId AND ss.ActivityType IN (70,71) AND cfa.FARework = 0\n\n\tLEFT JOIN CivilMisc cfm\n\t\tON cfm.ID = ss.ActivityRowId AND ss.ActivityType = 97 AND cfm.MiscRework = 0\n \n    LEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours\n\t\t\t\tFROM`CivilTrackerDetails`\n\t\t\t\tGROUP BY BidID) ctd\n\t\tON ctd.BidID = ss.fk_BidIDAssigned\n        \nWHERE fk_ActivityStatus IN (5,12)\nAND ss.ActivityType IN (70,71,97)\nGROUP BY ctd.BidID) er\n\t\tON er.UID = ctd.UID\n\n\n ##### Earned Sell HOURS #####       \nLEFT JOIN (SELECT min(ctd.UID) AS UID, cs.InstalledSellPunch\n\t\t\tFROM CivilTrackerDetails ctd\n\t\t\tLEFT JOIN (SELECT ss.ActivityType, cs.SellTestPackageNumber, 1 AS InstalledSellPunch\n\t\t\t\t\t\tFROM CivilSellPackage cs \n\t\t\t\t\t\tINNER JOIN SubmissionStatus ss\n\t\t\t\t\t\t\tON ss.ActivityRowId = cs.ID AND ss.ActivityType = 72 AND ss.fk_ActivityStatus IN (5,12)) cs\n\tON cs.SellTestPackageNumber = ctd.TestPackageNumber AND ctd.ActivityType != \"Demo\"\nGROUP BY ctd.BidID) ers\n\tOn ers.UID = ctd.UID\n\nWHERE ctd.TestPackageNumber = :TestPackage) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantitiesTestPackageCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedSellPunchHours",
        "fieldName" : "earnedSellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "LooseHours",
        "fieldName" : "looseHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "SellPunchCount",
        "fieldName" : "sellPunchCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "SellPunchHours",
        "fieldName" : "sellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellPunchInstalled",
        "fieldName" : "sellPunchInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantitiesTestPackageSteel" : {
    "name" : "GetQuantitiesTestPackageSteel",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "SELECT std.BidID, std.TestPackageNumber,\n\n### Count ####\nsum(std.TakeOffQuantity) AS SellPunchCount,\n\n### Hours ####\nsum(std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')) AS SellPunchHours,\n\n### Installed Count ###\nsum(COALESCE(er.InstalledSell,0)) AS InstalledSell,\n\n### Earned Hours ###\nsum(er.EarnedSellHours) AS EarnedSellPunchHours,\n\n### Loose Hours ###\nsum(\n(\nIF(std.ActivityType = \"E\"\n,/*TRUE*/\n(std.SteelHours * (1-(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')))\n,/*FALSE*/\nstd.SteelHours)\n) \n- COALESCE(er.EarnedFAHours,0)\n) AS LooseHours\n\nFROM (SELECT BidID, TestPackageNumber, ActivityType, \n\t\tsum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,\n        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\t\tFROM SteelTrackerDetails \n\t\tGROUP BY BidID) std\n        \nLEFT JOIN SubmissionStatus ss\n\tON ss.fk_BidIDAssigned = std.BidID AND ss.ActivityType = 65 AND ss.fk_ActivityStatus IN (5,12)\n        \n### Earned/Installed Columns ###\nLEFT JOIN (SELECT BidID, \n\n### Installed Quantities ###\nsum(COALESCE(stlsell.FASellQuantity,0)) AS InstalledSell,\n\n### Earned Hour Quantities ###\nsum(IF((COALESCE(stlsell.FASellQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelSell \n\t\t\tON ss2.ActivityType = 65 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 65\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelSell \n\t\t\tON ss2.ActivityType = 65 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 65\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity) * stlsell.FASellQuantity,0))\n)) AS EarnedSellHours,\n\n(\nsum(IF((COALESCE(stls.FAShakeQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelShake \n\t\t\tON ss2.ActivityType = 61 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 61\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n((SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelShake \n\t\t\tON ss2.ActivityType = 61 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 61\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity) * stls.FAShakeQuantity,0))\n)) \n+\nsum(IF((COALESCE(stle.FAErectQuantity,0) * COALESCE(stle.FAErectPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelErect \n\t\t\tON ss2.ActivityType = 62 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 62\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelErect \n\t\t\tON ss2.ActivityType = 62 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 62\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity) * (stle.FAErectQuantity * stle.FAErectPercent),0))\n)) \n+\nsum(IF((COALESCE(stlb.FABoltOutQuantity,0) * COALESCE(stlb.FABoltOutPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelBoltOut \n\t\t\tON ss2.ActivityType = 63 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 63\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelBoltOut \n\t\t\tON ss2.ActivityType = 63 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 63\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity) * (stlb.FABoltOutQuantity * stlb.FABoltOutPercent),0))\n)) \n+\nsum(IF((COALESCE(stli.FAImpQuantity,0) * COALESCE(stli.FAImpPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelImp \n\t\t\tON ss2.ActivityType = 64 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 64\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelImp \n\t\t\tON ss2.ActivityType = 64 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 64\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity) * (stli.FAImpQuantity * stli.FAImpPercent),0))\n)) \n+\nsum(IF((COALESCE(stlw.FAWeldQuantity,0) * COALESCE(stlw.FAWeldPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelWeld \n\t\t\tON ss2.ActivityType = 68 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 68\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.WeldCount,/*Is New + cumlitive quantity greater then WeldCount*/\n/*TRUE*/ \nGREATEST((COALESCE(std.WeldCount,0) - \n(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelWeld \n\t\t\tON ss2.ActivityType = 68 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 68\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID))\n,0) * (std.WeldHours / std.WeldCount),\n/*FALSE*/\n(COALESCE((std.WeldHours / std.WeldCount) * (stlw.FAWeldQuantity * stlw.FAWeldPercent),0))\n)) \n+\nsum(IF((COALESCE(stld.DemoLength,0) + \n(SELECT COALESCE(sum(COALESCE(DemoLength,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelDemo \n\t\t\tON ss2.ActivityType = 67 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 67\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(DemoLength,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelDemo \n\t\t\tON ss2.ActivityType = 67 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 67\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID))\n,0) * (std.DemoHours / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.DemoHours / std.TakeOffQuantity) * stld.DemoLength ,0))\n)) \n+\nsum(IF((COALESCE(stlm.MiscQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelMisc\n\t\t\tON ss2.ActivityType = 96 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 96\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelMisc \n\t\t\tON ss2.ActivityType = 96 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 96\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID))\n,0) * (std.MiscHours / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.MiscHours / std.TakeOffQuantity) * stlm.MiscQuantity ,0))\n))\n) AS EarnedFAHours\n \n\nFROM SubmissionStatus ss\n        \nJOIN (SELECT BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours, sum(WeldCount) AS WeldCount, \n\t\tIF(ActivityType = \"D\", sum(SteelHours), 0) AS DemoHours,\n\t\tIF(ActivityType = \"Misc\", sum(SteelHours), 0) AS MiscHours\n\t\tFROM SteelTrackerDetails \n\t\tGROUP BY BidID) std\n\tON std.BidID = ss.fk_BidIDAssigned\n\nLEFT JOIN SteelShake stls\n\tON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID AND stls.FARework = 0\n\nLEFT JOIN SteelErect stle\n\tON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID AND stle.FARework = 0\n\nLEFT JOIN SteelBoltOut stlb\n\tON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID AND stlb.FARework = 0\n\nLEFT JOIN SteelImp stli\n\tON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID AND stli.FARework = 0\n    \nLEFT JOIN SteelWeld stlw\n\tON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID AND stlw.FARework = 0\n\nLEFT JOIN SteelSell stlsell\n\tON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID AND stlsell.FARework = 0\n\nLEFT JOIN SteelDemo stld\n\tON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID\n    \nLEFT JOIN SteelMisc stlm\n\tON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID AND stlm.MiscRework = 0\n\nWHERE ss.fk_ActivityStatus IN (5,12)\nAND ss.ActivityType IN (60,61,62,63,64,65,66,67,68,69,96) \nGROUP BY std.BidID\n) er\n\tON er.BidID = std.BidID\n  \nWHERE std.TestPackageNumber = :TestPackage\nGROUP BY std.TestPackageNumber",
    "countQueryString" : "select count(*) from (SELECT std.BidID, std.TestPackageNumber,\n\n### Count ####\nsum(std.TakeOffQuantity) AS SellPunchCount,\n\n### Hours ####\nsum(std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')) AS SellPunchHours,\n\n### Installed Count ###\nsum(COALESCE(er.InstalledSell,0)) AS InstalledSell,\n\n### Earned Hours ###\nsum(er.EarnedSellHours) AS EarnedSellPunchHours,\n\n### Loose Hours ###\nsum(\n(\nIF(std.ActivityType = \"E\"\n,/*TRUE*/\n(std.SteelHours * (1-(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')))\n,/*FALSE*/\nstd.SteelHours)\n) \n- COALESCE(er.EarnedFAHours,0)\n) AS LooseHours\n\nFROM (SELECT BidID, TestPackageNumber, ActivityType, \n\t\tsum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,\n        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\t\tFROM SteelTrackerDetails \n\t\tGROUP BY BidID) std\n        \nLEFT JOIN SubmissionStatus ss\n\tON ss.fk_BidIDAssigned = std.BidID AND ss.ActivityType = 65 AND ss.fk_ActivityStatus IN (5,12)\n        \n### Earned/Installed Columns ###\nLEFT JOIN (SELECT BidID, \n\n### Installed Quantities ###\nsum(COALESCE(stlsell.FASellQuantity,0)) AS InstalledSell,\n\n### Earned Hour Quantities ###\nsum(IF((COALESCE(stlsell.FASellQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelSell \n\t\t\tON ss2.ActivityType = 65 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 65\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelSell \n\t\t\tON ss2.ActivityType = 65 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 65\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity) * stlsell.FASellQuantity,0))\n)) AS EarnedSellHours,\n\n(\nsum(IF((COALESCE(stls.FAShakeQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelShake \n\t\t\tON ss2.ActivityType = 61 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 61\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n((SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelShake \n\t\t\tON ss2.ActivityType = 61 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 61\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity) * stls.FAShakeQuantity,0))\n)) \n+\nsum(IF((COALESCE(stle.FAErectQuantity,0) * COALESCE(stle.FAErectPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelErect \n\t\t\tON ss2.ActivityType = 62 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 62\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelErect \n\t\t\tON ss2.ActivityType = 62 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 62\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity) * (stle.FAErectQuantity * stle.FAErectPercent),0))\n)) \n+\nsum(IF((COALESCE(stlb.FABoltOutQuantity,0) * COALESCE(stlb.FABoltOutPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelBoltOut \n\t\t\tON ss2.ActivityType = 63 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 63\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelBoltOut \n\t\t\tON ss2.ActivityType = 63 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 63\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity) * (stlb.FABoltOutQuantity * stlb.FABoltOutPercent),0))\n)) \n+\nsum(IF((COALESCE(stli.FAImpQuantity,0) * COALESCE(stli.FAImpPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelImp \n\t\t\tON ss2.ActivityType = 64 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 64\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelImp \n\t\t\tON ss2.ActivityType = 64 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 64\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity) * (stli.FAImpQuantity * stli.FAImpPercent),0))\n)) \n+\nsum(IF((COALESCE(stlw.FAWeldQuantity,0) * COALESCE(stlw.FAWeldPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelWeld \n\t\t\tON ss2.ActivityType = 68 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 68\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.WeldCount,/*Is New + cumlitive quantity greater then WeldCount*/\n/*TRUE*/ \nGREATEST((COALESCE(std.WeldCount,0) - \n(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelWeld \n\t\t\tON ss2.ActivityType = 68 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 68\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID))\n,0) * (std.WeldHours / std.WeldCount),\n/*FALSE*/\n(COALESCE((std.WeldHours / std.WeldCount) * (stlw.FAWeldQuantity * stlw.FAWeldPercent),0))\n)) \n+\nsum(IF((COALESCE(stld.DemoLength,0) + \n(SELECT COALESCE(sum(COALESCE(DemoLength,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelDemo \n\t\t\tON ss2.ActivityType = 67 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 67\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(DemoLength,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelDemo \n\t\t\tON ss2.ActivityType = 67 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 67\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID))\n,0) * (std.DemoHours / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.DemoHours / std.TakeOffQuantity) * stld.DemoLength ,0))\n)) \n+\nsum(IF((COALESCE(stlm.MiscQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelMisc\n\t\t\tON ss2.ActivityType = 96 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 96\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity\n\tFROM SubmissionStatus ss2\n\t\tLEFT JOIN SteelMisc \n\t\t\tON ss2.ActivityType = 96 AND ss2.ActivityRowId = ID\n\tWHERE ss2.fk_ActivityStatus IN (5,12)\n\tAND ss2.ActivityType = 96\n\tAND ss2.PSAActivityID < ss.PSAActivityID\n\tAND ss2.fk_BidIDAssigned = std.BidID))\n,0) * (std.MiscHours / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.MiscHours / std.TakeOffQuantity) * stlm.MiscQuantity ,0))\n))\n) AS EarnedFAHours\n \n\nFROM SubmissionStatus ss\n        \nJOIN (SELECT BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours, sum(WeldCount) AS WeldCount, \n\t\tIF(ActivityType = \"D\", sum(SteelHours), 0) AS DemoHours,\n\t\tIF(ActivityType = \"Misc\", sum(SteelHours), 0) AS MiscHours\n\t\tFROM SteelTrackerDetails \n\t\tGROUP BY BidID) std\n\tON std.BidID = ss.fk_BidIDAssigned\n\nLEFT JOIN SteelShake stls\n\tON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID AND stls.FARework = 0\n\nLEFT JOIN SteelErect stle\n\tON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID AND stle.FARework = 0\n\nLEFT JOIN SteelBoltOut stlb\n\tON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID AND stlb.FARework = 0\n\nLEFT JOIN SteelImp stli\n\tON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID AND stli.FARework = 0\n    \nLEFT JOIN SteelWeld stlw\n\tON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID AND stlw.FARework = 0\n\nLEFT JOIN SteelSell stlsell\n\tON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID AND stlsell.FARework = 0\n\nLEFT JOIN SteelDemo stld\n\tON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID\n    \nLEFT JOIN SteelMisc stlm\n\tON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID AND stlm.MiscRework = 0\n\nWHERE ss.fk_ActivityStatus IN (5,12)\nAND ss.ActivityType IN (60,61,62,63,64,65,66,67,68,69,96) \nGROUP BY std.BidID\n) er\n\tON er.BidID = std.BidID\n  \nWHERE std.TestPackageNumber = :TestPackage\nGROUP BY std.TestPackageNumber) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantitiesTestPackageSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EarnedSellPunchHours",
        "fieldName" : "earnedSellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledSell",
        "fieldName" : "installedSell",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "LooseHours",
        "fieldName" : "looseHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellPunchCount",
        "fieldName" : "sellPunchCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellPunchHours",
        "fieldName" : "sellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityBoltUpInstalled" : {
    "name" : "GetQuantityBoltUpInstalled",
    "description" : "Gets the Quantity of units installed BY BidID",
    "version" : "V1",
    "queryString" : "SELECT sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) AS Total\nFROM SubmissionStatus ss\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n        \n\t\tLEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled\n\t\t\t\tFROM SubsBoltUp sb \n                WHERE sb.BoltUpRework = 0) sb\n\t\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smb\n\t\tON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'\n\n\nWHERE ss.ActivityType IN (21, 91)\nAND ss.fk_ActivityStatus IN (5,12) \nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT sum(COALESCE(sb.BoltUpInstalled,0) + COALESCE(smb.MiscBoltUpInstalled,0)) AS Total\nFROM SubmissionStatus ss\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n        \n\t\tLEFT JOIN (SELECT sb.ID, sb.BoltUpQuantity AS BoltUpInstalled\n\t\t\t\tFROM SubsBoltUp sb \n                WHERE sb.BoltUpRework = 0) sb\n\t\tON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscBoltUpInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smb\n\t\tON smb.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'BU'\n\n\nWHERE ss.ActivityType IN (21, 91)\nAND ss.fk_ActivityStatus IN (5,12) \nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "174",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityBoltUpInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityCutPrepInstalled" : {
    "name" : "GetQuantityCutPrepInstalled",
    "description" : "Get Cut/Prep installed Quantity BY BidId",
    "version" : "V1",
    "queryString" : "SELECT sum(COALESCE(scut.CutInstalled, 0) + COALESCE(smc.MiscCutInstalled,0)) AS Total\nFROM SubmissionStatus ss\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n\t\n    LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS CutInstalled\n\t\t\t\tFROM SubsWeld sw \n                WHERE sw.WeldRework = 0) scut\n\t\tON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smc\n\t\tON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'\n\n\n\nWHERE ss.ActivityType IN (23, 91)\nAND ss.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT sum(COALESCE(scut.CutInstalled, 0) + COALESCE(smc.MiscCutInstalled,0)) AS Total\nFROM SubmissionStatus ss\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n\t\n    LEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS CutInstalled\n\t\t\t\tFROM SubsWeld sw \n                WHERE sw.WeldRework = 0) scut\n\t\tON scut.ID = ss.ActivityRowId AND ss.ActivityType = 23\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscCutInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smc\n\t\tON smc.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT != 'D' AND td.PipingActivityType = 'CUT'\n\n\n\nWHERE ss.ActivityType IN (23, 91)\nAND ss.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "292",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityCutPrepInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityDemoRemoved" : {
    "name" : "GetQuantityDemoRemoved",
    "description" : "...",
    "version" : "V1",
    "queryString" : "SELECT sum(COALESCE(sd.DemoInstalled, 0) + COALESCE(smd.MiscDemoInstalled,0)) AS Total\nFROM SubmissionStatus ss\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n\t\n    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled\n\t\t\t\tFROM SubsDemo sd) sd\n\t\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) \n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smd\n\t\tON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'\n\n\n\nWHERE ss.ActivityType IN (51,52,53,59,91)\nAND ss.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT sum(COALESCE(sd.DemoInstalled, 0) + COALESCE(smd.MiscDemoInstalled,0)) AS Total\nFROM SubmissionStatus ss\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n\t\n    LEFT JOIN (SELECT sd.ID, sd.DemoQuantity AS DemoInstalled\n\t\t\t\tFROM SubsDemo sd) sd\n\t\tON sd.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59) \n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscDemoInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smd\n\t\tON smd.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'D'\n\n\n\nWHERE ss.ActivityType IN (51,52,53,59,91)\nAND ss.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "28",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityDemoRemovedResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityLFInstalled" : {
    "name" : "GetQuantityLFInstalled",
    "description" : "Gets the Total footage installed by all PSA activities assigned to a BidID BY BidID",
    "version" : "V1",
    "queryString" : "SELECT sum(\nCOALESCE(se.ErectionLengthSpool1,0) + \nCOALESCE(se.ErectionLengthSpool2,0) + \nCOALESCE(se.ErectionLengthSpool3,0) + \nCOALESCE(se.ErectionLengthSpool4,0) + \nCOALESCE(se.ErectionLengthSpool5,0) + \nCOALESCE(se.ErectionLengthSpool6,0) +\nCOALESCE(sme.MiscErectionInstalled,0)\n) AS Total \nFROM SubmissionStatus ss\n\n\tLEFT JOIN SubsErection se\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0\n\t\t\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n        \n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) sme\n\t\tON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'\n\n\n\nWHERE ss.ActivityType IN (11, 91)\nAND ss.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID\nGROUP BY BidID",
    "countQueryString" : "select count(*) from (SELECT sum(\nCOALESCE(se.ErectionLengthSpool1,0) + \nCOALESCE(se.ErectionLengthSpool2,0) + \nCOALESCE(se.ErectionLengthSpool3,0) + \nCOALESCE(se.ErectionLengthSpool4,0) + \nCOALESCE(se.ErectionLengthSpool5,0) + \nCOALESCE(se.ErectionLengthSpool6,0) +\nCOALESCE(sme.MiscErectionInstalled,0)\n) AS Total \nFROM SubmissionStatus ss\n\n\tLEFT JOIN SubsErection se\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11 AND se.ErectionRework = 0\n\t\t\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n        \n    LEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscErectionInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) sme\n\t\tON sme.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'PE'\n\n\n\nWHERE ss.ActivityType IN (11, 91)\nAND ss.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID\nGROUP BY BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "84",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityLfinstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityMiscInstalled" : {
    "name" : "GetQuantityMiscInstalled",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT COALESCE(sum(sm.MiscQuantity),0) AS Total\nFROM SubmissionStatus ss\n\tJOIN SubsMisc sm\n\t\tON sm.ID = ss.ActivityRowID\nWHERE ss.ActivityType = '91' \nAND sm.MiscRework = 0\nAND ss.fk_ActivityStatus IN (5,12) \nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT COALESCE(sum(sm.MiscQuantity),0) AS Total\nFROM SubmissionStatus ss\n\tJOIN SubsMisc sm\n\t\tON sm.ID = ss.ActivityRowID\nWHERE ss.ActivityType = '91' \nAND sm.MiscRework = 0\nAND ss.fk_ActivityStatus IN (5,12) \nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "378",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityMiscInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantitySupportsInstalled" : {
    "name" : "GetQuantitySupportsInstalled",
    "description" : "Get the number of Supports installed BY BidID",
    "version" : "V1",
    "queryString" : "SELECT sum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0)) AS Total\n\nFROM SubmissionStatus ss\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n\t\n\tLEFT JOIN (SELECT ssu.ID, COALESCE((ssu.SupportPercentCompleted * .01 * ssu.SupportQuantity),0) AS SupportInstalled\n\t\t\t\tFROM SubsSupports ssu\n                WHERE ssu.SupportRework = 0) ssu\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smssu\n\t\tON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'\n\nWHERE ss.ActivityType IN (32, 91)\nAND ss.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT sum(COALESCE(ssu.SupportInstalled,0) + COALESCE(smssu.MiscSupportInstalled,0)) AS Total\n\nFROM SubmissionStatus ss\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n\t\n\tLEFT JOIN (SELECT ssu.ID, COALESCE((ssu.SupportPercentCompleted * .01 * ssu.SupportQuantity),0) AS SupportInstalled\n\t\t\t\tFROM SubsSupports ssu\n                WHERE ssu.SupportRework = 0) ssu\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscSupportInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smssu\n\t\tON smssu.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'S'\n\nWHERE ss.ActivityType IN (32, 91)\nAND ss.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "391",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantitySupportsInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityTrimInstalled" : {
    "name" : "GetQuantityTrimInstalled",
    "description" : "Get the sum of all Trim activities installed BY Bid ID",
    "version" : "V1",
    "queryString" : "SELECT SUM(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0)) AS Total\n\nFROM SubmissionStatus ss\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n\t\n   LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled\n\t\t\t\tFROM SubsTrim st\n                WHERE st.TrimRework = 0) st\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smt\n\t\tON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'\n\n\n\nWHERE ss.ActivityType IN (30,31,33,34,35,39,91)\nAND ss.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT SUM(COALESCE(st.TrimInstalled,0) + COALESCE(smt.MiscTrimInstalled,0)) AS Total\n\nFROM SubmissionStatus ss\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n\t\n   LEFT JOIN (SELECT st.ID, st.TrimQuantity AS TrimInstalled\n\t\t\t\tFROM SubsTrim st\n                WHERE st.TrimRework = 0) st\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscTrimInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smt\n\t\tON smt.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.ECT = 'T' AND td.PipingActivityType != 'MISC' AND td.PipingActivityType != 'S'\n\n\n\nWHERE ss.ActivityType IN (30,31,33,34,35,39,91)\nAND ss.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "38",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityTrimInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityWeldInstalled" : {
    "name" : "GetQuantityWeldInstalled",
    "description" : "Get the number of Welds installed BY BidID",
    "version" : "V1",
    "queryString" : "SELECT SUM(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0)) AS Total\n\nFROM SubmissionStatus ss\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n\t\n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\n\t\t\t\tFROM SubsWeld sw \n                WHERE sw.WeldRework = 0) sw\n\t\tON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smw\n\t\tON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'\n\nWHERE ss.ActivityType IN (22, 91) \nAND ss.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT SUM(COALESCE(sw.WeldInstalled,0) + COALESCE(smw.MiscWeldInstalled,0)) AS Total\n\nFROM SubmissionStatus ss\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `trackerDetails`\n\t\t\t\tGROUP BY BidID)td\n\t\tON td.BidID = ss.fk_BidIDAssigned\n\t\n\tLEFT JOIN (SELECT sw.ID, COALESCE((sw.WeldPercentCompleted * .01),0) AS WeldInstalled\n\t\t\t\tFROM SubsWeld sw \n                WHERE sw.WeldRework = 0) sw\n\t\tON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\n        \n\tLEFT JOIN (SELECT sm.ID, sm.MiscQuantity AS MiscWeldInstalled\n\t\t\t\tFROM SubsMisc sm\n                WHERE sm.MiscRework = 0) smw\n\t\tON smw.ID = ss.ActivityRowId AND ss.ActivityType = 91 AND td.PipingActivityType = 'W'\n\nWHERE ss.ActivityType IN (22, 91) \nAND ss.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "40",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityWeldInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPRByDate" : {
    "name" : "GetReportDPRByDate",
    "description" : "Get the Daily Progress Report of given date range By Foreman",
    "version" : "V1",
    "queryString" : "SELECT \nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  \nse.ErectionDrawingNumber AS DrawingNumber, \nse.ErectionSheetNumber AS SheetNumber, \nse.ErectionSpool1 AS Spool1, \nIF(se.ErectionSpool3 IS NULL OR se.ErectionSpool3 = '', se.ErectionSpool2,  CONCAT(se.ErectionSpool2, '...')) AS Spool2,\nse.ErectionPipeSize AS Size, \n(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6) AS QuantityInstalled,\nats.Status AS CurrentStatus,\nse.ErectionNotes AS Notes,\nse.ErectionRework AS Rework,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\n\nFROM SubmissionStatus ss\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n    LEFT JOIN SubsErection se\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11\nWHERE ss.ActivityType = 11\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\nUNION\n\n\n\nSELECT\nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, \nsb.BoltUpDrawingNumber, \nsb.BoltUpSheetNumber, \nsb.BoltUpSpool1, \nsb.BoltUpSpool2, \nsb.BoltUpSize, \nsb.BoltUpQuantity, \nats.Status,\nsb.BoltUpNotes,\nsb.BoltUpRework,\nDATE(sd.ReceivedTime) \n\n\nFROM SubmissionStatus ss\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n        LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n    LEFT JOIN SubsBoltUp sb\n        ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\n    \nWHERE ss.ActivityType = 21\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)      \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\nUNION\n\n\n\nSELECT\nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, \nsw.WeldDrawingNumber, \nsw.WeldSheetNumber, \nsw.WeldSpool1, \nsw.WeldSpool2, \nsw.WeldSize, \nCOALESCE((sw.WeldPercentCompleted * .01),0), \nats.Status,\nsw.WeldNotes,\nsw.WeldRework,\nDATE(sd.ReceivedTime) \n\n\nFROM SubmissionStatus ss\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n        LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n    LEFT JOIN SubsWeld sw\n        ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\n        \nWHERE ss.ActivityType = 22\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\nUNION\n\n\n\nSELECT\nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, \nsw.WeldDrawingNumber, \nsw.WeldSheetNumber, \n'N/A', \n'N/A', \nsw.WeldSize, \n COALESCE((sw.WeldPercentCompleted * .01),0), \nats.Status,\nsw.WeldNotes,\nsw.WeldRework,\nDATE(sd.ReceivedTime) \n\n\nFROM SubmissionStatus ss\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n        LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n    LEFT JOIN SubsWeld sw\n        ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 23\n    \n        \nWHERE ss.ActivityType = 23\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)       \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\nUNION\n\n\n\nSELECT\nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, \nst.TrimDrawingNumber, \nst.TrimSheetNumber, \n'N/A', \n'N/A', \nst.TrimSize, \nst.TrimQuantity, \nats.Status,\nst.TrimNotes,\nst.TrimRework,\nDATE(sd.ReceivedTime) \n\n\nFROM SubmissionStatus ss\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n        LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n    LEFT JOIN SubsTrim st\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)\n        \nWHERE ss.ActivityType IN (30,31,33,34,35,39)\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\nUNION\n\n\n\nSELECT\nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, \nssu.SupportDrawingNumber, \nssu.SupportSheetNumber, \n'N/A', \n'N/A', \n'N/A', \nIF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)), \nats.Status,\nCONCAT(ssu.SupportType, '-: ', ssu.SupportPartNumber, '-: ', ssu.SupportNotes),\nssu.SupportRework,\nDATE(sd.ReceivedTime) \n\n\nFROM SubmissionStatus ss\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n        LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\tLEFT JOIN SubsSupports ssu\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \n        \nWHERE ss.ActivityType = 32\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\nUNION\n\n\n\nSELECT\nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, \nsdem.DemoDrawingNumber, \nsdem.DemoSheetNumber, \n'N/A', \n'N/A', \nsdem.DemoSize, \nsdem.DemoQuantity, \nats.Status,\nsdem.DemoNotes,\n0,\nDATE(sd.ReceivedTime) \n\n\nFROM SubmissionStatus ss\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n        LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n    LEFT JOIN SubsDemo sdem\n\t\tON sdem.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59)\n        \nWHERE ss.ActivityType IN (51,52,53,59)\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\nUNION\n\n\n\nSELECT\nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, \nsm.MiscDrawingNumber, \nsm.MiscSheetNumber, \n'N/A', \n'N/A', \n'N/A', \nsm.MiscQuantity, \nats.Status,\nsm.MiscNotes,\nsm.MiscRework,\nDATE(sd.ReceivedTime) \n\n\nFROM SubmissionStatus ss\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n        LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n    LEFT JOIN SubsMisc sm\n\t\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91\n        \nWHERE ss.ActivityType = 91\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)  \nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID) \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day",
    "countQueryString" : "select count(*) from (SELECT \nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  \nse.ErectionDrawingNumber AS DrawingNumber, \nse.ErectionSheetNumber AS SheetNumber, \nse.ErectionSpool1 AS Spool1, \nIF(se.ErectionSpool3 IS NULL OR se.ErectionSpool3 = '', se.ErectionSpool2,  CONCAT(se.ErectionSpool2, '...')) AS Spool2,\nse.ErectionPipeSize AS Size, \n(se.ErectionLengthSpool1 + se.ErectionLengthSpool2 + se.ErectionLengthSpool3 + se.ErectionLengthSpool4 + se.ErectionLengthSpool5 + se.ErectionLengthSpool6) AS QuantityInstalled,\nats.Status AS CurrentStatus,\nse.ErectionNotes AS Notes,\nse.ErectionRework AS Rework,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\n\nFROM SubmissionStatus ss\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n    LEFT JOIN SubsErection se\n\t\tON se.ID = ss.ActivityRowId AND ss.ActivityType = 11\nWHERE ss.ActivityType = 11\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\nUNION\n\n\n\nSELECT\nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, \nsb.BoltUpDrawingNumber, \nsb.BoltUpSheetNumber, \nsb.BoltUpSpool1, \nsb.BoltUpSpool2, \nsb.BoltUpSize, \nsb.BoltUpQuantity, \nats.Status,\nsb.BoltUpNotes,\nsb.BoltUpRework,\nDATE(sd.ReceivedTime) \n\n\nFROM SubmissionStatus ss\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n        LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n    LEFT JOIN SubsBoltUp sb\n        ON sb.ID = ss.ActivityRowId AND ss.ActivityType = 21\n    \nWHERE ss.ActivityType = 21\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)      \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\nUNION\n\n\n\nSELECT\nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, \nsw.WeldDrawingNumber, \nsw.WeldSheetNumber, \nsw.WeldSpool1, \nsw.WeldSpool2, \nsw.WeldSize, \nCOALESCE((sw.WeldPercentCompleted * .01),0), \nats.Status,\nsw.WeldNotes,\nsw.WeldRework,\nDATE(sd.ReceivedTime) \n\n\nFROM SubmissionStatus ss\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n        LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n    LEFT JOIN SubsWeld sw\n        ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 22\n        \nWHERE ss.ActivityType = 22\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\nUNION\n\n\n\nSELECT\nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, \nsw.WeldDrawingNumber, \nsw.WeldSheetNumber, \n'N/A', \n'N/A', \nsw.WeldSize, \n COALESCE((sw.WeldPercentCompleted * .01),0), \nats.Status,\nsw.WeldNotes,\nsw.WeldRework,\nDATE(sd.ReceivedTime) \n\n\nFROM SubmissionStatus ss\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n        LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n    LEFT JOIN SubsWeld sw\n        ON sw.ID = ss.ActivityRowId AND ss.ActivityType = 23\n    \n        \nWHERE ss.ActivityType = 23\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)       \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\nUNION\n\n\n\nSELECT\nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, \nst.TrimDrawingNumber, \nst.TrimSheetNumber, \n'N/A', \n'N/A', \nst.TrimSize, \nst.TrimQuantity, \nats.Status,\nst.TrimNotes,\nst.TrimRework,\nDATE(sd.ReceivedTime) \n\n\nFROM SubmissionStatus ss\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n        LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n    LEFT JOIN SubsTrim st\n\t\tON st.ID = ss.ActivityRowId AND ss.ActivityType IN (30,31,33,34,35,39)\n        \nWHERE ss.ActivityType IN (30,31,33,34,35,39)\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\nUNION\n\n\n\nSELECT\nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, \nssu.SupportDrawingNumber, \nssu.SupportSheetNumber, \n'N/A', \n'N/A', \n'N/A', \nIF(ssu.SupportComplete = 1, ssu.SupportQuantity, COALESCE((ssu.SupportPercentCompleted * .01),0)), \nats.Status,\nCONCAT(ssu.SupportType, '-: ', ssu.SupportPartNumber, '-: ', ssu.SupportNotes),\nssu.SupportRework,\nDATE(sd.ReceivedTime) \n\n\nFROM SubmissionStatus ss\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n        LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\tLEFT JOIN SubsSupports ssu\n\t\tON ssu.ID = ss.ActivityRowId AND ss.ActivityType = 32 \n        \nWHERE ss.ActivityType = 32\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\nUNION\n\n\n\nSELECT\nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, \nsdem.DemoDrawingNumber, \nsdem.DemoSheetNumber, \n'N/A', \n'N/A', \nsdem.DemoSize, \nsdem.DemoQuantity, \nats.Status,\nsdem.DemoNotes,\n0,\nDATE(sd.ReceivedTime) \n\n\nFROM SubmissionStatus ss\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n        LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n    LEFT JOIN SubsDemo sdem\n\t\tON sdem.ID = ss.ActivityRowId AND ss.ActivityType IN (51,52,53,59)\n        \nWHERE ss.ActivityType IN (51,52,53,59)\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\nUNION\n\n\n\nSELECT\nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType, \nsm.MiscDrawingNumber, \nsm.MiscSheetNumber, \n'N/A', \n'N/A', \n'N/A', \nsm.MiscQuantity, \nats.Status,\nsm.MiscNotes,\nsm.MiscRework,\nDATE(sd.ReceivedTime) \n\n\nFROM SubmissionStatus ss\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = ss.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = ss.fk_ActivityStatus\n\t\n        LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = ss.fk_SubmissionId\n\tleft JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tleft JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n    LEFT JOIN SubsMisc sm\n\t\tON sm.ID = ss.ActivityRowId AND ss.ActivityType = 91\n        \nWHERE ss.ActivityType = 91\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)  \nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID) \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ForemanID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "SuperID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ManagerID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2016-03-01",
      "required" : false
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2017-02-02",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprbyDateResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "FieldActivityId",
        "fieldName" : "fieldActivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityRowId",
        "fieldName" : "activityRowId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DrawingNumber",
        "fieldName" : "drawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Spool1",
        "fieldName" : "spool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Spool2",
        "fieldName" : "spool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Size",
        "fieldName" : "size",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityInstalled",
        "fieldName" : "quantityInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "CurrentStatus",
        "fieldName" : "currentStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      }, {
        "name" : "DateSubmitted",
        "fieldName" : "dateSubmitted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Date",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPRCivil" : {
    "name" : "GetReportDPRCivil",
    "description" : "Name",
    "version" : "V2",
    "queryString" : "SELECT \nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  \n\ncfa.FAFoundation AS Foundation, \ncfa.FADescription AS Description, \ncfa.FADrawingNumber AS DrawingNumber, \ncfa.FADetailDrawingNumber AS DetailDrawing,\nCONCAT(cfa.FAPercentComplete*100,\"%\") AS QuantityInstalled,\nats.Status AS CurrentStatus,\ncfa.FARework AS Rework,\ncfa.FANotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\n\nFROM SubmissionStatus ss\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n        \nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nJOIN SubsDetails sd\n\tON sd.SubmissionId = ss.fk_SubmissionId\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nJOIN CivilFA cfa\n\tON cfa.ID = ss.ActivityRowId AND ss.ActivityType = 70\n        \n\n\nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\n\nUNION\n\n\n\nSELECT \nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  \n\ncfa.FAFoundation AS Foundation, \ncfa.FADescription AS Description, \ncfa.FADrawingNumber AS DrawingNumber, \ncfa.FADetailDrawingNumber AS DetailDrawing,\nCONCAT(cfa.FAQuantity,\" yds\") AS QuantityInstalled,\nats.Status AS CurrentStatus,\ncfa.FARework AS Rework,\ncfa.FANotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\n\nFROM SubmissionStatus ss\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n        \nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nJOIN SubsDetails sd\n\tON sd.SubmissionId = ss.fk_SubmissionId\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nJOIN CivilFA cfa\n\tON cfa.ID = ss.ActivityRowId AND ss.ActivityType = 71\n        \n\n\n\nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\n\nUNION\n\n\n\n\nSELECT \nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  \n\n'N/A' AS Foundation, \nCONCAT('Test Package: ',csell.SellTestPackageNumber) AS Description, \n'N/A' AS DrawingNumber, \n'N/A' AS DetailDrawing,\n1 AS QuantityInstalled,\nats.Status AS CurrentStatus,\n'0' AS Rework,\ncsell.SellNotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\n\nFROM SubmissionStatus ss\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n        \nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nJOIN SubsDetails sd\n\tON sd.SubmissionId = ss.fk_SubmissionId\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nJOIN CivilSellPackage csell\n\tON csell.ID = ss.ActivityRowId AND ss.ActivityType = 72\n\n\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day",
    "countQueryString" : "select count(*) from (SELECT \nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  \n\ncfa.FAFoundation AS Foundation, \ncfa.FADescription AS Description, \ncfa.FADrawingNumber AS DrawingNumber, \ncfa.FADetailDrawingNumber AS DetailDrawing,\nCONCAT(cfa.FAPercentComplete*100,\"%\") AS QuantityInstalled,\nats.Status AS CurrentStatus,\ncfa.FARework AS Rework,\ncfa.FANotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\n\nFROM SubmissionStatus ss\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n        \nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nJOIN SubsDetails sd\n\tON sd.SubmissionId = ss.fk_SubmissionId\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nJOIN CivilFA cfa\n\tON cfa.ID = ss.ActivityRowId AND ss.ActivityType = 70\n        \n\n\nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\n\nUNION\n\n\n\nSELECT \nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  \n\ncfa.FAFoundation AS Foundation, \ncfa.FADescription AS Description, \ncfa.FADrawingNumber AS DrawingNumber, \ncfa.FADetailDrawingNumber AS DetailDrawing,\nCONCAT(cfa.FAQuantity,\" yds\") AS QuantityInstalled,\nats.Status AS CurrentStatus,\ncfa.FARework AS Rework,\ncfa.FANotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\n\nFROM SubmissionStatus ss\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n        \nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nJOIN SubsDetails sd\n\tON sd.SubmissionId = ss.fk_SubmissionId\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nJOIN CivilFA cfa\n\tON cfa.ID = ss.ActivityRowId AND ss.ActivityType = 71\n        \n\n\n\nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\n\nUNION\n\n\n\n\nSELECT \nss.PSAActivityId AS FieldActivityId, ss.ActivityType, ss.ActivityRowId, at.ActivityType AS ActivityTypeName,  \n\n'N/A' AS Foundation, \nCONCAT('Test Package: ',csell.SellTestPackageNumber) AS Description, \n'N/A' AS DrawingNumber, \n'N/A' AS DetailDrawing,\n1 AS QuantityInstalled,\nats.Status AS CurrentStatus,\n'0' AS Rework,\ncsell.SellNotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\n\nFROM SubmissionStatus ss\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n        \nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nJOIN SubsDetails sd\n\tON sd.SubmissionId = ss.fk_SubmissionId\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nJOIN CivilSellPackage csell\n\tON csell.ID = ss.ActivityRowId AND ss.ActivityType = 72\n\n\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ForemanID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "SuperID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "ManagerID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2016-06-06",
      "required" : true
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2017-05-15",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprcivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "FieldActivityId",
        "fieldName" : "fieldActivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityRowId",
        "fieldName" : "activityRowId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Foundation",
        "fieldName" : "foundation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DrawingNumber",
        "fieldName" : "drawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailDrawing",
        "fieldName" : "detailDrawing",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityInstalled",
        "fieldName" : "quantityInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CurrentStatus",
        "fieldName" : "currentStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DateSubmitted",
        "fieldName" : "dateSubmitted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Date",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPREquip" : {
    "name" : "GetReportDPREquip",
    "description" : "name",
    "version" : "V2",
    "queryString" : "SELECT \nss.PSAActivityId AS FieldActivityId, at.ActivityType AS ActivityTypeName,  \n\nefa.FATagNumber AS TagNumber, \nefa.FAActivitySelect AS Description,\nCONCAT(efa.FAPercentComplete*100,\"%\") AS QuantityInstalled,\nats.Status AS CurrentStatus,\nefa.FARework AS Rework,\nefa.FANotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\n\nFROM SubmissionStatus ss\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n        \nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nJOIN SubsDetails sd\n\tON sd.SubmissionId = ss.fk_SubmissionId\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nJOIN EquipFA efa\n\tON efa.ID = ss.ActivityRowId AND ss.ActivityType = 80\n        \n\n\n\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day",
    "countQueryString" : "select count(*) from (SELECT \nss.PSAActivityId AS FieldActivityId, at.ActivityType AS ActivityTypeName,  \n\nefa.FATagNumber AS TagNumber, \nefa.FAActivitySelect AS Description,\nCONCAT(efa.FAPercentComplete*100,\"%\") AS QuantityInstalled,\nats.Status AS CurrentStatus,\nefa.FARework AS Rework,\nefa.FANotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\n\nFROM SubmissionStatus ss\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = ss.ActivityType\n        \nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = ss.fk_ActivityStatus\n\nJOIN SubsDetails sd\n\tON sd.SubmissionId = ss.fk_SubmissionId\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nJOIN EquipFA efa\n\tON efa.ID = ss.ActivityRowId AND ss.ActivityType = 80\n        \n\n\n\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ForemanID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "SuperID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "ManagerID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2016-12-06",
      "required" : true
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2017-05-15",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprequipResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "FieldActivityId",
        "fieldName" : "fieldActivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TagNumber",
        "fieldName" : "tagNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityInstalled",
        "fieldName" : "quantityInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CurrentStatus",
        "fieldName" : "currentStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DateSubmitted",
        "fieldName" : "dateSubmitted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Date",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPRSteelCondensed" : {
    "name" : "GetReportDPRSteelCondensed",
    "description" : "Get Daily Progress Report (steel)  Input users, and date range",
    "version" : "V1",
    "queryString" : "SELECT Area, PieceNumber, \nsum(ShakeQuantity) AS ShakeQuantity, \nsum(ErectQuantity) AS ErectQuantity, \nsum(BoltoutQuantity) AS BoltoutQuantity, \nsum(ImpQuantity) AS ImpQuantity, \nsum(WeldQuantity) AS WeldQuantity, \nsum(SellQuantity) AS SellQuantity, \nsum(DemoQuantity) AS DemoQuantity, \nsum(MiscQuantity) AS MiscQuantity, \nReceivedTime \nFROM(SELECT  \nstls.FAArea AS Area, stls.FAPieceNumber AS PieceNumber, \nsum(COALESCE(stls.FAShakeQuantity,0)) AS ShakeQuantity,\n0 AS ErectQuantity,\n0 AS BoltoutQuantity,\n0 AS ImpQuantity,\n0 AS WeldQuantity,\n0 AS SellQuantity,\n0 AS DemoQuantity,\n0 AS MiscQuantity,\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelShake stls\n\tON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstle.FAArea AS Area, stle.FAPieceNumber AS PieceNumber,\n0,\nTRUNCATE(sum(COALESCE(stle.FAErectQuantity * stle.FAErectPercent,0)),2),\n0,0,0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelErect stle\n\tON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlb.FAArea AS Area, stlb.FAPieceNumber AS PieceNumber,\n0,0,\nTRUNCATE(sum(COALESCE(stlb.FABoltoutQuantity * stlb.FABoltoutPercent,0)),2),\n0,0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelBoltOut stlb\n\tON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstli.FAArea AS Area, stli.FAPieceNumber AS PieceNumber,\n0,0,0,\nTRUNCATE(sum(COALESCE(stli.FAImpQuantity * stli.FAImpPercent,0)),2),\n0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelImp stli\n\tON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlw.FAArea AS Area, stlw.FAPieceNumber AS PieceNumber,\n0,0,0,0,\nTRUNCATE(sum(COALESCE(stlw.FAWeldQuantity * stlw.FAWeldPercent,0)),2),\n0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelWeld stlw\n\tON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlsell.FAArea AS Area, stlsell.FAPieceNumber AS PieceNumber,\n0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stlsell.FASellQuantity,0)),2),\n0,0,\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelSell stlsell\n\tON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstld.DemoArea AS Area, 0 AS PieceNumber,\n0,0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stld.DemoQuantity,0)),2),\n0,\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelDemo stld\n\tON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlm.MiscArea AS Area, stlm.MiscPieceNumber AS PieceNumber,\n0,0,0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stlm.MiscQuantity,0)),2),\n\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelMisc stlm\n\tON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)\n) t\nGROUP BY t.Area, t.PieceNumber, Date(t.ReceivedTime)",
    "countQueryString" : "select count(*) from (SELECT Area, PieceNumber, \nsum(ShakeQuantity) AS ShakeQuantity, \nsum(ErectQuantity) AS ErectQuantity, \nsum(BoltoutQuantity) AS BoltoutQuantity, \nsum(ImpQuantity) AS ImpQuantity, \nsum(WeldQuantity) AS WeldQuantity, \nsum(SellQuantity) AS SellQuantity, \nsum(DemoQuantity) AS DemoQuantity, \nsum(MiscQuantity) AS MiscQuantity, \nReceivedTime \nFROM(SELECT  \nstls.FAArea AS Area, stls.FAPieceNumber AS PieceNumber, \nsum(COALESCE(stls.FAShakeQuantity,0)) AS ShakeQuantity,\n0 AS ErectQuantity,\n0 AS BoltoutQuantity,\n0 AS ImpQuantity,\n0 AS WeldQuantity,\n0 AS SellQuantity,\n0 AS DemoQuantity,\n0 AS MiscQuantity,\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelShake stls\n\tON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstle.FAArea AS Area, stle.FAPieceNumber AS PieceNumber,\n0,\nTRUNCATE(sum(COALESCE(stle.FAErectQuantity * stle.FAErectPercent,0)),2),\n0,0,0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelErect stle\n\tON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlb.FAArea AS Area, stlb.FAPieceNumber AS PieceNumber,\n0,0,\nTRUNCATE(sum(COALESCE(stlb.FABoltoutQuantity * stlb.FABoltoutPercent,0)),2),\n0,0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelBoltOut stlb\n\tON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstli.FAArea AS Area, stli.FAPieceNumber AS PieceNumber,\n0,0,0,\nTRUNCATE(sum(COALESCE(stli.FAImpQuantity * stli.FAImpPercent,0)),2),\n0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelImp stli\n\tON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlw.FAArea AS Area, stlw.FAPieceNumber AS PieceNumber,\n0,0,0,0,\nTRUNCATE(sum(COALESCE(stlw.FAWeldQuantity * stlw.FAWeldPercent,0)),2),\n0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelWeld stlw\n\tON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlsell.FAArea AS Area, stlsell.FAPieceNumber AS PieceNumber,\n0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stlsell.FASellQuantity,0)),2),\n0,0,\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelSell stlsell\n\tON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstld.DemoArea AS Area, 0 AS PieceNumber,\n0,0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stld.DemoQuantity,0)),2),\n0,\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelDemo stld\n\tON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlm.MiscArea AS Area, stlm.MiscPieceNumber AS PieceNumber,\n0,0,0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stlm.MiscQuantity,0)),2),\n\nsd.ReceivedTime\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelMisc stlm\n\tON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)\n) t\nGROUP BY t.Area, t.PieceNumber, Date(t.ReceivedTime)) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "PM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ConstM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "SiteM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "AreaM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "Super",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "GF",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "Foreman",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "120",
      "required" : false
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2016-08-01",
      "required" : false
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2016-11-17",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprsteelCondensedResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceNumber",
        "fieldName" : "pieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ShakeQuantity",
        "fieldName" : "shakeQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ErectQuantity",
        "fieldName" : "erectQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "BoltoutQuantity",
        "fieldName" : "boltoutQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ImpQuantity",
        "fieldName" : "impQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldQuantity",
        "fieldName" : "weldQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellQuantity",
        "fieldName" : "sellQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "DemoQuantity",
        "fieldName" : "demoQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "MiscQuantity",
        "fieldName" : "miscQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPRSteelDetailed" : {
    "name" : "GetReportDPRSteelDetailed",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT  \n(IF(stls.FAArea IS NOT NULL, stls.FAArea,\nIF(stle.FAArea IS NOT NULL, stle.FAArea,\nIF(stlb.FAArea IS NOT NULL, stlb.FAArea,\nIF(stli.FAArea IS NOT NULL, stli.FAArea,\nIF(stlw.FAArea IS NOT NULL, stlw.FAArea,\nIF(stlsell.FAArea IS NOT NULL, stlsell.FAArea,\nIF(stlm.MiscArea IS NOT NULL, stlm.MiscArea,0)\n))))))) AS Area,\n\n(IF(stls.FAPieceNumber IS NOT NULL, stls.FAPieceNumber,\nIF(stle.FAPieceNumber IS NOT NULL, stle.FAPieceNumber,\nIF(stlb.FAPieceNumber IS NOT NULL, stlb.FAPieceNumber,\nIF(stli.FAPieceNumber IS NOT NULL, stli.FAPieceNumber,\nIF(stlw.FAPieceNumber IS NOT NULL, stlw.FAPieceNumber,\nIF(stlsell.FAPieceNumber IS NOT NULL, stlsell.FAPieceNumber,\nIF(stlm.MiscPieceNumber IS NOT NULL, stlm.MiscPieceNumber,0)\n))))))) AS PieceNumber,\n\nCOALESCE(stls.FAShakeQuantity,0) AS ShakeQuantity,\nCOALESCE(stle.FAErectQuantity,0) AS ErectQuantity,\nCONCAT(TRUNCATE(COALESCE(stle.FAErectPercent,0) * 100,0), '%') AS ErectPercent,\nCOALESCE(stlb.FABoltOutQuantity,0) AS BoltoutQuantity,\nCONCAT(TRUNCATE(COALESCE(stlb.FABoltOutPercent,0) * 100,0), '%') AS BoltoutPercent,\nCOALESCE(stli.FAImpQuantity,0) AS ImpQuantity,\nCONCAT(TRUNCATE(COALESCE(stli.FAImpPercent,0) * 100,0), '%') AS ImpPercent,\nCOALESCE(stlw.FAWeldQuantity,0) AS WeldQuantity,\nCONCAT(TRUNCATE(COALESCE(stlw.FAWeldPercent,0) * 100,0), '%') AS WeldPercent,\nCOALESCE(stlsell.FASellQuantity,0) AS SellQuantity,\nCOALESCE(stld.DemoQuantity,0) AS DemoQuantity,\nCOALESCE(stlm.MiscQuantity,0) AS MiscQuantity,\nDATE(sd.ReceivedTime) AS ReceivedTime,\n(ats.Status) AS CurrentStatus\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.REF_ActivityStatuses ats\n    ON ats.ID = ss.fk_ActivityStatus\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nLEFT JOIN SteelShake stls\n\tON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID \nLEFT JOIN SteelErect stle\n\tON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID\nLEFT JOIN SteelBoltOut stlb\n\tON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID\nLEFT JOIN SteelImp stli\n\tON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID\nLEFT JOIN SteelWeld stlw\n\tON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID\nLEFT JOIN SteelSell stlsell\n\tON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID\nLEFT JOIN SteelDemo stld\n\tON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID\nLEFT JOIN SteelMisc stlm\n\tON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND ss.ActivityType IN (61,62,63,64,65,67,68,96)\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\nGROUP BY ss.PSAActivityID, Date(sd.ReceivedTime)",
    "countQueryString" : "select count(*) from (SELECT  \n(IF(stls.FAArea IS NOT NULL, stls.FAArea,\nIF(stle.FAArea IS NOT NULL, stle.FAArea,\nIF(stlb.FAArea IS NOT NULL, stlb.FAArea,\nIF(stli.FAArea IS NOT NULL, stli.FAArea,\nIF(stlw.FAArea IS NOT NULL, stlw.FAArea,\nIF(stlsell.FAArea IS NOT NULL, stlsell.FAArea,\nIF(stlm.MiscArea IS NOT NULL, stlm.MiscArea,0)\n))))))) AS Area,\n\n(IF(stls.FAPieceNumber IS NOT NULL, stls.FAPieceNumber,\nIF(stle.FAPieceNumber IS NOT NULL, stle.FAPieceNumber,\nIF(stlb.FAPieceNumber IS NOT NULL, stlb.FAPieceNumber,\nIF(stli.FAPieceNumber IS NOT NULL, stli.FAPieceNumber,\nIF(stlw.FAPieceNumber IS NOT NULL, stlw.FAPieceNumber,\nIF(stlsell.FAPieceNumber IS NOT NULL, stlsell.FAPieceNumber,\nIF(stlm.MiscPieceNumber IS NOT NULL, stlm.MiscPieceNumber,0)\n))))))) AS PieceNumber,\n\nCOALESCE(stls.FAShakeQuantity,0) AS ShakeQuantity,\nCOALESCE(stle.FAErectQuantity,0) AS ErectQuantity,\nCONCAT(TRUNCATE(COALESCE(stle.FAErectPercent,0) * 100,0), '%') AS ErectPercent,\nCOALESCE(stlb.FABoltOutQuantity,0) AS BoltoutQuantity,\nCONCAT(TRUNCATE(COALESCE(stlb.FABoltOutPercent,0) * 100,0), '%') AS BoltoutPercent,\nCOALESCE(stli.FAImpQuantity,0) AS ImpQuantity,\nCONCAT(TRUNCATE(COALESCE(stli.FAImpPercent,0) * 100,0), '%') AS ImpPercent,\nCOALESCE(stlw.FAWeldQuantity,0) AS WeldQuantity,\nCONCAT(TRUNCATE(COALESCE(stlw.FAWeldPercent,0) * 100,0), '%') AS WeldPercent,\nCOALESCE(stlsell.FASellQuantity,0) AS SellQuantity,\nCOALESCE(stld.DemoQuantity,0) AS DemoQuantity,\nCOALESCE(stlm.MiscQuantity,0) AS MiscQuantity,\nDATE(sd.ReceivedTime) AS ReceivedTime,\n(ats.Status) AS CurrentStatus\n\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsDetails sd\n\tON ss.fk_SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.REF_ActivityStatuses ats\n    ON ats.ID = ss.fk_ActivityStatus\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nLEFT JOIN SteelShake stls\n\tON ss.ActivityType = 61 AND ss.ActivityRowId = stls.ID \nLEFT JOIN SteelErect stle\n\tON ss.ActivityType = 62 AND ss.ActivityRowId = stle.ID\nLEFT JOIN SteelBoltOut stlb\n\tON ss.ActivityType = 63 AND ss.ActivityRowId = stlb.ID\nLEFT JOIN SteelImp stli\n\tON ss.ActivityType = 64 AND ss.ActivityRowId = stli.ID\nLEFT JOIN SteelWeld stlw\n\tON ss.ActivityType = 68 AND ss.ActivityRowId = stlw.ID\nLEFT JOIN SteelSell stlsell\n\tON ss.ActivityType = 65 AND ss.ActivityRowId = stlsell.ID\nLEFT JOIN SteelDemo stld\n\tON ss.ActivityType = 67 AND ss.ActivityRowId = stld.ID\nLEFT JOIN SteelMisc stlm\n\tON ss.ActivityType = 96 AND ss.ActivityRowId = stlm.ID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND ss.ActivityType IN (61,62,63,64,65,67,68,96)\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\nGROUP BY ss.PSAActivityID, Date(sd.ReceivedTime)) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "PM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ConstM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "SiteM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "AreaM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "Super",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "GF",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "Foreman",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2016-05-01",
      "required" : false
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2016-11-17",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprsteelDetailedResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceNumber",
        "fieldName" : "pieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ShakeQuantity",
        "fieldName" : "shakeQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ErectQuantity",
        "fieldName" : "erectQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ErectPercent",
        "fieldName" : "erectPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BoltoutQuantity",
        "fieldName" : "boltoutQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "BoltoutPercent",
        "fieldName" : "boltoutPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ImpQuantity",
        "fieldName" : "impQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "ImpPercent",
        "fieldName" : "impPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldQuantity",
        "fieldName" : "weldQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "WeldPercent",
        "fieldName" : "weldPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SellQuantity",
        "fieldName" : "sellQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "DemoQuantity",
        "fieldName" : "demoQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscQuantity",
        "fieldName" : "miscQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Date",
          "list" : false
        }
      }, {
        "name" : "CurrentStatus",
        "fieldName" : "currentStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDWRByDate" : {
    "name" : "GetReportDWRByDate",
    "description" : "Get Daily Weld Report BY Date Range",
    "version" : "V1",
    "queryString" : "SELECT ss.PSAActivityID AS FieldActivityID, sw.ID AS RowID,\nsw.WeldSpool1, sw.WeldSpool2, sw.WeldLineNumber, sw.WeldDrawingNumber, sw.WeldSheetNumber, sw.WeldNumber,\nsw.WeldStencil, sw.WeldSize, sw.WeldThickness, sw.WeldMaterial, sw.WeldType, sw.WeldLineSpec, sw.WeldProcedure, sw.WeldNotes,\nsd.ReceivedTime\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsWeld sw\n\tON sw.ID = ss.ActivityRowId\n\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = ss.fk_SubmissionId\n    \nWHERE ss.ActivityType = 22 /* AND ss.fk_ActivityStatus IN (5,12) */\nAND sd.ReceivedTime BETWEEN :BeginDate and :EndDate\n\nORDER BY sd.ReceivedTime",
    "countQueryString" : "select count(*) from (SELECT ss.PSAActivityID AS FieldActivityID, sw.ID AS RowID,\nsw.WeldSpool1, sw.WeldSpool2, sw.WeldLineNumber, sw.WeldDrawingNumber, sw.WeldSheetNumber, sw.WeldNumber,\nsw.WeldStencil, sw.WeldSize, sw.WeldThickness, sw.WeldMaterial, sw.WeldType, sw.WeldLineSpec, sw.WeldProcedure, sw.WeldNotes,\nsd.ReceivedTime\nFROM SubmissionStatus ss\n\nLEFT JOIN SubsWeld sw\n\tON sw.ID = ss.ActivityRowId\n\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = ss.fk_SubmissionId\n    \nWHERE ss.ActivityType = 22 /* AND ss.fk_ActivityStatus IN (5,12) */\nAND sd.ReceivedTime BETWEEN :BeginDate and :EndDate\n\nORDER BY sd.ReceivedTime) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BeginDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2016-07-01",
      "required" : false
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2016-07-08",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDwrbyDateResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "FieldActivityID",
        "fieldName" : "fieldActivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RowID",
        "fieldName" : "rowId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "WeldSpool1",
        "fieldName" : "weldSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSpool2",
        "fieldName" : "weldSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldLineNumber",
        "fieldName" : "weldLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldDrawingNumber",
        "fieldName" : "weldDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSheetNumber",
        "fieldName" : "weldSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldNumber",
        "fieldName" : "weldNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldStencil",
        "fieldName" : "weldStencil",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSize",
        "fieldName" : "weldSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "WeldThickness",
        "fieldName" : "weldThickness",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldMaterial",
        "fieldName" : "weldMaterial",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldType",
        "fieldName" : "weldType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldLineSpec",
        "fieldName" : "weldLineSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldProcedure",
        "fieldName" : "weldProcedure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldNotes",
        "fieldName" : "weldNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingCivilPuch" : {
    "name" : "GetSettingCivilPuch",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'CivilSellPunchHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'CivilSellPunchHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingCivilPuchResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingCivilWork" : {
    "name" : "GetSettingCivilWork",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'CivilWorkHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'CivilWorkHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingCivilWorkResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeCTOPercent" : {
    "name" : "GetSettingPipeCTOPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'ClientTurnoverPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'ClientTurnoverPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeCtopercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeHydroPercent" : {
    "name" : "GetSettingPipeHydroPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'HydroHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'HydroHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeHydroPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeMechPercent" : {
    "name" : "GetSettingPipeMechPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'MechHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'MechHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeMechPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeRFTPercent" : {
    "name" : "GetSettingPipeRFTPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'CompleteForTestPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'CompleteForTestPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeRftpercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeTestingPercent" : {
    "name" : "GetSettingPipeTestingPercent",
    "description" : "Gets the Percent of Mech hours for testing",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'TestingHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'TestingHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeTestingPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingProductivityIntervals" : {
    "name" : "GetSettingProductivityIntervals",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT s1.Value1 AS Interval1 , s2.Value1 AS Interval2, s3.Value1 AS Interval3, s4.Value1 AS Interval4\nFROM SETTINGS s1\nJOIN (SELECT Value1 FROM SETTINGS WHERE Label = 'ProductivityInterval2') s2\nJOIN (SELECT Value1 FROM SETTINGS WHERE Label = 'ProductivityInterval3') s3\nJOIN (SELECT Value1 FROM SETTINGS WHERE Label = 'ProductivityInterval4') s4\nWHERE Label = 'ProductivityInterval1'",
    "countQueryString" : "select count(*) from (SELECT s1.Value1 AS Interval1 , s2.Value1 AS Interval2, s3.Value1 AS Interval3, s4.Value1 AS Interval4\nFROM SETTINGS s1\nJOIN (SELECT Value1 FROM SETTINGS WHERE Label = 'ProductivityInterval2') s2\nJOIN (SELECT Value1 FROM SETTINGS WHERE Label = 'ProductivityInterval3') s3\nJOIN (SELECT Value1 FROM SETTINGS WHERE Label = 'ProductivityInterval4') s4\nWHERE Label = 'ProductivityInterval1') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingProductivityIntervalsResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Interval1",
        "fieldName" : "interval1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Interval2",
        "fieldName" : "interval2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Interval3",
        "fieldName" : "interval3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Interval4",
        "fieldName" : "interval4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelBoltoutPercent" : {
    "name" : "GetSettingSteelBoltoutPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelBoltoutHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelBoltoutHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelBoltoutPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelErectPercent" : {
    "name" : "GetSettingSteelErectPercent",
    "description" : "SteelErectHoursPercent",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelErectHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelErectHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelErectPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelImpPercent" : {
    "name" : "GetSettingSteelImpPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelImpHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelImpHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelImpPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelSellPercent" : {
    "name" : "GetSettingSteelSellPercent",
    "description" : "GetSettingSteelSellPercent",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelSellHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelSellHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelSellPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelShakePercent" : {
    "name" : "GetSettingSteelShakePercent",
    "description" : "SteelShakeHoursPercent",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelShakeHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelShakeHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelShakePercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSteelBidActivityQuantities" : {
    "name" : "GetSteelBidActivityQuantities",
    "description" : "Get Steel Quantities for Activity Assign Dialog",
    "version" : "V1",
    "queryString" : "SELECT std.BidID,\n### Quantities ###\n(std.TakeOffQuantity) AS SteelQuantity,\n(std.WeldCount) AS WeldQuantity,  \n\n### Hours ###\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent'),0)) AS ShakeHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent'),0)) AS ErectHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent'),0)) AS BoltoutHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent'),0)) AS ImpHours,\n(COALESCE(std.WeldHours,0)) AS WeldHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent'),0)) AS SellHours,\n(COALESCE(IF(std.ActivityType = 'D', std.SteelHours, 0),0)) AS DemoHours,\n(COALESCE(IF(std.ActivityType = 'MISC', std.SteelHours, 0),0)) AS MiscHours,\n\n### Installed Quantities ###\nsum(COALESCE(er.InstalledShake,0)) AS InstalledShake,\nsum(COALESCE(er.InstalledErect,0)) AS InstalledErect,\nsum(COALESCE(er.InstalledBoltout,0)) AS InstalledBoltout,\nsum(COALESCE(er.InstalledImp,0)) AS InstalledImp,\nsum(COALESCE(er.InstalledWeld,0)) AS InstalledWeld,\nsum(COALESCE(er.InstalledSell,0)) AS InstalledSell,\nsum(COALESCE(er.InstalledDemo,0)) AS InstalledDemo,\nsum(COALESCE(er.InstalledMisc,0)) AS InstalledMisc\n\nFROM (SELECT BidID, TestPackageNumber, ActivityType, \n\t\tsum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours  \n\t\tFROM SteelTrackerDetails\n        GROUP BY BidID) std\n\nLEFT JOIN(SELECT std.BidID,\nCOALESCE(stls.FAShakeQuantity,0) AS InstalledShake,\nCOALESCE(stle.FAErectQuantity,0) AS InstalledErect,\nCOALESCE(stlb.FABoltOutQuantity,0) AS InstalledBoltout,\nCOALESCE(stli.FAImpQuantity,0) AS InstalledImp,\nCOALESCE(stlw.FAWeldQuantity,0) AS InstalledWeld,\nCOALESCE(stlsell.FASellQuantity,0) AS InstalledSell,\nCOALESCE(stld.DemoQuantity,0) AS InstalledDemo,\nCOALESCE(stlm.MiscQuantity,0) AS InstalledMisc\nFROM SteelTrackerDetails std\n\nLEFT JOIN SubmissionStatus ss\n\tON ss.ActivityType IN (60,61,62,63,64,65,66,67,68,96)\n    AND ss.fk_BidIDAssigned = std.BidID\nLEFT JOIN SteelShake stls\n\tON stls.ID = ss.ActivityRowId AND ss.ActivityType = 61 AND stls.FARework = 0\nLEFT JOIN SteelErect stle\n\tON stle.ID = ss.ActivityRowId AND ss.ActivityType = 62 AND stle.FARework = 0\nLEFT JOIN SteelBoltOut stlb\n\tON stlb.ID = ss.ActivityRowId AND ss.ActivityType = 63 AND stlb.FARework = 0\nLEFT JOIN SteelImp stli\n\tON stli.ID = ss.ActivityRowId AND ss.ActivityType = 64 AND stli.FARework = 0\nLEFT JOIN SteelSell stlsell\n\tON stlsell.ID = ss.ActivityRowId AND ss.ActivityType = 65 AND stlsell.FARework = 0\nLEFT JOIN SteelDemo stld\n\tON stld.ID = ss.ActivityRowId AND ss.ActivityType = 67\nLEFT JOIN SteelWeld stlw\n\tON stlw.ID = ss.ActivityRowId AND ss.ActivityType = 68 AND stlw.FARework = 0\nLEFT JOIN SteelMisc stlm\n\tON stlm.ID = ss.ActivityRowId AND ss.ActivityType = 96 AND stlm.MiscRework = 0\nWHERE ss.fk_ActivityStatus IN (5,12)\n) er\n\tON er.BidID = std.BidID\n\nWHERE std.BidID = :BidID\nGROUP BY BidID",
    "countQueryString" : "select count(*) from (SELECT std.BidID,\n### Quantities ###\n(std.TakeOffQuantity) AS SteelQuantity,\n(std.WeldCount) AS WeldQuantity,  \n\n### Hours ###\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent'),0)) AS ShakeHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent'),0)) AS ErectHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent'),0)) AS BoltoutHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent'),0)) AS ImpHours,\n(COALESCE(std.WeldHours,0)) AS WeldHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent'),0)) AS SellHours,\n(COALESCE(IF(std.ActivityType = 'D', std.SteelHours, 0),0)) AS DemoHours,\n(COALESCE(IF(std.ActivityType = 'MISC', std.SteelHours, 0),0)) AS MiscHours,\n\n### Installed Quantities ###\nsum(COALESCE(er.InstalledShake,0)) AS InstalledShake,\nsum(COALESCE(er.InstalledErect,0)) AS InstalledErect,\nsum(COALESCE(er.InstalledBoltout,0)) AS InstalledBoltout,\nsum(COALESCE(er.InstalledImp,0)) AS InstalledImp,\nsum(COALESCE(er.InstalledWeld,0)) AS InstalledWeld,\nsum(COALESCE(er.InstalledSell,0)) AS InstalledSell,\nsum(COALESCE(er.InstalledDemo,0)) AS InstalledDemo,\nsum(COALESCE(er.InstalledMisc,0)) AS InstalledMisc\n\nFROM (SELECT BidID, TestPackageNumber, ActivityType, \n\t\tsum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours  \n\t\tFROM SteelTrackerDetails\n        GROUP BY BidID) std\n\nLEFT JOIN(SELECT std.BidID,\nCOALESCE(stls.FAShakeQuantity,0) AS InstalledShake,\nCOALESCE(stle.FAErectQuantity,0) AS InstalledErect,\nCOALESCE(stlb.FABoltOutQuantity,0) AS InstalledBoltout,\nCOALESCE(stli.FAImpQuantity,0) AS InstalledImp,\nCOALESCE(stlw.FAWeldQuantity,0) AS InstalledWeld,\nCOALESCE(stlsell.FASellQuantity,0) AS InstalledSell,\nCOALESCE(stld.DemoQuantity,0) AS InstalledDemo,\nCOALESCE(stlm.MiscQuantity,0) AS InstalledMisc\nFROM SteelTrackerDetails std\n\nLEFT JOIN SubmissionStatus ss\n\tON ss.ActivityType IN (60,61,62,63,64,65,66,67,68,96)\n    AND ss.fk_BidIDAssigned = std.BidID\nLEFT JOIN SteelShake stls\n\tON stls.ID = ss.ActivityRowId AND ss.ActivityType = 61 AND stls.FARework = 0\nLEFT JOIN SteelErect stle\n\tON stle.ID = ss.ActivityRowId AND ss.ActivityType = 62 AND stle.FARework = 0\nLEFT JOIN SteelBoltOut stlb\n\tON stlb.ID = ss.ActivityRowId AND ss.ActivityType = 63 AND stlb.FARework = 0\nLEFT JOIN SteelImp stli\n\tON stli.ID = ss.ActivityRowId AND ss.ActivityType = 64 AND stli.FARework = 0\nLEFT JOIN SteelSell stlsell\n\tON stlsell.ID = ss.ActivityRowId AND ss.ActivityType = 65 AND stlsell.FARework = 0\nLEFT JOIN SteelDemo stld\n\tON stld.ID = ss.ActivityRowId AND ss.ActivityType = 67\nLEFT JOIN SteelWeld stlw\n\tON stlw.ID = ss.ActivityRowId AND ss.ActivityType = 68 AND stlw.FARework = 0\nLEFT JOIN SteelMisc stlm\n\tON stlm.ID = ss.ActivityRowId AND ss.ActivityType = 96 AND stlm.MiscRework = 0\nWHERE ss.fk_ActivityStatus IN (5,12)\n) er\n\tON er.BidID = std.BidID\n\nWHERE std.BidID = :BidID\nGROUP BY BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "9004",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSteelBidActivityQuantitiesResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "SteelQuantity",
        "fieldName" : "steelQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldQuantity",
        "fieldName" : "weldQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ShakeHours",
        "fieldName" : "shakeHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ErectHours",
        "fieldName" : "erectHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "BoltoutHours",
        "fieldName" : "boltoutHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ImpHours",
        "fieldName" : "impHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldHours",
        "fieldName" : "weldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellHours",
        "fieldName" : "sellHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "DemoHours",
        "fieldName" : "demoHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "MiscHours",
        "fieldName" : "miscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledShake",
        "fieldName" : "installedShake",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledErect",
        "fieldName" : "installedErect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledBoltout",
        "fieldName" : "installedBoltout",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledImp",
        "fieldName" : "installedImp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledWeld",
        "fieldName" : "installedWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledSell",
        "fieldName" : "installedSell",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledDemo",
        "fieldName" : "installedDemo",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledMisc",
        "fieldName" : "installedMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      } ]
    }
  },
  "GetSuperRecentActivites" : {
    "name" : "GetSuperRecentActivites",
    "description" : "Get recent activites modified by a given user super review page",
    "version" : "V1",
    "queryString" : "SELECT ss.PSAActivityID, at.ActivityType, ats.Status, ss.TimeStamp\nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\ton at.ID = ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats \n\ton ats.ID = ss.fk_ActivityStatus\n\nWHERE ss.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW() \nAND ss.ActivityType <> 0\nAND ss.fk_ActivityStatus <> 10 \nAND ss.fk_ActivityStatus <> 11\nAND (ss.fk_LastModifiedBy = :UserID OR ss.fk_LastModifiedBy = :SelectedSuper)\nORDER BY ss.TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT ss.PSAActivityID, at.ActivityType, ats.Status, ss.TimeStamp\nFROM SubmissionStatus ss\nLEFT JOIN PSA.REF_ActivityTypes at\n\ton at.ID = ss.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats \n\ton ats.ID = ss.fk_ActivityStatus\n\nWHERE ss.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW() \nAND ss.ActivityType <> 0\nAND ss.fk_ActivityStatus <> 10 \nAND ss.fk_ActivityStatus <> 11\nAND (ss.fk_LastModifiedBy = :UserID OR ss.fk_LastModifiedBy = :SelectedSuper)\nORDER BY ss.TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "UserID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SelectedSuper",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "46",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSuperRecentActivitesResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PSAActivityID",
        "fieldName" : "psaactivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetUniqueDrawingNumber" : {
    "name" : "GetUniqueDrawingNumber",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT DISTINCT td.EngDrawingNumber \nFROM trackerDetails td",
    "countQueryString" : "select count(*) from (SELECT DISTINCT td.EngDrawingNumber \nFROM trackerDetails td) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetUniqueDrawingNumberResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetUniqueLineNumbers" : {
    "name" : "GetUniqueLineNumbers",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT DISTINCT td.LineNumber \nFROM trackerDetails td",
    "countQueryString" : "select count(*) from (SELECT DISTINCT td.LineNumber \nFROM trackerDetails td) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetUniqueLineNumbersResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "LineNumber",
        "fieldName" : "lineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "UnLockSSActivity" : {
    "name" : "UnLockSSActivity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE SubmissionStatus ss\nSET ss.LockField = null\nWHERE ss.PSAActivityID = :PSAActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "PSAActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "158",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UnLockSsactivityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateBoltUp" : {
    "name" : "UpdateBoltUp",
    "description" : "Updates the Job####.SubsBoltUp table with data from inputs",
    "version" : "V1",
    "queryString" : "UPDATE SubsBoltUp \nSET BoltUpSpool1 = :Spool1,\nBoltUpSpool2 = :Spool2,\nBoltUpDrawingNumber = :DrawingNumber,\nBoltUpLineNumber = :LineNumber,\nBoltUpSheetNumber = :SheetNumber,\nBoltUpSize = :Size,\nBoltUpQuantity = :Quantity,\nBoltUpRework = :Rework,\nBoltUpNotes = :Notes\nWHERE ID= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Spool1",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1-A",
      "required" : false
    }, {
      "name" : "Spool2",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "123",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "123",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Test",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateBoltUpRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateBoltupQuantity" : {
    "name" : "UpdateBoltupQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE SubsBoltUp \nSET BoltUpQuantity = :BoltUpQuantity\nWHERE ID= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "BoltUpQuantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "32",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateBoltupQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateCivilFA" : {
    "name" : "UpdateCivilFA",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `CivilFA` \nSET \n`FADescription`= :Description, \n`FAFoundation`= :Foundation, \n`FADrawingNumber`= :Drawing,\n`FADetailDrawingNumber`= :DetailDrawing,\n`FAPercentComplete`= :Percent,\n`FAQuantity`= :Quantity,\n`FARework`= :Rework,\n`FANotes`= :Notes \nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Description",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Foundation",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Drawing",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "DetailDrawing",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "20",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateCivilFaRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateCivilFAQuantity" : {
    "name" : "UpdateCivilFAQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `CivilFA` \nSET \n`FAPercentComplete`= :Percent,\n`FAQuantity`= :Quantity\nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateCivilFaquantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateCivilMisc" : {
    "name" : "UpdateCivilMisc",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `CivilMisc` \nSET \n`MiscFoundation` = :Foundation,\n`MiscDrawingNumber` = :Drawing,\n`MiscDetailDrawingNumber` = :DetailDrawing,\n`MiscPercentComplete`= :Percent,\n`MiscRework` = :Rework,\n`MiscNotes` = :Notes\nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Foundation",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Drawing",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "DetailDrawing",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateCivilMiscRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateCivilMiscQuantity" : {
    "name" : "UpdateCivilMiscQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `CivilMisc` \nSET \n`MiscPercentComplete`= :Percent\nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateCivilMiscQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateCivilSellPackage" : {
    "name" : "UpdateCivilSellPackage",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `CivilSellPackage` \nSET \n`SellTestPackageNumber`= :TestPackageNumber, \n`SellNotes`= :Notes \nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "TestPackageNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Update SellPackage Test",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateCivilSellPackageRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateCutPrep" : {
    "name" : "UpdateCutPrep",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE SubsWeld\nSET\nWeldDrawingNumber = :DrawingNumber,\nWeldLineNumber = :LineNumber,\nWeldSheetNumber = :SheetNumber,\nWeldSize = :Size,\nWeldThickness = :Thickness,\nWeldRework = :Rework,\nWeldNotes = :Notes\nWHERE ID = :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Thickness",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateCutPrepRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateDemo" : {
    "name" : "UpdateDemo",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE SubsDemo\nSET \n\nDemoDrawingNumber = :DrawingNumber,\nDemoLineNumber = :LineNumber,\nDemoSheetNumber = :SheetNumber,\nDemoQuantity = :Quantity,\nDemoSize = :Size,\nDemoNotes = :Notes\nWHERE ID= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateDemoRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateDemoQuantity" : {
    "name" : "UpdateDemoQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE SubsDemo\nSET \nDemoQuantity = :Quantity\nWHERE ID= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateDemoQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateEWO" : {
    "name" : "UpdateEWO",
    "description" : "Update Job####.SubsEWO from input fields",
    "version" : "V1",
    "queryString" : "UPDATE SubsEWO\nSET \n\nEWONumber = :EWONumber,\nEWOHours = :EWOHours,\nEWODrawingNumber = :DrawingNumber,\nEWOLineNumber = :LineNumber,\nEWOSheetNumber = :SheetNumber,\nEWORework = :Rework,\nEWONotes = :Notes\nWHERE ID= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "EWONumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "EWOHours",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateEwoRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateEquipFA" : {
    "name" : "UpdateEquipFA",
    "description" : "name",
    "version" : "V2",
    "queryString" : "UPDATE `EquipFA` \nSET \n`FATagNumber`= :TagNumber, \n`FAActivitySelect`= :Activity, \n`FAQuantity`= :Quantity,\n`FAPercentComplete`= :Percent,\n`FARework`= :Rework,\n`FANotes`= :Notes \nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "TagNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Activity",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Quantity",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Percent",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Rework",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "RowID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "11",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateEquipFaRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateEquipFAQuantity" : {
    "name" : "UpdateEquipFAQuantity",
    "description" : "Update Quantity only for Equip FA",
    "version" : "V2",
    "queryString" : "UPDATE `EquipFA` \nSET \n`FAPercentComplete`= :Percent\nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Percent",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : ".4",
      "required" : true
    }, {
      "name" : "RowID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "15",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateEquipFaquantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateErection" : {
    "name" : "UpdateErection",
    "description" : "Updates Job####.SubsErection table with data inputs",
    "version" : "V1",
    "queryString" : "UPDATE SubsErection\nSET\nErectionSpool1 = :Spool1,\nErectionLengthSpool1 = :Spool1Length,\nErectionSpool2 = :Spool2,\nErectionLengthSpool2 = :Spool2Length,\nErectionSpool3 = :Spool3,\nErectionLengthSpool3 = :Spool3Length,\nErectionSpool4 = :Spool4,\nErectionLengthSpool4 = :Spool4Length,\nErectionSpool5 = :Spool5,\nErectionLengthSpool5 = :Spool5Length,\nErectionSpool6 = :Spool6,\nErectionLengthSpool6 = :Spool6Length,\nErectionOnCords = :OnCords,\nErectionDrawingNumber = :DrawingNumber,\nErectionLineNumber = :LineNumber,\nErectionSheetNumber = :SheetNumber,\nErectionPipeSize = :Size,\nErectionRework = :Rework,\nErectionNotes = :Notes\nWHERE ID = :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Spool1",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool1Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool2",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool2Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool3",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool3Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool4",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool4Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool5",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool5Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool6",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool6Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "OnCords",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateErectionRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateErectionQuantity" : {
    "name" : "UpdateErectionQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE SubsErection\nSET\nErectionLengthSpool1 = :Spool1Length\nWHERE ID = :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Spool1Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "333",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "16",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateErectionQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateMisc" : {
    "name" : "UpdateMisc",
    "description" : "Update Job####.SubsMisc table with data inputs",
    "version" : "V1",
    "queryString" : "UPDATE SubsMisc\nSET\nMiscDrawingNumber = :DrawingNumber,\nMiscLineNumber = :LineNumber,\nMiscSheetNumber = :SheetNumber,\nMiscQuantity = :Quantity,\nMiscRework = :Rework,\nMiscNotes = :Notes\nWHERE ID = :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateMiscRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateMiscQuantity" : {
    "name" : "UpdateMiscQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE SubsMisc\nSET\nMiscQuantity = :Quantity\nWHERE ID = :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateMiscQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateOverrideActivityQuantity" : {
    "name" : "UpdateOverrideActivityQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE SubsOverride\nSET\nORQuantity = :NewQuantity\nWHERE ID = :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "NewQuantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "11",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "10",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateOverrideActivityQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSS" : {
    "name" : "UpdateSS",
    "description" : "Update Job####.SumbissionStatus\nModifiedBY, ReviewedBY, and ApprovedBY",
    "version" : "V1",
    "queryString" : "UPDATE SubmissionStatus ss\nSET \nss.fk_ActivityStatus = :ActivityStatus,\nss.fk_LastModifiedBy = :UserID,\nss.fk_BidIDAssigned = IF(:BidID = 0, ss.fk_BidIDAssigned, :BidID)\nWHERE ss.PSAActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "ActivityStatus",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "UserID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSsRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingCivilPunch" : {
    "name" : "UpdateSettingCivilPunch",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='CivilSellPunchHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : ".05",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingCivilPunchRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingCivilWork" : {
    "name" : "UpdateSettingCivilWork",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='CivilWorkHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : ".95",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingCivilWorkRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeCTOPercent" : {
    "name" : "UpdateSettingPipeCTOPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='ClientTurnoverPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : ".35",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeCtopercentRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeHydroPercent" : {
    "name" : "UpdateSettingPipeHydroPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='HydroHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : ".3",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeHydroPercentRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeMechPercent" : {
    "name" : "UpdateSettingPipeMechPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='MechHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : ".9",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeMechPercentRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeRFTPercent" : {
    "name" : "UpdateSettingPipeRFTPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='CompleteForTestPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : ".35",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeRftpercentRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeTestingPercent" : {
    "name" : "UpdateSettingPipeTestingPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='TestingHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : ".1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeTestingPercentRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelBoltout" : {
    "name" : "UpdateSettingSteelBoltout",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelBoltoutHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : ".15",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelBoltoutRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelErect" : {
    "name" : "UpdateSettingSteelErect",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelErectHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : ".35",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelErectRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelImp" : {
    "name" : "UpdateSettingSteelImp",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelImpHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : ".35",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelImpRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelSell" : {
    "name" : "UpdateSettingSteelSell",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelSellHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : ".1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelSellRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelShake" : {
    "name" : "UpdateSettingSteelShake",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelShakeHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : ".05",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelShakeRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelBoltout" : {
    "name" : "UpdateSteelBoltout",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelBoltOut` \nSET \n`FAArea`= :Area, \n`FAPieceNumber`= :Piece, \n`FABoltOutQuantity`= :Quantity,\n`FABoltOutPercent`= :Percent,\n`FARework`= :Rework, \n`FANotes`= :Notes \nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "CWP-063-S-002",
      "required" : false
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "19BP2",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "20",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelBoltoutRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelBoltoutQuantity" : {
    "name" : "UpdateSteelBoltoutQuantity",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelBoltOut` \nSET \n \n`FABoltOutQuantity`= :Quantity,\n`FABoltOutPercent`= :Percent\nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelBoltoutQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelDemo" : {
    "name" : "UpdateSteelDemo",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelDemo` \nSET \n`DemoArea`= :Area, \n`DemoSteelType`= :SteelType, \n`DemoSize`= :Size,\n`DemoQuantity`= :Quantity,\n`DemoNotes`= :Notes\nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "CWP-059-S-001A",
      "required" : false
    }, {
      "name" : "SteelType",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "Size",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "12\"",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "19",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Query update Test",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "22",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelDemoRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelDemoQuantity" : {
    "name" : "UpdateSteelDemoQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelDemo` \nSET \n\n`DemoQuantity`= :Quantity\nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "25",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "22",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelDemoQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelErect" : {
    "name" : "UpdateSteelErect",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelErect` \nSET \n`FAArea`= :Area, \n`FAPieceNumber`= :Piece, \n`FAErectQuantity`= :Quantity,\n`FAErectPercent`= :Percent,\n`FARework`= :Rework, \n`FANotes`= :Notes \nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "CWP-063-S-002",
      "required" : false
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "19BP2",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "28",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelErectRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelErectQuantity" : {
    "name" : "UpdateSteelErectQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelErect` \nSET \n\n`FAErectQuantity`= :Quantity,\n`FAErectPercent`= :Percent\n\nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelErectQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelImp" : {
    "name" : "UpdateSteelImp",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelImp` \nSET \n`FAArea`= :Area, \n`FAPieceNumber`= :Piece, \n`FAImpQuantity`= :Quantity,\n`FAImpPercent`= :Percent,\n`FARework`= :Rework, \n`FANotes`= :Notes \nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "CWP-063-S-002",
      "required" : false
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "29CP1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "13",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelImpRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelImpQuantity" : {
    "name" : "UpdateSteelImpQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelImp` \nSET \n\n`FAImpQuantity`= :Quantity,\n`FAImpPercent`= :Percent\nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelImpQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelMisc" : {
    "name" : "UpdateSteelMisc",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelMisc` \nSET \n`MiscArea`= :Area, \n`MiscPieceNumber`= :Piece, \n`MiscQuantity`= :Quantity, \n`MiscRework`= :Rework, \n`MiscNotes`= :Notes \nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "CWP-059-S-001A",
      "required" : false
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "100BP1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "36",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelMiscRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelMiscQuantity" : {
    "name" : "UpdateSteelMiscQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelMisc` \nSET \n\n`MiscQuantity`= :Quantity\nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelMiscQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelSell" : {
    "name" : "UpdateSteelSell",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelSell` \nSET \n`FAArea`= :Area, \n`FAPieceNumber`= :Piece, \n`FASellQuantity`= :Quantity,\n`FARework`= :Rework, \n`FANotes`= :Notes \nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "CWP-059-S-001A",
      "required" : false
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "10BP1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "25",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelSellRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelSellPackage" : {
    "name" : "UpdateSteelSellPackage",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelSellPackage` \nSET \n`SellTestPackageNumber`= :TestPackage,\n`SellNotes`= :Notes \nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "34",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelSellPackageRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelSellQuantity" : {
    "name" : "UpdateSteelSellQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelSell` \nSET \n\n`FASellQuantity`= :Quantity\nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelSellQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelShake" : {
    "name" : "UpdateSteelShake",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelShake` \nSET \n`FAArea`= :Area, \n`FAPieceNumber`= :Piece, \n`FAShakeQuantity`= :Quantity, \n`FARework`= :Rework, \n`FANotes`= :Notes \nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "CWP-063-S-002",
      "required" : false
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "50BRP4R",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Query Test2",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "45",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelShakeRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelShakeQuantity" : {
    "name" : "UpdateSteelShakeQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelShake` \nSET \n\n`FAShakeQuantity`= :Quantity\n\nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "45",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelShakeQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelWeld" : {
    "name" : "UpdateSteelWeld",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelWeld` \nSET \n`FAArea`= :Area, \n`FAPieceNumber`= :Piece, \n`FAWeldQuantity`= :Quantity,\n`FAWeldPercent`= :Percent,\n`FARework`= :Rework, \n`FANotes`= :Notes \nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "CWP-063-S-002",
      "required" : false
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "63A2",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "character",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "10",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelWeldRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelWeldQuantity" : {
    "name" : "UpdateSteelWeldQuantity",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelWeld` \nSET \n\n`FAWeldQuantity`= :Quantity,\n`FAWeldPercent`= :Percent\nWHERE `ID`= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelWeldQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSubDetails" : {
    "name" : "UpdateSubDetails",
    "description" : "Updates Job####.SubsDetails with Data inputs",
    "version" : "V1",
    "queryString" : "UPDATE SubsDetails\nSET\nTemperature = :Temp,\nPrecipitation = :Precipitation,\nWind = :Wind\nWHERE SubmissionID = :SubmissionID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Temp",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Good",
      "required" : false
    }, {
      "name" : "Precipitation",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Clear",
      "required" : false
    }, {
      "name" : "Wind",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "Calm",
      "required" : false
    }, {
      "name" : "SubmissionID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "379",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSubDetailsRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSupports" : {
    "name" : "UpdateSupports",
    "description" : "Update Job####.SubsSupports with Data inputs",
    "version" : "V1",
    "queryString" : "UPDATE SubsSupports\nSET\nSupportPartNumber = :PartNumber,\nSupportQuantity = :Quantity,\nSupportDrawingNumber = :DrawingNumber,\nSupportLineNumber = :LineNumber,\nSupportSheetNumber = :Sheet,\nSupportComplete = :Complete,\nSupportShared = :Shared,\nSupportPercentCompleted = :PercentComplete,\nSupportRework = :Rework,\nSupportNotes = :Notes\nWHERE ID = :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "PartNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Sheet",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Complete",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Shared",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "PercentComplete",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSupportsRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSupportsQuantity" : {
    "name" : "UpdateSupportsQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE SubsSupports\nSET\nSupportQuantity = :Quantity\nWHERE ID = :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSupportsQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateTesting" : {
    "name" : "UpdateTesting",
    "description" : "Update Job####.SubsTesting with input fields",
    "version" : "V1",
    "queryString" : "UPDATE SubsTesting\nSET \n\nTestingTestPackageNumber = :TestPackageNumber,\nTestingRework = :Rework,\nTestingNotes = :Notes\nWHERE ID= :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "TestPackageNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateTestingRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateTrim" : {
    "name" : "UpdateTrim",
    "description" : "Update Job####.SubsTrim with data inputs",
    "version" : "V1",
    "queryString" : "UPDATE SubsTrim\nSET\nTrimSize = :Size,\nTrimQuantity = :PlugQuantity,\nTrimHandleType = :HandleType,\nTrimInstrumentType = :InstType,\nTrimDrawingNumber = :DrawingNumber,\nTrimLineNumber = :LineNumber,\nTrimSheetNumber = :SheetNumber,\nTrimRework = :Rework,\nTrimNotes = :Notes\nWHERE ID = :RowId",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1.0",
      "required" : false
    }, {
      "name" : "PlugQuantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "HandleType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "InstType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowId",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateTrimRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateTrimQuantity" : {
    "name" : "UpdateTrimQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE SubsTrim\nSET\nTrimQuantity = :Quantity\nWHERE ID = :RowId",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowId",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateTrimQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateWeld" : {
    "name" : "UpdateWeld",
    "description" : "Update Job####.SubsWeld with data inputs",
    "version" : "V1",
    "queryString" : "UPDATE SubsWeld\nSET\nWeldSpool1 = :Spool1,\nWeldSpool2 = :Spool2,\nWeldDrawingNumber = :DrawingNumber,\nWeldLineNumber = :LineNumber,\nWeldSheetNumber = :SheetNumber,\nWeldLineSpec = :LineSpec,\nWeldNumber = :WeldNumber,\nWeldStencil = :Stencil,\nWeldSize = :Size,\nWeldThickness = :Thickness,\nWeldType = :WeldType,\nWeldPosition = :WeldPosition,\nWeldMaterial = :Material,\nWeldProcedure = :Procedure,\nWeldComplete = :Complete,\nWeldShared = :Shared,\nWeldPercentCompleted = :PercentComplete,\nWeldRework = :Rework,\nWeldNotes = :Notes\nWHERE ID = :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Spool1",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool2",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineSpec",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "WeldNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "",
      "required" : false
    }, {
      "name" : "Stencil",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Thickness",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "WeldType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "WeldPosition",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Material",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Procedure",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Complete",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Shared",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "PercentComplete",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateWeldRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateWeldQuantity" : {
    "name" : "UpdateWeldQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE SubsWeld\nSET\nWeldPercentCompleted = :PercentComplete\nWHERE ID = :RowID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "PercentComplete",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "RowID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateWeldQuantityRequest",
      "method" : "PUT"
    },
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  }
}