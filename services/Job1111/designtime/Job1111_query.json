{
  "CheckSASLock" : {
    "name" : "CheckSASLock",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT sas.LockField \nFROM SubmissionActivityStatus sas\nWHERE ActivityID = :FieldActivityID",
    "countQueryString" : "select count(*) from (SELECT sas.LockField \nFROM SubmissionActivityStatus sas\nWHERE ActivityID = :FieldActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "FieldActivityID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.CheckSaslockResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "LockField",
        "fieldName" : "lockField",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "CreateSSNote" : {
    "name" : "CreateSSNote",
    "description" : "Creates a Submission Note",
    "version" : "V1",
    "queryString" : "INSERT INTO SASNotes (`ActivityID`, `UserID` ,`Notes`) \nVALUES (:FieldActivityID, :CreatedBy ,:Note)",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "INSERT",
    "parameters" : [ {
      "name" : "FieldActivityID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "CreatedBy",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Note",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "TestNote",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.CreateSsnoteRequest",
      "method" : "POST"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "GetActivitiesPendingApproval" : {
    "name" : "GetActivitiesPendingApproval",
    "description" : "Get all activities pending PS Approval",
    "version" : "V1",
    "queryString" : "SELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \npe.ErectionSpool1 AS Spool1,COALESCE(pe.ErectionSpool2, 'N/A') AS Spool2, \npe.ErectionLineNumber AS Line1, pe.ErectionDrawingNumber AS Drawing1, pe.ErectionSheetNumber AS Sheet1, \npe.ErectionLineNumber AS Line2, pe.ErectionDrawingNumber AS Drawing2, pe.ErectionSheetNumber AS Sheet2, \npe.ErectionPipeSize AS Size, pe.ErectionNotes AS Notes,\n(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0)) AS Quantity, \n'N/A' AS Area, 'N/A' AS PercentClaim, pe.ErectionRework AS Rework\nFROM SubmissionActivityStatus sas\n\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeErection pe\n\tON pe.ActivityID = sas.ActivityID\n\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n \n \nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \npb.BoltUpSpool1, pb.BoltUpSpool2, \npb.BoltUpLineNumber AS Line1, pb.BoltUpDrawingNumber AS DWG1, pb.BoltUpSheetNumber AS Sheet1,\nCOALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,\npb.BoltUpSize , pb.BoltUpNotes, 1 AS BoltUpInstalled\n, 'N/A' AS Area, 'N/A' AS PercentClaim, pb.BoltUpRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeBoltUp pb\n\tON pb.ActivityID = sas.ActivityID\nLEFT JOIN REF_SpoolList sl\n\tON sl.SpoolNumber = pb.BoltUpSpool2\n\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \npw.WeldSpool1, pw.WeldSpool2, \npw.WeldLineNumber, pw.WeldDrawingNumber, pw.WeldSheetNumber, \nCOALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,\npw.WeldSize , pw.WeldNotes, COALESCE((pw.WeldPercentCompleted),0) AS WeldInstalled\n, 'N/A' AS Area, 'N/A' AS PercentClaim, pw.WeldRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus \nJOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID\nLEFT JOIN REF_SpoolList sl\n\tON sl.SpoolNumber = pw.WeldSpool2\n    \nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \npt.TrimLineNumber, pt.TrimDrawingNumber, pt.TrimSheetNumber, \npt.TrimLineNumber AS Line2, pt.TrimDrawingNumber AS DWG2, pt.TrimSheetNumber AS Sheet2,\npt.TrimSize , pt.TrimNotes, pt.TrimQuantity\n, 'N/A' AS Area, 'N/A' AS PercentClaim, pt.TrimRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus      \nJOIN PipeTrim pt\n\tON pt.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \npsu.SupportLineNumber, psu.SupportDrawingNumber, psu.SupportSheetNumber, \npsu.SupportLineNumber AS Line2, psu.SupportDrawingNumber AS DWG2, psu.SupportSheetNumber AS Sheet2,\n'N/A' AS SupportSize , psu.SupportNotes, COALESCE((psu.SupportPercentCompleted),0) AS SupportInstalled\n, 'N/A' AS Area, 'N/A' AS PercentClaim, psu.SupportRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeSupports psu\n\tON psu.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \npte.TestingTestPackageNumber, 'N/A' AS DrawingNumber, pte.TestingRework AS SheetNumber, \npte.TestingTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2,\n'N/A' AS Size , pte.TestingNotes, 1 AS TestingQuantity, \n'N/A' AS Area, 'N/A' AS PercentClaim, pte.TestingRework AS Rework\n            \nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeTesting pte\n\tON pte.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \npd.DemoLineNumber, pd.DemoDrawingNumber, pd.DemoSheetNumber, \npd.DemoLineNumber AS Line2, pd.DemoDrawingNumber AS DWG2, pd.DemoSheetNumber AS Sheet2,\n'N/A' AS DemoSize , pd.DemoNotes, COALESCE(pd.DemoQuantity,0) AS DemoQuantity,\n'N/A' AS Area, 'N/A' AS PercentClaim, 0 AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeDemo pd\n\tON pd.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n \nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \npm.MiscLineNumber, pm.MiscDrawingNumber, pm.MiscSheetNumber, \npm.MiscLineNumber AS Line2, pm.MiscDrawingNumber AS DWG2, pm.MiscSheetNumber AS Sheet2,\n'N/A' AS MiscSize , pm.MiscNotes, pm.MiscQuantity AS MiscInstalled,\n'N/A' AS Area, 'N/A' AS PercentClaim, pm.MiscRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\t\nJOIN PipeMisc pm\n\tON pm.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \npEWO.EWOLineNumber, pEWO.EWODrawingNumber, pEWO.EWOSheetNumber, \npEWO.EWOLineNumber AS Line2, pEWO.EWODrawingNumber AS DWG2, pEWO.EWOSheetNumber AS Sheet2,\n'N/A' AS EWOSize , pEWO.EWONotes, 'N/A' AS TestingEarned,\n'N/A' AS Area, 'N/A' AS PercentClaim, pEWO.EWORework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeEWO pEWO\n\tON pEWO.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n \nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstls.FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstls.FANotes, stls.FAShakeQuantity, stls.FAArea, 1.00 AS PercentClaim, stls.FARework AS Rework\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelShake stls\n\tON stls.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstle.FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstle.FANotes, stle.FAErectQuantity, stle.FAArea, stle.FAErectPercent, stle.FARework AS Rework\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelErect stle\n\tON stle.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstlb.FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlb.FANotes, stlb.FABoltOutQuantity, stlb.FAArea, stlb.FABoltOutPercent , stlb.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelBoltOut stlb\n\tON stlb.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstli.FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstli.FANotes, stli.FAImpQuantity, stli.FAArea, stli.FAImpPercent , stli.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelImp stli\n\tON stli.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstlw.FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlw.FANotes, stlw.FAWeldQuantity, stlw.FAArea, stlw.FAWeldPercent , stlw.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelWeld stlw\n\tON stlw.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstlsell.FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlsell.FANotes, stlsell.FASellQuantity, stlsell.FAArea, 1.00 AS PercentClaim , stlsell.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelSell stlsell\n\tON stlsell.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nrst.SteelName AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, DemoSize AS Size , \nstld.DemoNotes, stld.DemoQuantity, stld.DemoArea, 1.00 AS PercentClaim, 0 AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nJOIN PSA.REF_SteelTypes rst\n\tON stld.DemoSteelType = rst.ID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \nstlsp.SellTestPackageNumber AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \nstlsp.SellTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlsp.SellNotes, 1, 'N/A', 1.00 AS PercentClaim, 0 AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelSellPackage stlsp\n\tON stlsp.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstlm.MiscPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlm.MiscNotes, stlm.MiscQuantity, stlm.MiscArea, 1.00 AS PercentClaim, stlm.MiscRework AS Rework\n \nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, \ncfa.FAFoundation AS Spool1, cfa.FABidID AS Spool2, \ncfa.FADrawingNumber AS LineNumber, cfa.FADetailDrawingNumber AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \ncfa.FANotes, IF(cfa.ActivityType = 70, (cfa.FAPercentComplete * ctd.TakeOffQuantity), cfa.FAQuantity) AS Quantity, 'N/A' AS Area, cfa.FAPercentComplete AS PercentClaim, cfa.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID\nJOIN CivilTrackerDetails ctd\n\tON ctd.BidID =  cfa.FABidID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \ncsp.SellTestPackageNumber AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \ncsp.SellTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \ncsp.SellNotes, 'N/A' AS Quantity, 'N/A' AS Area, 'N/A' PercentClaim, 0 AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN CivilSellPackage csp\n\tON csp.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, \ncm.MiscFoundation AS Spool1, 'N/A' AS Spool2, \ncm.MiscDrawingNumber AS LineNumber, cm.MiscDetailDrawingNumber AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \ncm.MiscNotes, 0 AS Quantity, 'N/A' AS Area, cm.MiscPercentComplete AS PercentClaim, cm.MiscRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN CivilMisc cm\n\tON cm.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'EQUIP' AS Craft,\nefa.FATagNumber AS Spool1, efa.FABidID AS Spool2, \nefa.FAActivitySelect AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nefa.FANotes, efa.FAQuantity AS Quantity, 'N/A' AS Area, efa.FAPercentComplete AS PercentClaim, efa.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)",
    "countQueryString" : "select count(*) from (SELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \npe.ErectionSpool1 AS Spool1,COALESCE(pe.ErectionSpool2, 'N/A') AS Spool2, \npe.ErectionLineNumber AS Line1, pe.ErectionDrawingNumber AS Drawing1, pe.ErectionSheetNumber AS Sheet1, \npe.ErectionLineNumber AS Line2, pe.ErectionDrawingNumber AS Drawing2, pe.ErectionSheetNumber AS Sheet2, \npe.ErectionPipeSize AS Size, pe.ErectionNotes AS Notes,\n(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0)) AS Quantity, \n'N/A' AS Area, 'N/A' AS PercentClaim, pe.ErectionRework AS Rework\nFROM SubmissionActivityStatus sas\n\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeErection pe\n\tON pe.ActivityID = sas.ActivityID\n\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n \n \nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \npb.BoltUpSpool1, pb.BoltUpSpool2, \npb.BoltUpLineNumber AS Line1, pb.BoltUpDrawingNumber AS DWG1, pb.BoltUpSheetNumber AS Sheet1,\nCOALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,\npb.BoltUpSize , pb.BoltUpNotes, 1 AS BoltUpInstalled\n, 'N/A' AS Area, 'N/A' AS PercentClaim, pb.BoltUpRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeBoltUp pb\n\tON pb.ActivityID = sas.ActivityID\nLEFT JOIN REF_SpoolList sl\n\tON sl.SpoolNumber = pb.BoltUpSpool2\n\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \npw.WeldSpool1, pw.WeldSpool2, \npw.WeldLineNumber, pw.WeldDrawingNumber, pw.WeldSheetNumber, \nCOALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,\npw.WeldSize , pw.WeldNotes, COALESCE((pw.WeldPercentCompleted),0) AS WeldInstalled\n, 'N/A' AS Area, 'N/A' AS PercentClaim, pw.WeldRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus \nJOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID\nLEFT JOIN REF_SpoolList sl\n\tON sl.SpoolNumber = pw.WeldSpool2\n    \nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \npt.TrimLineNumber, pt.TrimDrawingNumber, pt.TrimSheetNumber, \npt.TrimLineNumber AS Line2, pt.TrimDrawingNumber AS DWG2, pt.TrimSheetNumber AS Sheet2,\npt.TrimSize , pt.TrimNotes, pt.TrimQuantity\n, 'N/A' AS Area, 'N/A' AS PercentClaim, pt.TrimRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus      \nJOIN PipeTrim pt\n\tON pt.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \npsu.SupportLineNumber, psu.SupportDrawingNumber, psu.SupportSheetNumber, \npsu.SupportLineNumber AS Line2, psu.SupportDrawingNumber AS DWG2, psu.SupportSheetNumber AS Sheet2,\n'N/A' AS SupportSize , psu.SupportNotes, COALESCE((psu.SupportPercentCompleted),0) AS SupportInstalled\n, 'N/A' AS Area, 'N/A' AS PercentClaim, psu.SupportRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeSupports psu\n\tON psu.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \npte.TestingTestPackageNumber, 'N/A' AS DrawingNumber, pte.TestingRework AS SheetNumber, \npte.TestingTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2,\n'N/A' AS Size , pte.TestingNotes, 1 AS TestingQuantity, \n'N/A' AS Area, 'N/A' AS PercentClaim, pte.TestingRework AS Rework\n            \nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeTesting pte\n\tON pte.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \npd.DemoLineNumber, pd.DemoDrawingNumber, pd.DemoSheetNumber, \npd.DemoLineNumber AS Line2, pd.DemoDrawingNumber AS DWG2, pd.DemoSheetNumber AS Sheet2,\n'N/A' AS DemoSize , pd.DemoNotes, COALESCE(pd.DemoQuantity,0) AS DemoQuantity,\n'N/A' AS Area, 'N/A' AS PercentClaim, 0 AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeDemo pd\n\tON pd.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n \nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \npm.MiscLineNumber, pm.MiscDrawingNumber, pm.MiscSheetNumber, \npm.MiscLineNumber AS Line2, pm.MiscDrawingNumber AS DWG2, pm.MiscSheetNumber AS Sheet2,\n'N/A' AS MiscSize , pm.MiscNotes, pm.MiscQuantity AS MiscInstalled,\n'N/A' AS Area, 'N/A' AS PercentClaim, pm.MiscRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\t\nJOIN PipeMisc pm\n\tON pm.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \npEWO.EWOLineNumber, pEWO.EWODrawingNumber, pEWO.EWOSheetNumber, \npEWO.EWOLineNumber AS Line2, pEWO.EWODrawingNumber AS DWG2, pEWO.EWOSheetNumber AS Sheet2,\n'N/A' AS EWOSize , pEWO.EWONotes, 'N/A' AS TestingEarned,\n'N/A' AS Area, 'N/A' AS PercentClaim, pEWO.EWORework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeEWO pEWO\n\tON pEWO.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n \nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstls.FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstls.FANotes, stls.FAShakeQuantity, stls.FAArea, 1.00 AS PercentClaim, stls.FARework AS Rework\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelShake stls\n\tON stls.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstle.FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstle.FANotes, stle.FAErectQuantity, stle.FAArea, stle.FAErectPercent, stle.FARework AS Rework\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelErect stle\n\tON stle.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstlb.FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlb.FANotes, stlb.FABoltOutQuantity, stlb.FAArea, stlb.FABoltOutPercent , stlb.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelBoltOut stlb\n\tON stlb.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstli.FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstli.FANotes, stli.FAImpQuantity, stli.FAArea, stli.FAImpPercent , stli.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelImp stli\n\tON stli.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstlw.FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlw.FANotes, stlw.FAWeldQuantity, stlw.FAArea, stlw.FAWeldPercent , stlw.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelWeld stlw\n\tON stlw.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstlsell.FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlsell.FANotes, stlsell.FASellQuantity, stlsell.FAArea, 1.00 AS PercentClaim , stlsell.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelSell stlsell\n\tON stlsell.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nrst.SteelName AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, DemoSize AS Size , \nstld.DemoNotes, stld.DemoQuantity, stld.DemoArea, 1.00 AS PercentClaim, 0 AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nJOIN PSA.REF_SteelTypes rst\n\tON stld.DemoSteelType = rst.ID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \nstlsp.SellTestPackageNumber AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \nstlsp.SellTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlsp.SellNotes, 1, 'N/A', 1.00 AS PercentClaim, 0 AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelSellPackage stlsp\n\tON stlsp.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstlm.MiscPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlm.MiscNotes, stlm.MiscQuantity, stlm.MiscArea, 1.00 AS PercentClaim, stlm.MiscRework AS Rework\n \nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, \ncfa.FAFoundation AS Spool1, cfa.FABidID AS Spool2, \ncfa.FADrawingNumber AS LineNumber, cfa.FADetailDrawingNumber AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \ncfa.FANotes, IF(cfa.ActivityType = 70, (cfa.FAPercentComplete * ctd.TakeOffQuantity), cfa.FAQuantity) AS Quantity, 'N/A' AS Area, cfa.FAPercentComplete AS PercentClaim, cfa.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID\nJOIN CivilTrackerDetails ctd\n\tON ctd.BidID =  cfa.FABidID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, \n'N/A' AS Spool1, 'N/A' AS Spool2, \ncsp.SellTestPackageNumber AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \ncsp.SellTestPackageNumber AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \ncsp.SellNotes, 'N/A' AS Quantity, 'N/A' AS Area, 'N/A' PercentClaim, 0 AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN CivilSellPackage csp\n\tON csp.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, \ncm.MiscFoundation AS Spool1, 'N/A' AS Spool2, \ncm.MiscDrawingNumber AS LineNumber, cm.MiscDetailDrawingNumber AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \ncm.MiscNotes, 0 AS Quantity, 'N/A' AS Area, cm.MiscPercentComplete AS PercentClaim, cm.MiscRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN CivilMisc cm\n\tON cm.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'EQUIP' AS Craft,\nefa.FATagNumber AS Spool1, efa.FABidID AS Spool2, \nefa.FAActivitySelect AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nefa.FANotes, efa.FAQuantity AS Quantity, 'N/A' AS Area, efa.FAPercentComplete AS PercentClaim, efa.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "UserID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivitiesPendingApprovalResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Craft",
        "fieldName" : "craft",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Spool1",
        "fieldName" : "spool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Spool2",
        "fieldName" : "spool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Line1",
        "fieldName" : "line1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Drawing1",
        "fieldName" : "drawing1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Sheet1",
        "fieldName" : "sheet1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Line2",
        "fieldName" : "line2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Drawing2",
        "fieldName" : "drawing2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Sheet2",
        "fieldName" : "sheet2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Size",
        "fieldName" : "size",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PercentClaim",
        "fieldName" : "percentClaim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      } ]
    }
  },
  "GetActivitiesPendingReview" : {
    "name" : "GetActivitiesPendingReview",
    "description" : "Get all activities pending Supervisor review BY SuperID",
    "version" : "V1",
    "queryString" : "SELECT sas.*, at.ActivityType AS ActivityTypeName, sd.ReceivedTime, u.FirstName, u.LastName, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status,\nIF(sas.ActivityType IN (10,11,20,21,22,23,30,31,32,33,34,35,39,40,41,42,43,50,51,52,53,54,59,90,91,92,93),'PIPE',\nIF(sas.ActivityType IN (60,61,62,63,64,65,66,67,68,96),'STEEL',\nIF(sas.ActivityType IN (70,71,72,77,97),'CIVIL',\nIF(sas.ActivityType IN (80,81,82,83,84,85,98),'EQUIP.',''\n)))) AS Craft\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.ActivityType != 0\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\nORDER BY sas.ActivityID DESC",
    "countQueryString" : "select count(*) from (SELECT sas.*, at.ActivityType AS ActivityTypeName, sd.ReceivedTime, u.FirstName, u.LastName, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status,\nIF(sas.ActivityType IN (10,11,20,21,22,23,30,31,32,33,34,35,39,40,41,42,43,50,51,52,53,54,59,90,91,92,93),'PIPE',\nIF(sas.ActivityType IN (60,61,62,63,64,65,66,67,68,96),'STEEL',\nIF(sas.ActivityType IN (70,71,72,77,97),'CIVIL',\nIF(sas.ActivityType IN (80,81,82,83,84,85,98),'EQUIP.',''\n)))) AS Craft\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.ActivityType != 0\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\nORDER BY sas.ActivityID DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "SuperID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "47",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivitiesPendingReviewResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "fk_BidIDAssigned",
        "fieldName" : "fkBidIdassigned",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "fk_ActivityStatus",
        "fieldName" : "fkActivityStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "fk_LastModifiedBy",
        "fieldName" : "fkLastModifiedBy",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "LockField",
        "fieldName" : "lockField",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "FirstName",
        "fieldName" : "firstName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "LastName",
        "fieldName" : "lastName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "NameFull",
        "fieldName" : "nameFull",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Craft",
        "fieldName" : "craft",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetActivitiesPendingReviewCivil" : {
    "name" : "GetActivitiesPendingReviewCivil",
    "description" : "Get all Activities pending super review for Civil",
    "version" : "V2",
    "queryString" : "SELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,\nat.ActivityType AS ActivityTypeName, sd.ReceivedTime, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status,\nIF(sas.ActivityType IN (70,71), ctd.Description, IF(sas.ActivityType = 72, 'Sell Package', 'MISC') ) AS Description \n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN CivilFA cfa\n\tOn cfa.ActivityID = sas.ActivityID\n    \nLEFT JOIN CivilTrackerDetails ctd\n\tON ctd.BidID = cfa.FABidID\n    \nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.ActivityType IN (70,71,72,97)\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\nORDER BY sas.ActivityID DESC",
    "countQueryString" : "select count(*) from (SELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,\nat.ActivityType AS ActivityTypeName, sd.ReceivedTime, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status,\nIF(sas.ActivityType IN (70,71), ctd.Description, IF(sas.ActivityType = 72, 'Sell Package', 'MISC') ) AS Description \n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN CivilFA cfa\n\tOn cfa.ActivityID = sas.ActivityID\n    \nLEFT JOIN CivilTrackerDetails ctd\n\tON ctd.BidID = cfa.FABidID\n    \nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.ActivityType IN (70,71,72,97)\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\nORDER BY sas.ActivityID DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "SuperID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "47",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivitiesPendingReviewCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "fk_ActivityStatus",
        "fieldName" : "fkActivityStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "NameFull",
        "fieldName" : "nameFull",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetActivitiesPendingReviewEquip" : {
    "name" : "GetActivitiesPendingReviewEquip",
    "description" : "Get activities pending Super Review Equip",
    "version" : "V2",
    "queryString" : "SELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,\nat.ActivityType AS ActivityTypeName, sd.ReceivedTime, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status,\netd.Description\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nJOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID\n    \nLEFT JOIN EquipTrackerDetails etd\n\tON etd.BidID = efa.FABidID\n    \nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.ActivityType = 80\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\nORDER BY sas.ActivityID DESC",
    "countQueryString" : "select count(*) from (SELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,\nat.ActivityType AS ActivityTypeName, sd.ReceivedTime, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status,\netd.Description\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nJOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID\n    \nLEFT JOIN EquipTrackerDetails etd\n\tON etd.BidID = efa.FABidID\n    \nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.ActivityType = 80\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\nORDER BY sas.ActivityID DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "SuperID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "47",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivitiesPendingReviewEquipResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "fk_ActivityStatus",
        "fieldName" : "fkActivityStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "NameFull",
        "fieldName" : "nameFull",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetActivitiesPendingReviewPipe" : {
    "name" : "GetActivitiesPendingReviewPipe",
    "description" : "Get all activities that should appear on Super Review Page Pipe",
    "version" : "V2",
    "queryString" : "SELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,\nat.ActivityType AS ActivityTypeName, sd.ReceivedTime, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.ActivityType IN (10,11,20,21,22,23,30,31,32,33,34,35,39,40,41,42,43,50,51,52,53,54,59,90,91,92,93)\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\nORDER BY sas.ActivityID DESC",
    "countQueryString" : "select count(*) from (SELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,\nat.ActivityType AS ActivityTypeName, sd.ReceivedTime, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.ActivityType IN (10,11,20,21,22,23,30,31,32,33,34,35,39,40,41,42,43,50,51,52,53,54,59,90,91,92,93)\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\nORDER BY sas.ActivityID DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "SuperID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "47",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivitiesPendingReviewPipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "fk_ActivityStatus",
        "fieldName" : "fkActivityStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "NameFull",
        "fieldName" : "nameFull",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetActivitiesPendingReviewSteel" : {
    "name" : "GetActivitiesPendingReviewSteel",
    "description" : "Get All activities pending super review for Steel.",
    "version" : "V2",
    "queryString" : "SELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,\nat.ActivityType AS ActivityTypeName, sd.ReceivedTime, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID\n    \nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.ActivityType IN (60,61,62,63,64,65,66,67,68,96)\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\nORDER BY sas.ActivityID DESC",
    "countQueryString" : "select count(*) from (SELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,\nat.ActivityType AS ActivityTypeName, sd.ReceivedTime, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID\n    \nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.ActivityType IN (60,61,62,63,64,65,66,67,68,96)\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\nORDER BY sas.ActivityID DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "SuperID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "47",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivitiesPendingReviewSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "fk_ActivityStatus",
        "fieldName" : "fkActivityStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "NameFull",
        "fieldName" : "nameFull",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryCivilFA" : {
    "name" : "GetActivityHistoryCivilFA",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT cfa.* \nFROM CivilFA cfa\nWHERE ActivityID = :ActivityID\n\nUNION\n\nSELECT cfar.fk_OrgActivityId, cfar.FABidID, cfar.FAFoundation, cfar.FADescription, cfar.FADrawingNumber, cfar.FADetailDrawingNumber, cfar.FAPercentComplete, cfar.FAQuantity, cfar.FARework, \ncfar.FANotes, cfar.ActivityType, cfar.FATimeInForm, cfar.Rev, cfar.TimeStamp\nFROM CivilFAREV cfar\nWHERE cfar.fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT cfa.* \nFROM CivilFA cfa\nWHERE ActivityID = :ActivityID\n\nUNION\n\nSELECT cfar.fk_OrgActivityId, cfar.FABidID, cfar.FAFoundation, cfar.FADescription, cfar.FADrawingNumber, cfar.FADetailDrawingNumber, cfar.FAPercentComplete, cfar.FAQuantity, cfar.FARework, \ncfar.FANotes, cfar.ActivityType, cfar.FATimeInForm, cfar.Rev, cfar.TimeStamp\nFROM CivilFAREV cfar\nWHERE cfar.fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryCivilFaResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FABidID",
        "fieldName" : "fabidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FAFoundation",
        "fieldName" : "fafoundation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FADescription",
        "fieldName" : "fadescription",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FADrawingNumber",
        "fieldName" : "fadrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FADetailDrawingNumber",
        "fieldName" : "fadetailDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPercentComplete",
        "fieldName" : "fapercentComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "FAQuantity",
        "fieldName" : "faquantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryCivilMisc" : {
    "name" : "GetActivityHistoryCivilMisc",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "SELECT cm.* \nFROM CivilMisc cm\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT cmr.fk_OrgActivityId, cmr.MiscFoundation, cmr.MiscDrawingNumber, cmr.MiscDetailDrawingNumber, cmr.MiscPercentComplete, cmr.MiscRework, cmr.MiscNotes, cmr.ActivityType, \ncmr.MiscTimeInForm, cmr.Rev, cmr.TimeStamp\nFROM CivilMiscREV cmr\nWHERE cmr.fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT cm.* \nFROM CivilMisc cm\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT cmr.fk_OrgActivityId, cmr.MiscFoundation, cmr.MiscDrawingNumber, cmr.MiscDetailDrawingNumber, cmr.MiscPercentComplete, cmr.MiscRework, cmr.MiscNotes, cmr.ActivityType, \ncmr.MiscTimeInForm, cmr.Rev, cmr.TimeStamp\nFROM CivilMiscREV cmr\nWHERE cmr.fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "21",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryCivilMiscResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscFoundation",
        "fieldName" : "miscFoundation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscDrawingNumber",
        "fieldName" : "miscDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscDetailDrawingNumber",
        "fieldName" : "miscDetailDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscPercentComplete",
        "fieldName" : "miscPercentComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "MiscRework",
        "fieldName" : "miscRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "MiscNotes",
        "fieldName" : "miscNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "MiscTimeInForm",
        "fieldName" : "miscTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryEquipFA" : {
    "name" : "GetActivityHistoryEquipFA",
    "description" : "name",
    "version" : "V2",
    "queryString" : "SELECT efa.* \nFROM EquipFA efa\nWHERE ActivityID = :ActivityID\n\nUNION\n\nSELECT efar.fk_OrgActivityID, efar.FABidID, efar.FATagNumber, efar.FAActivitySelect, efar.FAQuantity, efar.FAPercentComplete, efar.FARework, efar.FANotes, efar.ActivityType, efar.FATimeInForm, efar.Rev, efar.TimeStamp\nFROM EquipFAREV efar\nWHERE efar.fk_OrgActivityID = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT efa.* \nFROM EquipFA efa\nWHERE ActivityID = :ActivityID\n\nUNION\n\nSELECT efar.fk_OrgActivityID, efar.FABidID, efar.FATagNumber, efar.FAActivitySelect, efar.FAQuantity, efar.FAPercentComplete, efar.FARework, efar.FANotes, efar.ActivityType, efar.FATimeInForm, efar.Rev, efar.TimeStamp\nFROM EquipFAREV efar\nWHERE efar.fk_OrgActivityID = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "3",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryEquipFaResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FABidID",
        "fieldName" : "fabidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FATagNumber",
        "fieldName" : "fatagNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAActivitySelect",
        "fieldName" : "faactivitySelect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAQuantity",
        "fieldName" : "faquantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FAPercentComplete",
        "fieldName" : "fapercentComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryPipeBoltup" : {
    "name" : "GetActivityHistoryPipeBoltup",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT pb.* \nFROM PipeBoltUp pb\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT pbr.fk_OrgActivityId, pbr.BoltUpSpool1, pbr.BoltUpSpool2, pbr.BoltUpDrawingNumber, pbr.BoltUpLineNumber, pbr.BoltUpSheetNumber, pbr.BoltUpTimeInForm, \npbr.BoltUpSize, pbr.BoltUpQuantity, pbr.BoltUpRework, pbr.BoltUpNotes, pbr.ActivityType, pbr.Rev, pbr.TimeStamp\nFROM PipeBoltUpREV pbr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT pb.* \nFROM PipeBoltUp pb\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT pbr.fk_OrgActivityId, pbr.BoltUpSpool1, pbr.BoltUpSpool2, pbr.BoltUpDrawingNumber, pbr.BoltUpLineNumber, pbr.BoltUpSheetNumber, pbr.BoltUpTimeInForm, \npbr.BoltUpSize, pbr.BoltUpQuantity, pbr.BoltUpRework, pbr.BoltUpNotes, pbr.ActivityType, pbr.Rev, pbr.TimeStamp\nFROM PipeBoltUpREV pbr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "10",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryPipeBoltupResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BoltUpSpool1",
        "fieldName" : "boltUpSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BoltUpSpool2",
        "fieldName" : "boltUpSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BoltUpDrawingNumber",
        "fieldName" : "boltUpDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BoltUpLineNumber",
        "fieldName" : "boltUpLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BoltUpSheetNumber",
        "fieldName" : "boltUpSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BoltUpTimeInForm",
        "fieldName" : "boltUpTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BoltUpSize",
        "fieldName" : "boltUpSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "BoltUpQuantity",
        "fieldName" : "boltUpQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "BoltUpRework",
        "fieldName" : "boltUpRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "BoltUpNotes",
        "fieldName" : "boltUpNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryPipeDemo" : {
    "name" : "GetActivityHistoryPipeDemo",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT pd.* \nFROM PipeDemo pd\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  pdr.fk_OrgActivityId,\npdr.DemoDrawingNumber, pdr.DemoLineNumber, pdr.DemoSheetNumber, pdr.DemoQuantity, pdr.DemoSize, pdr.DemoNotes,\npdr.ActivityType, pdr.DemoTimeInForm, pdr.Rev, pdr.TimeStamp\nFROM PipeDemoREV pdr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT pd.* \nFROM PipeDemo pd\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  pdr.fk_OrgActivityId,\npdr.DemoDrawingNumber, pdr.DemoLineNumber, pdr.DemoSheetNumber, pdr.DemoQuantity, pdr.DemoSize, pdr.DemoNotes,\npdr.ActivityType, pdr.DemoTimeInForm, pdr.Rev, pdr.TimeStamp\nFROM PipeDemoREV pdr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "11",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryPipeDemoResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "DemoDrawingNumber",
        "fieldName" : "demoDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DemoLineNumber",
        "fieldName" : "demoLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DemoSheetNumber",
        "fieldName" : "demoSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DemoQuantity",
        "fieldName" : "demoQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DemoSize",
        "fieldName" : "demoSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "DemoNotes",
        "fieldName" : "demoNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DemoTimeInForm",
        "fieldName" : "demoTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryPipeErection" : {
    "name" : "GetActivityHistoryPipeErection",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT pe.* \nFROM PipeErection pe\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT per.* \nFROM (SELECT  per.fk_OrgActivityId,\nper.ErectionSpool1, per.ErectionLengthSpool1, per.ErectionSpool2, per.ErectionLengthSpool2, per.ErectionSpool3, per.ErectionLengthSpool3, per.ErectionSpool4, per.ErectionLengthSpool4 , per.ErectionSpool5, per.ErectionLengthSpool5, per.ErectionSpool6, per.ErectionLengthSpool6,\nper.ErectionOnCords, per.ErectionDrawingNumber, per.ErectionLineNumber, per.ErectionSheetNumber, per.ErectionTimeInForm, per.ErectionPipeSize, per.ErectionRework, per.ErectionNotes,\nper.ActivityType, per.Rev, per.TimeStamp\nFROM PipeErectionREV per\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY per.TimeStamp DESC) per",
    "countQueryString" : "select count(*) from (SELECT pe.* \nFROM PipeErection pe\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT per.* \nFROM (SELECT  per.fk_OrgActivityId,\nper.ErectionSpool1, per.ErectionLengthSpool1, per.ErectionSpool2, per.ErectionLengthSpool2, per.ErectionSpool3, per.ErectionLengthSpool3, per.ErectionSpool4, per.ErectionLengthSpool4 , per.ErectionSpool5, per.ErectionLengthSpool5, per.ErectionSpool6, per.ErectionLengthSpool6,\nper.ErectionOnCords, per.ErectionDrawingNumber, per.ErectionLineNumber, per.ErectionSheetNumber, per.ErectionTimeInForm, per.ErectionPipeSize, per.ErectionRework, per.ErectionNotes,\nper.ActivityType, per.Rev, per.TimeStamp\nFROM PipeErectionREV per\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY per.TimeStamp DESC) per) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "5",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryPipeErectionResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool1",
        "fieldName" : "erectionSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool1",
        "fieldName" : "erectionLengthSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool2",
        "fieldName" : "erectionSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool2",
        "fieldName" : "erectionLengthSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool3",
        "fieldName" : "erectionSpool3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool3",
        "fieldName" : "erectionLengthSpool3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool4",
        "fieldName" : "erectionSpool4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool4",
        "fieldName" : "erectionLengthSpool4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool5",
        "fieldName" : "erectionSpool5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool5",
        "fieldName" : "erectionLengthSpool5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool6",
        "fieldName" : "erectionSpool6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool6",
        "fieldName" : "erectionLengthSpool6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionOnCords",
        "fieldName" : "erectionOnCords",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ErectionDrawingNumber",
        "fieldName" : "erectionDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLineNumber",
        "fieldName" : "erectionLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionSheetNumber",
        "fieldName" : "erectionSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionTimeInForm",
        "fieldName" : "erectionTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionPipeSize",
        "fieldName" : "erectionPipeSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "ErectionRework",
        "fieldName" : "erectionRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ErectionNotes",
        "fieldName" : "erectionNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryPipeMisc" : {
    "name" : "GetActivityHistoryPipeMisc",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT pm.* \nFROM PipeMisc pm\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  pmr.fk_OrgActivityId,\npmr.MiscDrawingNumber, pmr.MiscLineNumber, pmr.MiscSheetNumber, pmr.MiscTimeInForm, pmr.MiscQuantity, pmr.MiscRework, pmr.MiscNotes,\npmr.ActivityType, pmr.Rev, pmr.TimeStamp\nFROM PipeMiscREV pmr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT pm.* \nFROM PipeMisc pm\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  pmr.fk_OrgActivityId,\npmr.MiscDrawingNumber, pmr.MiscLineNumber, pmr.MiscSheetNumber, pmr.MiscTimeInForm, pmr.MiscQuantity, pmr.MiscRework, pmr.MiscNotes,\npmr.ActivityType, pmr.Rev, pmr.TimeStamp\nFROM PipeMiscREV pmr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "12",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryPipeMiscResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscDrawingNumber",
        "fieldName" : "miscDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscLineNumber",
        "fieldName" : "miscLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscSheetNumber",
        "fieldName" : "miscSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscTimeInForm",
        "fieldName" : "miscTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscQuantity",
        "fieldName" : "miscQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "MiscRework",
        "fieldName" : "miscRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "MiscNotes",
        "fieldName" : "miscNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryPipeSupport" : {
    "name" : "GetActivityHistoryPipeSupport",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT psu.* \nFROM PipeSupports psu\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  psur.fk_OrgActivityId, \npsur.SupportType, psur.SupportPartNumber, psur.SupportQuantity, psur.SupportDrawingNumber, psur.SupportLineNumber, psur.SupportSheetNumber, psur.SupportTimeInForm, psur.SupportComplete, psur.SupportShared, psur.SupportPercentCompleted, psur.SupportRework, psur.SupportNotes,\npsur.ActivityType, psur.Rev, psur.TimeStamp\nFROM PipeSupportsREV psur\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT psu.* \nFROM PipeSupports psu\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  psur.fk_OrgActivityId, \npsur.SupportType, psur.SupportPartNumber, psur.SupportQuantity, psur.SupportDrawingNumber, psur.SupportLineNumber, psur.SupportSheetNumber, psur.SupportTimeInForm, psur.SupportComplete, psur.SupportShared, psur.SupportPercentCompleted, psur.SupportRework, psur.SupportNotes,\npsur.ActivityType, psur.Rev, psur.TimeStamp\nFROM PipeSupportsREV psur\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "13",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryPipeSupportResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "SupportType",
        "fieldName" : "supportType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "SupportPartNumber",
        "fieldName" : "supportPartNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SupportQuantity",
        "fieldName" : "supportQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "SupportDrawingNumber",
        "fieldName" : "supportDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SupportLineNumber",
        "fieldName" : "supportLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SupportSheetNumber",
        "fieldName" : "supportSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SupportTimeInForm",
        "fieldName" : "supportTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "SupportComplete",
        "fieldName" : "supportComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "SupportShared",
        "fieldName" : "supportShared",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "SupportPercentCompleted",
        "fieldName" : "supportPercentCompleted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "SupportRework",
        "fieldName" : "supportRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "SupportNotes",
        "fieldName" : "supportNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryPipeTesting" : {
    "name" : "GetActivityHistoryPipeTesting",
    "description" : "Get the field activity history for testing activities BY RowID",
    "version" : "V1",
    "queryString" : "SELECT pt.* \nFROM PipeTesting pt\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT ptr.fk_OrgActivityId, ptr.TestingTestPackageNumber, ptr.TestingRework, ptr.TestingNotes, ptr.TestingTimeInForm, \nptr.ActivityType, ptr.Rev, ptr.TimeStamp\nFROM PipeTestingREV ptr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT pt.* \nFROM PipeTesting pt\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT ptr.fk_OrgActivityId, ptr.TestingTestPackageNumber, ptr.TestingRework, ptr.TestingNotes, ptr.TestingTimeInForm, \nptr.ActivityType, ptr.Rev, ptr.TimeStamp\nFROM PipeTestingREV ptr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "6",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryPipeTestingResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TestingTestPackageNumber",
        "fieldName" : "testingTestPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestingRework",
        "fieldName" : "testingRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TestingNotes",
        "fieldName" : "testingNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestingTimeInForm",
        "fieldName" : "testingTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryPipeTrim" : {
    "name" : "GetActivityHistoryPipeTrim",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT pt.* \nFROM PipeTrim pt\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  ptr.fk_OrgActivityId, \nptr.TrimActivitySelect, ptr.TrimSize, ptr.TrimQuantity, ptr.TrimHandleType, ptr.TrimInstrumentType, ptr.TrimDrawingNumber, ptr.TrimLineNumber, ptr.TrimSheetNumber, ptr.TrimTimeInForm, ptr.TrimRework, ptr.TrimNotes ,\n\nptr.ActivityType, ptr.Rev, ptr.TimeStamp\nFROM PipeTrimREV ptr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT pt.* \nFROM PipeTrim pt\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  ptr.fk_OrgActivityId, \nptr.TrimActivitySelect, ptr.TrimSize, ptr.TrimQuantity, ptr.TrimHandleType, ptr.TrimInstrumentType, ptr.TrimDrawingNumber, ptr.TrimLineNumber, ptr.TrimSheetNumber, ptr.TrimTimeInForm, ptr.TrimRework, ptr.TrimNotes ,\n\nptr.ActivityType, ptr.Rev, ptr.TimeStamp\nFROM PipeTrimREV ptr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "14",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryPipeTrimResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TrimActivitySelect",
        "fieldName" : "trimActivitySelect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TrimSize",
        "fieldName" : "trimSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "TrimQuantity",
        "fieldName" : "trimQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TrimHandleType",
        "fieldName" : "trimHandleType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TrimInstrumentType",
        "fieldName" : "trimInstrumentType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TrimDrawingNumber",
        "fieldName" : "trimDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TrimLineNumber",
        "fieldName" : "trimLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TrimSheetNumber",
        "fieldName" : "trimSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TrimTimeInForm",
        "fieldName" : "trimTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TrimRework",
        "fieldName" : "trimRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TrimNotes",
        "fieldName" : "trimNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryPipeWeld" : {
    "name" : "GetActivityHistoryPipeWeld",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT pw.* \nFROM PipeWeld pw\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  pwr.fk_OrgActivityId, \npwr.WeldSpool1, pwr.WeldSpool2, pwr.WeldDrawingNumber, pwr.WeldLineNumber, pwr.WeldSheetNumber, pwr.WeldTimeInForm, pwr.WeldLineSpec, pwr.WeldNumber, pwr.WeldStencil, pwr.WeldSize, pwr.WeldThickness, \npwr.WeldType, pwr.WeldPosition, pwr.WeldMaterial, pwr.WeldProcedure, pwr.WeldComplete, pwr.WeldShared, pwr.WeldPercentCompleted, pwr.WeldRework, pwr.WeldNotes, \npwr.ActivityType, pwr.Rev, pwr.TimeStamp\nFROM PipeWeldREV pwr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT pw.* \nFROM PipeWeld pw\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  pwr.fk_OrgActivityId, \npwr.WeldSpool1, pwr.WeldSpool2, pwr.WeldDrawingNumber, pwr.WeldLineNumber, pwr.WeldSheetNumber, pwr.WeldTimeInForm, pwr.WeldLineSpec, pwr.WeldNumber, pwr.WeldStencil, pwr.WeldSize, pwr.WeldThickness, \npwr.WeldType, pwr.WeldPosition, pwr.WeldMaterial, pwr.WeldProcedure, pwr.WeldComplete, pwr.WeldShared, pwr.WeldPercentCompleted, pwr.WeldRework, pwr.WeldNotes, \npwr.ActivityType, pwr.Rev, pwr.TimeStamp\nFROM PipeWeldREV pwr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryPipeWeldResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "WeldSpool1",
        "fieldName" : "weldSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSpool2",
        "fieldName" : "weldSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldDrawingNumber",
        "fieldName" : "weldDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldLineNumber",
        "fieldName" : "weldLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSheetNumber",
        "fieldName" : "weldSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldTimeInForm",
        "fieldName" : "weldTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "WeldLineSpec",
        "fieldName" : "weldLineSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldNumber",
        "fieldName" : "weldNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldStencil",
        "fieldName" : "weldStencil",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSize",
        "fieldName" : "weldSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "WeldThickness",
        "fieldName" : "weldThickness",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldType",
        "fieldName" : "weldType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldPosition",
        "fieldName" : "weldPosition",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldMaterial",
        "fieldName" : "weldMaterial",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldProcedure",
        "fieldName" : "weldProcedure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldComplete",
        "fieldName" : "weldComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "WeldShared",
        "fieldName" : "weldShared",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "WeldPercentCompleted",
        "fieldName" : "weldPercentCompleted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "WeldRework",
        "fieldName" : "weldRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "WeldNotes",
        "fieldName" : "weldNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryStatus" : {
    "name" : "GetActivityHistoryStatus",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT sas.ActivityID, CONCAT(ats.Status, ' - ', IF(sas.LockField = 1, 'Locked', COALESCE(sas.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, sas.TimeStamp\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nLEFT JOIN PSA.tblUserPSA u\n\tON u.ID = fk_LastModifiedBy\n    \nWHERE sas.ActivityID = :ActivityID\n\n\n\nUNION ALL\n\n\n\nSELECT sasr.*\nFROM (SELECT sasr.fk_ActivityID, CONCAT(ats.Status, ' - ', IF(sasr.LockField = 1, 'Locked', COALESCE(sasr.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, sasr.TimeStamp\n\nFROM SubmissionActivityStatusREV sasr\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sasr.fk_ActivityStatus\nLEFT JOIN PSA.tblUserPSA u\n\tON u.ID = fk_LastModifiedBy\n\nWHERE sasr.fk_ActivityID = :ActivityID\nORDER BY sasr.TimeStamp DESC) sasr",
    "countQueryString" : "select count(*) from (SELECT sas.ActivityID, CONCAT(ats.Status, ' - ', IF(sas.LockField = 1, 'Locked', COALESCE(sas.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, sas.TimeStamp\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nLEFT JOIN PSA.tblUserPSA u\n\tON u.ID = fk_LastModifiedBy\n    \nWHERE sas.ActivityID = :ActivityID\n\n\n\nUNION ALL\n\n\n\nSELECT sasr.*\nFROM (SELECT sasr.fk_ActivityID, CONCAT(ats.Status, ' - ', IF(sasr.LockField = 1, 'Locked', COALESCE(sasr.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, sasr.TimeStamp\n\nFROM SubmissionActivityStatusREV sasr\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sasr.fk_ActivityStatus\nLEFT JOIN PSA.tblUserPSA u\n\tON u.ID = fk_LastModifiedBy\n\nWHERE sasr.fk_ActivityID = :ActivityID\nORDER BY sasr.TimeStamp DESC) sasr) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryStatusResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "LastModifiedBy",
        "fieldName" : "lastModifiedBy",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelBoltout" : {
    "name" : "GetActivityHistorySteelBoltout",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stlb.* \nFROM SteelBoltOut stlb\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlbr.fk_OrgActivityId, stlbr.FAArea, stlbr.FAPieceNumber, stlbr.FABoltoutQuantity, stlbr.FABoltoutPercent, stlbr.FARework, stlbr.FANotes, stlbr.ActivityType, stlbr.FATimeInForm, stlbr.Rev, stlbr.TimeStamp\nFROM SteelBoltOutREV stlbr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stlb.* \nFROM SteelBoltOut stlb\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlbr.fk_OrgActivityId, stlbr.FAArea, stlbr.FAPieceNumber, stlbr.FABoltoutQuantity, stlbr.FABoltoutPercent, stlbr.FARework, stlbr.FANotes, stlbr.ActivityType, stlbr.FATimeInForm, stlbr.Rev, stlbr.TimeStamp\nFROM SteelBoltOutREV stlbr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "15",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelBoltoutResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FAArea",
        "fieldName" : "faarea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPieceNumber",
        "fieldName" : "fapieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FABoltOutQuantity",
        "fieldName" : "faboltOutQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FABoltOutPercent",
        "fieldName" : "faboltOutPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelDemo" : {
    "name" : "GetActivityHistorySteelDemo",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stld.* \nFROM SteelDemo stld\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stldr.fk_OrgActivityId, stldr.DemoArea, stldr.DemoSteelType, stldr.DemoSize, stldr.DemoQuantity, stldr.DemoNotes, stldr.ActivityType, stldr.DemoTimeInForm, stldr.Rev, stldr.TimeStamp\nFROM SteelDemoREV stldr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stld.* \nFROM SteelDemo stld\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stldr.fk_OrgActivityId, stldr.DemoArea, stldr.DemoSteelType, stldr.DemoSize, stldr.DemoQuantity, stldr.DemoNotes, stldr.ActivityType, stldr.DemoTimeInForm, stldr.Rev, stldr.TimeStamp\nFROM SteelDemoREV stldr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "16",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelDemoResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "DemoArea",
        "fieldName" : "demoArea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DemoSteelType",
        "fieldName" : "demoSteelType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "DemoSize",
        "fieldName" : "demoSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DemoQuantity",
        "fieldName" : "demoQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "DemoNotes",
        "fieldName" : "demoNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DemoTimeInForm",
        "fieldName" : "demoTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelErect" : {
    "name" : "GetActivityHistorySteelErect",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stle.* \nFROM SteelErect stle\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stler.fk_OrgActivityId, stler.FAArea, stler.FAPieceNumber, stler.FAErectQuantity, stler.FAErectPercent, stler.FARework, stler.FANotes, stler.ActivityType, stler.FATimeInForm, stler.Rev, stler.TimeStamp\nFROM SteelErectREV stler\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stle.* \nFROM SteelErect stle\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stler.fk_OrgActivityId, stler.FAArea, stler.FAPieceNumber, stler.FAErectQuantity, stler.FAErectPercent, stler.FARework, stler.FANotes, stler.ActivityType, stler.FATimeInForm, stler.Rev, stler.TimeStamp\nFROM SteelErectREV stler\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "17",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelErectResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FAArea",
        "fieldName" : "faarea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPieceNumber",
        "fieldName" : "fapieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAErectQuantity",
        "fieldName" : "faerectQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FAErectPercent",
        "fieldName" : "faerectPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelImp" : {
    "name" : "GetActivityHistorySteelImp",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stli.* \nFROM SteelImp stli\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlir.fk_OrgActivityId, stlir.FAArea, stlir.FAPieceNumber, stlir.FAImpQuantity, stlir.FAImpPercent, stlir.FARework, stlir.FANotes, stlir.ActivityType, stlir.FATimeInForm, stlir.Rev, stlir.TimeStamp\nFROM SteelImpREV stlir\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stli.* \nFROM SteelImp stli\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlir.fk_OrgActivityId, stlir.FAArea, stlir.FAPieceNumber, stlir.FAImpQuantity, stlir.FAImpPercent, stlir.FARework, stlir.FANotes, stlir.ActivityType, stlir.FATimeInForm, stlir.Rev, stlir.TimeStamp\nFROM SteelImpREV stlir\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "18",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelImpResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FAArea",
        "fieldName" : "faarea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPieceNumber",
        "fieldName" : "fapieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAImpQuantity",
        "fieldName" : "faimpQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FAImpPercent",
        "fieldName" : "faimpPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelMisc" : {
    "name" : "GetActivityHistorySteelMisc",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stlm.* \nFROM SteelMisc stlm\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlmr.fk_OrgActivityId, stlmr.MiscArea, stlmr.MiscPieceNumber, stlmr.MiscQuantity, stlmr.MiscRework, stlmr.MiscNotes, stlmr.ActivityType, stlmr.MiscTimeInForm, stlmr.Rev, stlmr.TimeStamp\nFROM SteelMiscREV stlmr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stlm.* \nFROM SteelMisc stlm\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlmr.fk_OrgActivityId, stlmr.MiscArea, stlmr.MiscPieceNumber, stlmr.MiscQuantity, stlmr.MiscRework, stlmr.MiscNotes, stlmr.ActivityType, stlmr.MiscTimeInForm, stlmr.Rev, stlmr.TimeStamp\nFROM SteelMiscREV stlmr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "19",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelMiscResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscArea",
        "fieldName" : "miscArea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscPieceNumber",
        "fieldName" : "miscPieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscQuantity",
        "fieldName" : "miscQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "MiscRework",
        "fieldName" : "miscRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "MiscNotes",
        "fieldName" : "miscNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "MiscTimeInForm",
        "fieldName" : "miscTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelSell" : {
    "name" : "GetActivityHistorySteelSell",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stlsell.* \nFROM SteelSell stlsell\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlsellr.fk_OrgActivityId, stlsellr.FAArea, stlsellr.FAPieceNumber, stlsellr.FASellQuantity, stlsellr.FARework, stlsellr.FANotes, stlsellr.ActivityType, stlsellr.FATimeInForm, stlsellr.Rev, stlsellr.TimeStamp\nFROM SteelSellREV stlsellr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stlsell.* \nFROM SteelSell stlsell\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlsellr.fk_OrgActivityId, stlsellr.FAArea, stlsellr.FAPieceNumber, stlsellr.FASellQuantity, stlsellr.FARework, stlsellr.FANotes, stlsellr.ActivityType, stlsellr.FATimeInForm, stlsellr.Rev, stlsellr.TimeStamp\nFROM SteelSellREV stlsellr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "20",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelSellResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FAArea",
        "fieldName" : "faarea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPieceNumber",
        "fieldName" : "fapieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FASellQuantity",
        "fieldName" : "fasellQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelShake" : {
    "name" : "GetActivityHistorySteelShake",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stls.* \nFROM SteelShake stls\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlsr.fk_OrgActivityId, stlsr.FAArea, stlsr.FAPieceNumber, stlsr.FAShakeQuantity, stlsr.FARework, stlsr.FANotes, stlsr.ActivityType, stlsr.FATimeInForm, stlsr.Rev, stlsr.TimeStamp\nFROM SteelShakeREV stlsr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stls.* \nFROM SteelShake stls\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlsr.fk_OrgActivityId, stlsr.FAArea, stlsr.FAPieceNumber, stlsr.FAShakeQuantity, stlsr.FARework, stlsr.FANotes, stlsr.ActivityType, stlsr.FATimeInForm, stlsr.Rev, stlsr.TimeStamp\nFROM SteelShakeREV stlsr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "4",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelShakeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FAArea",
        "fieldName" : "faarea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPieceNumber",
        "fieldName" : "fapieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAShakeQuantity",
        "fieldName" : "fashakeQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelWeld" : {
    "name" : "GetActivityHistorySteelWeld",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stlw.* \nFROM SteelWeld stlw\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlwr.fk_OrgActivityId, stlwr.FAArea, stlwr.FAPieceNumber, stlwr.FAWeldQuantity, stlwr.FAWeldPercent, stlwr.FARework, stlwr.FANotes, stlwr.ActivityType, stlwr.FATimeInForm, stlwr.Rev, stlwr.TimeStamp\nFROM SteelWeldREV stlwr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stlw.* \nFROM SteelWeld stlw\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlwr.fk_OrgActivityId, stlwr.FAArea, stlwr.FAPieceNumber, stlwr.FAWeldQuantity, stlwr.FAWeldPercent, stlwr.FARework, stlwr.FANotes, stlwr.ActivityType, stlwr.FATimeInForm, stlwr.Rev, stlwr.TimeStamp\nFROM SteelWeldREV stlwr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "22",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelWeldResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FAArea",
        "fieldName" : "faarea",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPieceNumber",
        "fieldName" : "fapieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAWeldQuantity",
        "fieldName" : "faweldQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FAWeldPercent",
        "fieldName" : "faweldPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesByTestPackageCivil" : {
    "name" : "GetBidActivityMatchesByTestPackageCivil",
    "description" : "Get Bid items with the supplied TestPackage",
    "version" : "V1",
    "queryString" : "SELECT ctd.UID, ctd.BidID, ctd.EWONumber, ctd.Scope, ctd.Phase, ctd.Stage, ctd.TestPackageNumber, ctd.CostCode, ctd.P6ID, ctd.AssignedContractor, ctd.Area, ctd.Location, ctd.Structure, ctd.Grouping, \nctd.FoundationDescription, ctd.CU, ctd.P6Description, ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DrawingRev, ctd.DetailDrawingNumber, ctd.DetailRev, ctd.DetailName, ctd.Description, ctd.ActivityType, \nctd.ActivitySubType, ctd.System, ctd.Service, ctd.TakeOffQuantity, ctd.QuantityUnit, ctd.EstimatedHours, \nctd.WBS1, ctd.WBS2, ctd.WBS3, ctd.WBS4, ctd.WBS5, ctd.WBS6, ctd.WBS7, ctd.WBS8, ctd.WBS9, ctd.WBS10, \n\n\ncount(ctd.BidID) AS SellPunchCount,\nsum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,\nsum(COALESCE(ercs.InstalledSellPunch,0)) AS SellPunchInstalled,\n\nsum(COALESCE(ctd.EstimatedHours,0) * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent') * COALESCE(ercs.InstalledSellPunch,0)) AS EarnedSellPunchHours,\n\n\nctd.Rev, ctd.TimeStamp\n\nFROM CivilTrackerDetails ctd\n\nLEFT JOIN (SELECT sas.ActivityType, cs.SellTestPackageNumber, 1 AS InstalledSellPunch\n\t\t\tFROM CivilSellPackage cs \n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = cs.ActivityID AND sas.fk_ActivityStatus IN (5,12)) ercs\n\tON ercs.SellTestPackageNumber = ctd.TestPackageNumber AND ctd.ActivityType != \"Demo\"\n\nWHERE ctd.TestPackageNumber = :TestPackage\nGROUP BY BidID\nORDER By ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DetailDrawingNumber, ctd.DetailName, ctd.Description",
    "countQueryString" : "select count(*) from (SELECT ctd.UID, ctd.BidID, ctd.EWONumber, ctd.Scope, ctd.Phase, ctd.Stage, ctd.TestPackageNumber, ctd.CostCode, ctd.P6ID, ctd.AssignedContractor, ctd.Area, ctd.Location, ctd.Structure, ctd.Grouping, \nctd.FoundationDescription, ctd.CU, ctd.P6Description, ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DrawingRev, ctd.DetailDrawingNumber, ctd.DetailRev, ctd.DetailName, ctd.Description, ctd.ActivityType, \nctd.ActivitySubType, ctd.System, ctd.Service, ctd.TakeOffQuantity, ctd.QuantityUnit, ctd.EstimatedHours, \nctd.WBS1, ctd.WBS2, ctd.WBS3, ctd.WBS4, ctd.WBS5, ctd.WBS6, ctd.WBS7, ctd.WBS8, ctd.WBS9, ctd.WBS10, \n\n\ncount(ctd.BidID) AS SellPunchCount,\nsum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,\nsum(COALESCE(ercs.InstalledSellPunch,0)) AS SellPunchInstalled,\n\nsum(COALESCE(ctd.EstimatedHours,0) * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent') * COALESCE(ercs.InstalledSellPunch,0)) AS EarnedSellPunchHours,\n\n\nctd.Rev, ctd.TimeStamp\n\nFROM CivilTrackerDetails ctd\n\nLEFT JOIN (SELECT sas.ActivityType, cs.SellTestPackageNumber, 1 AS InstalledSellPunch\n\t\t\tFROM CivilSellPackage cs \n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = cs.ActivityID AND sas.fk_ActivityStatus IN (5,12)) ercs\n\tON ercs.SellTestPackageNumber = ctd.TestPackageNumber AND ctd.ActivityType != \"Demo\"\n\nWHERE ctd.TestPackageNumber = :TestPackage\nGROUP BY BidID\nORDER By ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DetailDrawingNumber, ctd.DetailName, ctd.Description) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesByTestPackageCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "UID",
        "fieldName" : "uid",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Grouping",
        "fieldName" : "grouping",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FoundationDescription",
        "fieldName" : "foundationDescription",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DrawingRev",
        "fieldName" : "drawingRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DetailDrawingNumber",
        "fieldName" : "detailDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailRev",
        "fieldName" : "detailRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DetailName",
        "fieldName" : "detailName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivitySubType",
        "fieldName" : "activitySubType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SellPunchCount",
        "fieldName" : "sellPunchCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      }, {
        "name" : "SellPunchHours",
        "fieldName" : "sellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellPunchInstalled",
        "fieldName" : "sellPunchInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "EarnedSellPunchHours",
        "fieldName" : "earnedSellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesByTestPackagePipe" : {
    "name" : "GetBidActivityMatchesByTestPackagePipe",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT ptd.ID, ptd.BidID, ptd.Scope, ptd.Phase, ptd.Area, ptd.Location, ptd.Elevation, ptd.CU, ptd.P6ID, ptd.P6Description, ptd.Stage, ptd.TestPackageNumber, ptd.CostCode, ptd.LineNumber, ptd.EngDrawingNumber, ptd.SheetNumber, \nptd.RevisionNumber, ptd.System, ptd.Service, ptd.ClientPipeSpec, ptd.MaterialCode, ptd.Description, ptd.ComponentNumber, ptd.ECT, ptd.PipingActivityType, ptd.PipeSize, ptd.TakeOffQuantity, ptd.QuantityUnit, ptd.EstimatedHours, \nptd.WBS1, ptd.WBS2, ptd.WBS3, ptd.WBS4, ptd.WBS5, ptd.WBS6, ptd.WBS7, ptd.WBS8, ptd.WBS9, ptd.WBS10, ptd.Rev, ptd.TimeStamp,\n\nReadyForTestingInstalled,\nHydroInstalled,\nClientTurnoverInstalled,\n\nste.ReadyForTestingHours AS ReadyForTestingHours,\nste.ReadyForTestingHours AS HydroHours,\nste.ReadyForTestingHours AS ClientTurnoverHours,\n\nert.EarnedReadyForTestingHours AS EarnedReadyForTestingHours,\nert.EarnedReadyForTestingHours AS EarnedHydroHours,\nert.EarnedReadyForTestingHours AS EarnedClientTurnoverHours\n\nFROM PipeTrackerDetails ptd\n\n\tLEFT JOIN (SELECT ptd.BidID,\nsum(COALESCE(pteR.InstalledReadyForTesting, 0)) AS ReadyForTestingInstalled,\nsum(COALESCE(pteH.InstalledHydro, 0)) AS HydroInstalled,\nsum(COALESCE(pteC.InstalledClientTurnover, 0)) AS ClientTurnoverInstalled,\n\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * pteR.InstalledReadyForTesting, 0)) AS EarnedReadyForTestingHours,\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') * pteH.InstalledHydro, 0)) AS EarnedHydroHours,\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') * pteC.InstalledClientTurnover, 0)) AS EarnedClientTurnoverHours\n\n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT pte.ActivityType, pte.TestingTestPackageNumber, 1 AS InstalledReadyForTesting\n\t\t\tFROM PipeTesting pte\n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = pte.ActivityID AND sas.fk_ActivityStatus IN (5,12)) pteR\n\tON pteR.TestingTestPackageNumber = ptd.TestPackageNumber AND pteR.ActivityType = 41 AND ptd.ECT != \"D\"\n    \nLEFT JOIN (SELECT pte.ActivityType, pte.TestingTestPackageNumber, 1 AS InstalledHydro\n\t\t\tFROM PipeTesting pte\n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = pte.ActivityID AND sas.fk_ActivityStatus IN (5,12)) pteH\n\tON pteH.TestingTestPackageNumber = ptd.TestPackageNumber AND pteH.ActivityType = 42 AND ptd.ECT != \"D\"\n    \nLEFT JOIN (SELECT pte.ActivityType, pte.TestingTestPackageNumber, 1 AS InstalledClientTurnover\n\t\t\tFROM PipeTesting pte\n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = pte.ActivityID AND sas.fk_ActivityStatus IN (5,12)) pteC\n\tON pteC.TestingTestPackageNumber = ptd.TestPackageNumber AND pteC.ActivityType = 43 AND ptd.ECT != \"D\"\n) ert\n\tON ert.BidID = ptd.BidID\n    \nLEFT JOIN (SELECT ptd.BidID, \n\t\t\t\tCOALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent'),0) AS TestingHours,\n                COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent')),0) AS ReadyForTestingHours,\n                COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent')),0) AS HydroHours,\n                COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent')),0) AS ClientTurnoverHours\n\t\t\t\tFROM `PipeTrackerDetails` ptd\n\t\t\t\tWHERE ptd.ECT != 'D') ste\n\tON ste.BidID = ptd.BidID\n\nWHERE ptd.TestPackageNumber = :TestPackage\nORDER BY ptd.EngDrawingNumber, ptd.SheetNumber",
    "countQueryString" : "select count(*) from (SELECT ptd.ID, ptd.BidID, ptd.Scope, ptd.Phase, ptd.Area, ptd.Location, ptd.Elevation, ptd.CU, ptd.P6ID, ptd.P6Description, ptd.Stage, ptd.TestPackageNumber, ptd.CostCode, ptd.LineNumber, ptd.EngDrawingNumber, ptd.SheetNumber, \nptd.RevisionNumber, ptd.System, ptd.Service, ptd.ClientPipeSpec, ptd.MaterialCode, ptd.Description, ptd.ComponentNumber, ptd.ECT, ptd.PipingActivityType, ptd.PipeSize, ptd.TakeOffQuantity, ptd.QuantityUnit, ptd.EstimatedHours, \nptd.WBS1, ptd.WBS2, ptd.WBS3, ptd.WBS4, ptd.WBS5, ptd.WBS6, ptd.WBS7, ptd.WBS8, ptd.WBS9, ptd.WBS10, ptd.Rev, ptd.TimeStamp,\n\nReadyForTestingInstalled,\nHydroInstalled,\nClientTurnoverInstalled,\n\nste.ReadyForTestingHours AS ReadyForTestingHours,\nste.ReadyForTestingHours AS HydroHours,\nste.ReadyForTestingHours AS ClientTurnoverHours,\n\nert.EarnedReadyForTestingHours AS EarnedReadyForTestingHours,\nert.EarnedReadyForTestingHours AS EarnedHydroHours,\nert.EarnedReadyForTestingHours AS EarnedClientTurnoverHours\n\nFROM PipeTrackerDetails ptd\n\n\tLEFT JOIN (SELECT ptd.BidID,\nsum(COALESCE(pteR.InstalledReadyForTesting, 0)) AS ReadyForTestingInstalled,\nsum(COALESCE(pteH.InstalledHydro, 0)) AS HydroInstalled,\nsum(COALESCE(pteC.InstalledClientTurnover, 0)) AS ClientTurnoverInstalled,\n\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * pteR.InstalledReadyForTesting, 0)) AS EarnedReadyForTestingHours,\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') * pteH.InstalledHydro, 0)) AS EarnedHydroHours,\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') * pteC.InstalledClientTurnover, 0)) AS EarnedClientTurnoverHours\n\n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT pte.ActivityType, pte.TestingTestPackageNumber, 1 AS InstalledReadyForTesting\n\t\t\tFROM PipeTesting pte\n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = pte.ActivityID AND sas.fk_ActivityStatus IN (5,12)) pteR\n\tON pteR.TestingTestPackageNumber = ptd.TestPackageNumber AND pteR.ActivityType = 41 AND ptd.ECT != \"D\"\n    \nLEFT JOIN (SELECT pte.ActivityType, pte.TestingTestPackageNumber, 1 AS InstalledHydro\n\t\t\tFROM PipeTesting pte\n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = pte.ActivityID AND sas.fk_ActivityStatus IN (5,12)) pteH\n\tON pteH.TestingTestPackageNumber = ptd.TestPackageNumber AND pteH.ActivityType = 42 AND ptd.ECT != \"D\"\n    \nLEFT JOIN (SELECT pte.ActivityType, pte.TestingTestPackageNumber, 1 AS InstalledClientTurnover\n\t\t\tFROM PipeTesting pte\n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = pte.ActivityID AND sas.fk_ActivityStatus IN (5,12)) pteC\n\tON pteC.TestingTestPackageNumber = ptd.TestPackageNumber AND pteC.ActivityType = 43 AND ptd.ECT != \"D\"\n) ert\n\tON ert.BidID = ptd.BidID\n    \nLEFT JOIN (SELECT ptd.BidID, \n\t\t\t\tCOALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent'),0) AS TestingHours,\n                COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent')),0) AS ReadyForTestingHours,\n                COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent')),0) AS HydroHours,\n                COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent')),0) AS ClientTurnoverHours\n\t\t\t\tFROM `PipeTrackerDetails` ptd\n\t\t\t\tWHERE ptd.ECT != 'D') ste\n\tON ste.BidID = ptd.BidID\n\nWHERE ptd.TestPackageNumber = :TestPackage\nORDER BY ptd.EngDrawingNumber, ptd.SheetNumber) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesByTestPackagePipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "LineNumber",
        "fieldName" : "lineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "RevisionNumber",
        "fieldName" : "revisionNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientPipeSpec",
        "fieldName" : "clientPipeSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MaterialCode",
        "fieldName" : "materialCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ComponentNumber",
        "fieldName" : "componentNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ECT",
        "fieldName" : "ect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PipingActivityType",
        "fieldName" : "pipingActivityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PipeSize",
        "fieldName" : "pipeSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReadyForTestingInstalled",
        "fieldName" : "readyForTestingInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "HydroInstalled",
        "fieldName" : "hydroInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ClientTurnoverInstalled",
        "fieldName" : "clientTurnoverInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ReadyForTestingHours",
        "fieldName" : "readyForTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HydroHours",
        "fieldName" : "hydroHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ClientTurnoverHours",
        "fieldName" : "clientTurnoverHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedReadyForTestingHours",
        "fieldName" : "earnedReadyForTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedHydroHours",
        "fieldName" : "earnedHydroHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedClientTurnoverHours",
        "fieldName" : "earnedClientTurnoverHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesByTestPackageSteel" : {
    "name" : "GetBidActivityMatchesByTestPackageSteel",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "SELECT std.BidID, std.Scope, std.EWONumber, std.Phase, std.Area, std.Location, std.Elevation, std.CU, std.P6ID, std.P6Description, std.Stage, std.TestPackageNumber, std.CostCode, std.PieceMark, \nstd.PieceMarkRev, std.Description, std.ActivityType, std.MaterialType, std.ClientMaterialSpec, std.PerformanceMaterialSpec, std.Length, std.Weight, \nstd.WeldCount, std.TakeOffQuantity, std.SteelHours, std.WeldHours, \nstd.WBS1, std.WBS2, std.WBS3, std.WBS4, std.WBS5, std.WBS6, std.WBS7, std.WBS8, std.WBS9, std.WBS10,\n\n### Installed Quantities ###\nsum(COALESCE(stlsell.FASellQuantity,0)) AS InstalledSell,\n\n### Remaining Quantities ###\n(COALESCE(std.TakeOffQuantity,0) - sum(COALESCE(stlsell.FASellQuantity,0))) AS RemainingSell\n\nFROM (SELECT BidID, Scope, EWONumber, Phase, Area, Location, Elevation, CU, P6ID, P6Description, Stage, TestPackageNumber, CostCode, PieceMark, PieceMarkRev, Description, ActivityType, MaterialType, ClientMaterialSpec, PerformanceMaterialSpec, Length, Weight, \n\t\tsum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,\n        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\t\tFROM SteelTrackerDetails \n\t\tGROUP BY BidID) std\n        \nLEFT JOIN SubmissionActivityStatus sas\n\tON sas.fk_BidIDAssigned = std.BidID AND sas.ActivityType = 65 AND sas.fk_ActivityStatus IN (5,12)\n    \nLEFT JOIN SteelSell stlsell\n\tON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n  \nWHERE TestPackageNumber = :TestPackage\nGROUP BY BidID\nORDER BY std.Area, std.PieceMark",
    "countQueryString" : "select count(*) from (SELECT std.BidID, std.Scope, std.EWONumber, std.Phase, std.Area, std.Location, std.Elevation, std.CU, std.P6ID, std.P6Description, std.Stage, std.TestPackageNumber, std.CostCode, std.PieceMark, \nstd.PieceMarkRev, std.Description, std.ActivityType, std.MaterialType, std.ClientMaterialSpec, std.PerformanceMaterialSpec, std.Length, std.Weight, \nstd.WeldCount, std.TakeOffQuantity, std.SteelHours, std.WeldHours, \nstd.WBS1, std.WBS2, std.WBS3, std.WBS4, std.WBS5, std.WBS6, std.WBS7, std.WBS8, std.WBS9, std.WBS10,\n\n### Installed Quantities ###\nsum(COALESCE(stlsell.FASellQuantity,0)) AS InstalledSell,\n\n### Remaining Quantities ###\n(COALESCE(std.TakeOffQuantity,0) - sum(COALESCE(stlsell.FASellQuantity,0))) AS RemainingSell\n\nFROM (SELECT BidID, Scope, EWONumber, Phase, Area, Location, Elevation, CU, P6ID, P6Description, Stage, TestPackageNumber, CostCode, PieceMark, PieceMarkRev, Description, ActivityType, MaterialType, ClientMaterialSpec, PerformanceMaterialSpec, Length, Weight, \n\t\tsum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,\n        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\t\tFROM SteelTrackerDetails \n\t\tGROUP BY BidID) std\n        \nLEFT JOIN SubmissionActivityStatus sas\n\tON sas.fk_BidIDAssigned = std.BidID AND sas.ActivityType = 65 AND sas.fk_ActivityStatus IN (5,12)\n    \nLEFT JOIN SteelSell stlsell\n\tON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n  \nWHERE TestPackageNumber = :TestPackage\nGROUP BY BidID\nORDER BY std.Area, std.PieceMark) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesByTestPackageSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMark",
        "fieldName" : "pieceMark",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMarkRev",
        "fieldName" : "pieceMarkRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MaterialType",
        "fieldName" : "materialType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientMaterialSpec",
        "fieldName" : "clientMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PerformanceMaterialSpec",
        "fieldName" : "performanceMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Length",
        "fieldName" : "length",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Weight",
        "fieldName" : "weight",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "WeldCount",
        "fieldName" : "weldCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SteelHours",
        "fieldName" : "steelHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldHours",
        "fieldName" : "weldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "InstalledSell",
        "fieldName" : "installedSell",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "RemainingSell",
        "fieldName" : "remainingSell",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesCivil" : {
    "name" : "GetBidActivityMatchesCivil",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "SELECT \nmin(UID) AS UID, min(BidID) AS BidID, EWONumber, Scope, Phase, Stage, TestPackageNumber, CostCode, P6ID, AssignedContractor, Area, Location, Structure, Grouping, FoundationDescription, CU, P6Description, \nEngDrawingNumber, SheetNumber, DrawingRev, DetailDrawingNumber, DetailRev, DetailName, Description, ActivityType, ActivitySubType, System, Service, \nsum(TakeOffQuantity) AS TakeOffQuantity, QuantityUnit, sum(EstimatedHours) AS EstimatedHours, \nWBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\nFROM CivilTrackerDetails\nWHERE BidID = :BidID\nOR \n(FoundationDescription LIKE :Foundation\nAND EngDrawingNumber LIKE :DrawingNumber\nAND DetailDrawingNumber LIKE :DetailDrawingNumber)\nGROUP BY BidID",
    "countQueryString" : "select count(*) from (SELECT \nmin(UID) AS UID, min(BidID) AS BidID, EWONumber, Scope, Phase, Stage, TestPackageNumber, CostCode, P6ID, AssignedContractor, Area, Location, Structure, Grouping, FoundationDescription, CU, P6Description, \nEngDrawingNumber, SheetNumber, DrawingRev, DetailDrawingNumber, DetailRev, DetailName, Description, ActivityType, ActivitySubType, System, Service, \nsum(TakeOffQuantity) AS TakeOffQuantity, QuantityUnit, sum(EstimatedHours) AS EstimatedHours, \nWBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\nFROM CivilTrackerDetails\nWHERE BidID = :BidID\nOR \n(FoundationDescription LIKE :Foundation\nAND EngDrawingNumber LIKE :DrawingNumber\nAND DetailDrawingNumber LIKE :DetailDrawingNumber)\nGROUP BY BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "Foundation",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "DetailDrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivitySubType",
        "fieldName" : "activitySubType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailDrawingNumber",
        "fieldName" : "detailDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailName",
        "fieldName" : "detailName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailRev",
        "fieldName" : "detailRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "DrawingRev",
        "fieldName" : "drawingRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "FoundationDescription",
        "fieldName" : "foundationDescription",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Grouping",
        "fieldName" : "grouping",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Byte",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "UID",
        "fieldName" : "uid",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesEquip" : {
    "name" : "GetBidActivityMatchesEquip",
    "description" : "Get all Equip Tracker Details that math the given FA",
    "version" : "V2",
    "queryString" : "SELECT \nmin(UID) AS UID, min(BidID) AS BidID, EWONumber, Scope, Phase, Stage, TestPackageNumber, CostCode, P6ID, AssignedContractor, Area, Location, Structure, CU, Elevation, P6Description, \nEngDrawingNumber, SheetNumber, DrawingRev, ComponentNumber, Description, EquipmentType, ActivityType, ClientMaterialSpec, PerformanceMaterialSpec, System, Service, \nsum(TakeOffQuantity) AS TakeOffQuantity, QuantityUnit, sum(EstimatedHours) AS EstimatedHours, \nWBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\n\nFROM EquipTrackerDetails\nWHERE BidID = :BidID\nOR \n(ComponentNumber LIKE :TagNumber\nAND Description LIKE :Description)\nGROUP BY BidID",
    "countQueryString" : "select count(*) from (SELECT \nmin(UID) AS UID, min(BidID) AS BidID, EWONumber, Scope, Phase, Stage, TestPackageNumber, CostCode, P6ID, AssignedContractor, Area, Location, Structure, CU, Elevation, P6Description, \nEngDrawingNumber, SheetNumber, DrawingRev, ComponentNumber, Description, EquipmentType, ActivityType, ClientMaterialSpec, PerformanceMaterialSpec, System, Service, \nsum(TakeOffQuantity) AS TakeOffQuantity, QuantityUnit, sum(EstimatedHours) AS EstimatedHours, \nWBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\n\nFROM EquipTrackerDetails\nWHERE BidID = :BidID\nOR \n(ComponentNumber LIKE :TagNumber\nAND Description LIKE :Description)\nGROUP BY BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "TagNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "Description",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesEquipResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "UID",
        "fieldName" : "uid",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DrawingRev",
        "fieldName" : "drawingRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ComponentNumber",
        "fieldName" : "componentNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EquipmentType",
        "fieldName" : "equipmentType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientMaterialSpec",
        "fieldName" : "clientMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PerformanceMaterialSpec",
        "fieldName" : "performanceMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesPipe" : {
    "name" : "GetBidActivityMatchesPipe",
    "description" : "Get the Bid Activities that match the input parameters.",
    "version" : "V1",
    "queryString" : "SELECT min(ptd.ID) AS ID, ptd.BidID, ptd.Scope, ptd.Phase, ptd.Area, ptd.Location, ptd.Structure, ptd.Elevation, ptd.CU, ptd.P6ID, ptd.P6Description, ptd.Stage, ptd.TestPackageNumber, ptd.AssignedContractor, ptd.CostCode, ptd.LineNumber, ptd.EngDrawingNumber, ptd.SheetNumber, \nptd.RevisionNumber, ptd.System, ptd.Service, ptd.ClientPipeSpec, ptd.MaterialCode, ptd.Description, ptd.ComponentNumber, ptd.ECT, ptd.PipingActivityType, ptd.PipeSize, sum(ptd.TakeOffQuantity) AS TakeOffQuantity, ptd.QuantityUnit, sum(ptd.EstimatedHours) AS EstimatedHours, \nptd.WBS1, ptd.WBS2, ptd.WBS3, ptd.WBS4, ptd.WBS5, ptd.WBS6, ptd.WBS7, ptd.WBS8, ptd.WBS9, ptd.WBS10, ptd.Rev, ptd.TimeStamp,\n\nsum(COALESCE(ptd.TakeOffQuantity,0)\n-COALESCE(er.InstalledFootage,0)\n-COALESCE(er.InstalledBoltUps,0)\n-COALESCE(er.InstalledWelds,0)\n-COALESCE(er.InstalledCuts,0)\n-COALESCE(er.InstalledTrim,0)\n-COALESCE(er.InstalledSupports,0)\n-COALESCE(er.InstalledMisc,0)\n-COALESCE(er.InstalledDemo,0)) AS RemainingQuant\n\n\nFROM PipeTrackerDetails ptd\n\n\tLEFT JOIN (SELECT ptd.ID, ptd.BidID,\nsum(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0)) AS InstalledFootage,\nsum(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0)) AS InstalledBoltUps, \nsum(COALESCE((pw.WeldPercentCompleted),0) + COALESCE(pmw.MiscQuantity,0)) AS InstalledWelds,\nsum(COALESCE((pcut.WeldPercentCompleted),0) + COALESCE(pmcut.MiscQuantity,0)) AS InstalledCuts,\nsum(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0)) AS InstalledTrim,\nsum(COALESCE((psu.SupportPercentCompleted * psu.SupportQuantity),0) + COALESCE(pmsu.MiscQuantity,0)) AS InstalledSupports,\nsum(COALESCE(IF(ptd.PipingActivityType = 'MISC' AND ptd.ECT != 'D', pm.MiscQuantity,0),0)) AS InstalledMisc,\nsum(COALESCE(pd.DemoQuantity,0) + COALESCE(pmd.MiscQuantity,0)) AS InstalledDemo\n\n\nFROM SubmissionActivityStatus sas\n\tJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PipeErection pe\n\t\tON pe.ActivityID = sas.ActivityID AND pe.ErectionRework = 0\n\tLEFT JOIN PipeBoltUp pb\n\t\tON pb.ActivityID = sas.ActivityID AND pb.BoltUpRework = 0\n\tLEFT JOIN PipeWeld pw\n\t\tON pw.ActivityID = sas.ActivityID AND pw.WeldRework = 0 AND sas.ActivityType = 22\n\tLEFT JOIN PipeWeld pcut\n\t\tON pcut.ActivityID = sas.ActivityID AND pcut.WeldRework = 0 AND sas.ActivityType = 23\n\tLEFT JOIN PipeTrim pt\n\t\tON pt.ActivityID = sas.ActivityID AND pt.TrimRework = 0\n\tLEFT JOIN PipeSupports psu\n\t\tON psu.ActivityID = sas.ActivityID and psu.SupportRework = 0\n\tLEFT JOIN PipeDemo pd\n\t\tON pd.ActivityID = sas.ActivityID\n    LEFT JOIN PipeMisc pm\n\t\tON pm.ActivityID = sas.ActivityID AND pm.MiscRework = 0\n        \n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID)ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n        \n\tLEFT JOIN PipeMisc pme\n\t\tON pme.ActivityID = sas.ActivityID AND ptd.PipingActivityType = 'PE'\n\tLEFT JOIN PipeMisc pmb\n\t\tON pmb.ActivityID = sas.ActivityID AND ptd.PipingActivityType = 'BU'\n\tLEFT JOIN PipeMisc pmw\n\t\tON pmw.ActivityID = sas.ActivityID AND ptd.PipingActivityType = 'W'\n\tLEFT JOIN PipeMisc pmcut\n\t\tON pmcut.ActivityID = sas.ActivityID AND ptd.ECT != 'D' AND ptd.PipingActivityType = 'CUT'\n\tLEFT JOIN PipeMisc pmt\n\t\tON pm.ActivityID = sas.ActivityID AND ptd.ECT = 'T' AND ptd.PipingActivityType != 'MISC' AND ptd.PipingActivityType != 'S'\n\tLEFT JOIN PipeMisc pmsu\n\t\tON pm.ActivityID = sas.ActivityID AND ptd.PipingActivityType = 'S'\n\tLEFT JOIN PipeMisc pmd\n\t\tON pm.ActivityID = sas.ActivityID AND ptd.ECT = 'D'\n\n        \nWHERE fk_ActivityStatus IN (5,12)\nGROUP BY ptd.BidID) er\n\t\tON er.ID = ptd.ID\nWHERE `LineNumber` LIKE :LineNumber\nAND `EngDrawingNumber` LIKE :DrawingNumber\nAND `SheetNumber` LIKE :SheetNumber\nAND `ECT` LIKE :ECT\nAND `PipingActivityType` LIKE :ECTType\n\nGROUP BY ptd.BidID",
    "countQueryString" : "select count(*) from (SELECT min(ptd.ID) AS ID, ptd.BidID, ptd.Scope, ptd.Phase, ptd.Area, ptd.Location, ptd.Structure, ptd.Elevation, ptd.CU, ptd.P6ID, ptd.P6Description, ptd.Stage, ptd.TestPackageNumber, ptd.AssignedContractor, ptd.CostCode, ptd.LineNumber, ptd.EngDrawingNumber, ptd.SheetNumber, \nptd.RevisionNumber, ptd.System, ptd.Service, ptd.ClientPipeSpec, ptd.MaterialCode, ptd.Description, ptd.ComponentNumber, ptd.ECT, ptd.PipingActivityType, ptd.PipeSize, sum(ptd.TakeOffQuantity) AS TakeOffQuantity, ptd.QuantityUnit, sum(ptd.EstimatedHours) AS EstimatedHours, \nptd.WBS1, ptd.WBS2, ptd.WBS3, ptd.WBS4, ptd.WBS5, ptd.WBS6, ptd.WBS7, ptd.WBS8, ptd.WBS9, ptd.WBS10, ptd.Rev, ptd.TimeStamp,\n\nsum(COALESCE(ptd.TakeOffQuantity,0)\n-COALESCE(er.InstalledFootage,0)\n-COALESCE(er.InstalledBoltUps,0)\n-COALESCE(er.InstalledWelds,0)\n-COALESCE(er.InstalledCuts,0)\n-COALESCE(er.InstalledTrim,0)\n-COALESCE(er.InstalledSupports,0)\n-COALESCE(er.InstalledMisc,0)\n-COALESCE(er.InstalledDemo,0)) AS RemainingQuant\n\n\nFROM PipeTrackerDetails ptd\n\n\tLEFT JOIN (SELECT ptd.ID, ptd.BidID,\nsum(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0)) AS InstalledFootage,\nsum(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0)) AS InstalledBoltUps, \nsum(COALESCE((pw.WeldPercentCompleted),0) + COALESCE(pmw.MiscQuantity,0)) AS InstalledWelds,\nsum(COALESCE((pcut.WeldPercentCompleted),0) + COALESCE(pmcut.MiscQuantity,0)) AS InstalledCuts,\nsum(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0)) AS InstalledTrim,\nsum(COALESCE((psu.SupportPercentCompleted * psu.SupportQuantity),0) + COALESCE(pmsu.MiscQuantity,0)) AS InstalledSupports,\nsum(COALESCE(IF(ptd.PipingActivityType = 'MISC' AND ptd.ECT != 'D', pm.MiscQuantity,0),0)) AS InstalledMisc,\nsum(COALESCE(pd.DemoQuantity,0) + COALESCE(pmd.MiscQuantity,0)) AS InstalledDemo\n\n\nFROM SubmissionActivityStatus sas\n\tJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PipeErection pe\n\t\tON pe.ActivityID = sas.ActivityID AND pe.ErectionRework = 0\n\tLEFT JOIN PipeBoltUp pb\n\t\tON pb.ActivityID = sas.ActivityID AND pb.BoltUpRework = 0\n\tLEFT JOIN PipeWeld pw\n\t\tON pw.ActivityID = sas.ActivityID AND pw.WeldRework = 0 AND sas.ActivityType = 22\n\tLEFT JOIN PipeWeld pcut\n\t\tON pcut.ActivityID = sas.ActivityID AND pcut.WeldRework = 0 AND sas.ActivityType = 23\n\tLEFT JOIN PipeTrim pt\n\t\tON pt.ActivityID = sas.ActivityID AND pt.TrimRework = 0\n\tLEFT JOIN PipeSupports psu\n\t\tON psu.ActivityID = sas.ActivityID and psu.SupportRework = 0\n\tLEFT JOIN PipeDemo pd\n\t\tON pd.ActivityID = sas.ActivityID\n    LEFT JOIN PipeMisc pm\n\t\tON pm.ActivityID = sas.ActivityID AND pm.MiscRework = 0\n        \n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID)ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n        \n\tLEFT JOIN PipeMisc pme\n\t\tON pme.ActivityID = sas.ActivityID AND ptd.PipingActivityType = 'PE'\n\tLEFT JOIN PipeMisc pmb\n\t\tON pmb.ActivityID = sas.ActivityID AND ptd.PipingActivityType = 'BU'\n\tLEFT JOIN PipeMisc pmw\n\t\tON pmw.ActivityID = sas.ActivityID AND ptd.PipingActivityType = 'W'\n\tLEFT JOIN PipeMisc pmcut\n\t\tON pmcut.ActivityID = sas.ActivityID AND ptd.ECT != 'D' AND ptd.PipingActivityType = 'CUT'\n\tLEFT JOIN PipeMisc pmt\n\t\tON pm.ActivityID = sas.ActivityID AND ptd.ECT = 'T' AND ptd.PipingActivityType != 'MISC' AND ptd.PipingActivityType != 'S'\n\tLEFT JOIN PipeMisc pmsu\n\t\tON pm.ActivityID = sas.ActivityID AND ptd.PipingActivityType = 'S'\n\tLEFT JOIN PipeMisc pmd\n\t\tON pm.ActivityID = sas.ActivityID AND ptd.ECT = 'D'\n\n        \nWHERE fk_ActivityStatus IN (5,12)\nGROUP BY ptd.BidID) er\n\t\tON er.ID = ptd.ID\nWHERE `LineNumber` LIKE :LineNumber\nAND `EngDrawingNumber` LIKE :DrawingNumber\nAND `SheetNumber` LIKE :SheetNumber\nAND `ECT` LIKE :ECT\nAND `PipingActivityType` LIKE :ECTType\n\nGROUP BY ptd.BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ECT",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ECTType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesPipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "LineNumber",
        "fieldName" : "lineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "RevisionNumber",
        "fieldName" : "revisionNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientPipeSpec",
        "fieldName" : "clientPipeSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MaterialCode",
        "fieldName" : "materialCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ComponentNumber",
        "fieldName" : "componentNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ECT",
        "fieldName" : "ect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PipingActivityType",
        "fieldName" : "pipingActivityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PipeSize",
        "fieldName" : "pipeSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "RemainingQuant",
        "fieldName" : "remainingQuant",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesSteel" : {
    "name" : "GetBidActivityMatchesSteel",
    "description" : "above",
    "version" : "V1",
    "queryString" : "SELECT \nmin(std.UID) AS UID, min(std.BidID) AS BidID, std.EWONumber, std.Scope, std.Phase,  std.Stage, std.TestPackageNumber, std.CostCode, std.P6ID, std.AssignedContractor, std.Area, std.Location, std.Structure, std.CU, \nstd.Elevation, std.P6Description, std.PieceMark, std.PieceMarkRev, std.Description, std.ActivityType, std.ClientMaterialSpec, std.PerformanceMaterialSpec, std.MaterialType, sum(std.Length) AS Length, \nsum(std.Weight) AS Weight, std.System, std.Service, sum(std.TakeOffQuantity) AS TakeOffQuantity, sum(std.WeldCount) AS WeldCount, sum(std.SteelHours) AS SteelHours, sum(std.WeldHours) WeldHours,\nstd.WBS1, std.WBS2, std.WBS3, std.WBS4, std.WBS5, std.WBS6, std.WBS7, std.WBS8, std.WBS9, std.WBS10\n\nFROM SteelTrackerDetails std\nWHERE Area LIKE :Area\nAND PieceMark LIKE :PieceMark\nAND ActivityType LIKE :BidActivityType\nAND MaterialType LIKE :SteelType\nGROUP BY Area, PieceMark",
    "countQueryString" : "select count(*) from (SELECT \nmin(std.UID) AS UID, min(std.BidID) AS BidID, std.EWONumber, std.Scope, std.Phase,  std.Stage, std.TestPackageNumber, std.CostCode, std.P6ID, std.AssignedContractor, std.Area, std.Location, std.Structure, std.CU, \nstd.Elevation, std.P6Description, std.PieceMark, std.PieceMarkRev, std.Description, std.ActivityType, std.ClientMaterialSpec, std.PerformanceMaterialSpec, std.MaterialType, sum(std.Length) AS Length, \nsum(std.Weight) AS Weight, std.System, std.Service, sum(std.TakeOffQuantity) AS TakeOffQuantity, sum(std.WeldCount) AS WeldCount, sum(std.SteelHours) AS SteelHours, sum(std.WeldHours) WeldHours,\nstd.WBS1, std.WBS2, std.WBS3, std.WBS4, std.WBS5, std.WBS6, std.WBS7, std.WBS8, std.WBS9, std.WBS10\n\nFROM SteelTrackerDetails std\nWHERE Area LIKE :Area\nAND PieceMark LIKE :PieceMark\nAND ActivityType LIKE :BidActivityType\nAND MaterialType LIKE :SteelType\nGROUP BY Area, PieceMark) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "PieceMark",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "BidActivityType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "SteelType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "UID",
        "fieldName" : "uid",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMark",
        "fieldName" : "pieceMark",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMarkRev",
        "fieldName" : "pieceMarkRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientMaterialSpec",
        "fieldName" : "clientMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PerformanceMaterialSpec",
        "fieldName" : "performanceMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MaterialType",
        "fieldName" : "materialType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Length",
        "fieldName" : "length",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Weight",
        "fieldName" : "weight",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldCount",
        "fieldName" : "weldCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "SteelHours",
        "fieldName" : "steelHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldHours",
        "fieldName" : "weldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityQuantitesEquip" : {
    "name" : "GetBidActivityQuantitesEquip",
    "description" : "name",
    "version" : "V2",
    "queryString" : "SELECT etd.BidID,\nsum(etd.TakeOffQuantity) AS TakeOffQuantity, etd.QuantityUnit,\n\nsum(COALESCE(etd.EstimatedHours,0)) AS FAHours,\nsum(COALESCE(er.InstalledPercent,0)) AS InstalledPercent\n\nFROM (SELECT BidID, TakeOffQuantity, QuantityUnit, EstimatedHours FROM EquipTrackerDetails WHERE BidID = :BidID GROUP BY BidID) etd\nLEFT JOIN(SELECT etd.BidID,\nCOALESCE(efa.FAPercentComplete,0) AS InstalledPercent\n\nFROM SubmissionActivityStatus sas \nLEFT JOIN EquipTrackerDetails etd\n    ON etd.BidID = sas.fk_BidIDAssigned\nLEFT JOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID AND efa.FARework = 0\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.ActivityType = 80\nAND sas.fk_ActivityStatus IN(5,12)\n) er\n\tON er.BidID = etd.BidID\nGROUP BY etd.BidID",
    "countQueryString" : "select count(*) from (SELECT etd.BidID,\nsum(etd.TakeOffQuantity) AS TakeOffQuantity, etd.QuantityUnit,\n\nsum(COALESCE(etd.EstimatedHours,0)) AS FAHours,\nsum(COALESCE(er.InstalledPercent,0)) AS InstalledPercent\n\nFROM (SELECT BidID, TakeOffQuantity, QuantityUnit, EstimatedHours FROM EquipTrackerDetails WHERE BidID = :BidID GROUP BY BidID) etd\nLEFT JOIN(SELECT etd.BidID,\nCOALESCE(efa.FAPercentComplete,0) AS InstalledPercent\n\nFROM SubmissionActivityStatus sas \nLEFT JOIN EquipTrackerDetails etd\n    ON etd.BidID = sas.fk_BidIDAssigned\nLEFT JOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID AND efa.FARework = 0\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.ActivityType = 80\nAND sas.fk_ActivityStatus IN(5,12)\n) er\n\tON er.BidID = etd.BidID\nGROUP BY etd.BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityQuantitesEquipResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAHours",
        "fieldName" : "fahours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledPercent",
        "fieldName" : "installedPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityQuantitiesCivil" : {
    "name" : "GetBidActivityQuantitiesCivil",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT ctd.BidID,\nsum(ctd.TakeOffQuantity) AS TakeOffQuantity, ctd.QuantityUnit,\n\nsum(COALESCE(ctd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent'),0)) AS FAHours,\nsum(COALESCE(er.InstalledQuantity,0)) AS InstalledQuantity,\nsum(COALESCE(er.InstalledPercent,0)) AS InstalledPercent\n\nFROM (SELECT BidID, TakeOffQuantity, QuantityUnit, EstimatedHours FROM CivilTrackerDetails WHERE BidID = :BidID GROUP BY BidID) ctd\nLEFT JOIN(SELECT ctd.BidID,\nCOALESCE(\nIF(cfa.ActivityType = 70, \n/*TRUE*/((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cm.MiscPercentComplete,0)) * ctd.TakeOffQuantity),\n/*FALSE*/cfa.FAQuantity)\n,0) AS InstalledQuantity,\n(COALESCE(cfa.FAPercentComplete,0) + COALESCE(cm.MiscPercentComplete,0)) AS InstalledPercent\n\nFROM SubmissionActivityStatus sas \nLEFT JOIN CivilTrackerDetails ctd\n    ON ctd.BidID = sas.fk_BidIDAssigned\nLEFT JOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID AND cfa.FARework = 0\nLEFT JOIN CivilMisc cm\n\tON cm.ActivityID = sas.ActivityID AND cfa.FARework = 0\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.ActivityType IN (70,71,77,97)\nAND sas.fk_ActivityStatus IN(5,12)\n) er\n\tON er.BidID = ctd.BidID\nGROUP BY ctd.BidID",
    "countQueryString" : "select count(*) from (SELECT ctd.BidID,\nsum(ctd.TakeOffQuantity) AS TakeOffQuantity, ctd.QuantityUnit,\n\nsum(COALESCE(ctd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent'),0)) AS FAHours,\nsum(COALESCE(er.InstalledQuantity,0)) AS InstalledQuantity,\nsum(COALESCE(er.InstalledPercent,0)) AS InstalledPercent\n\nFROM (SELECT BidID, TakeOffQuantity, QuantityUnit, EstimatedHours FROM CivilTrackerDetails WHERE BidID = :BidID GROUP BY BidID) ctd\nLEFT JOIN(SELECT ctd.BidID,\nCOALESCE(\nIF(cfa.ActivityType = 70, \n/*TRUE*/((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cm.MiscPercentComplete,0)) * ctd.TakeOffQuantity),\n/*FALSE*/cfa.FAQuantity)\n,0) AS InstalledQuantity,\n(COALESCE(cfa.FAPercentComplete,0) + COALESCE(cm.MiscPercentComplete,0)) AS InstalledPercent\n\nFROM SubmissionActivityStatus sas \nLEFT JOIN CivilTrackerDetails ctd\n    ON ctd.BidID = sas.fk_BidIDAssigned\nLEFT JOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID AND cfa.FARework = 0\nLEFT JOIN CivilMisc cm\n\tON cm.ActivityID = sas.ActivityID AND cfa.FARework = 0\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.ActivityType IN (70,71,77,97)\nAND sas.fk_ActivityStatus IN(5,12)\n) er\n\tON er.BidID = ctd.BidID\nGROUP BY ctd.BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityQuantitiesCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAHours",
        "fieldName" : "fahours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledQuantity",
        "fieldName" : "installedQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledPercent",
        "fieldName" : "installedPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityQuantitiesPipe" : {
    "name" : "GetBidActivityQuantitiesPipe",
    "description" : "Gets the Bid estimate Quantity of a specified BidID",
    "version" : "V1",
    "queryString" : "SELECT sum(COALESCE(ptd.TakeOffQuantity,0)) AS TakeOffQuantity , ptd.QuantityUnit, \nIF(ptd.ECT = 'D', sum(COALESCE(ptd.EstimatedHours,0)), \n    sum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),0)) \n)AS EstimatedHours\nFROM PipeTrackerDetails ptd\nWHERE BidID = :BidID\nGROUP BY BidID",
    "countQueryString" : "select count(*) from (SELECT sum(COALESCE(ptd.TakeOffQuantity,0)) AS TakeOffQuantity , ptd.QuantityUnit, \nIF(ptd.ECT = 'D', sum(COALESCE(ptd.EstimatedHours,0)), \n    sum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),0)) \n)AS EstimatedHours\nFROM PipeTrackerDetails ptd\nWHERE BidID = :BidID\nGROUP BY BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityQuantitiesPipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityQuantitiesSteel" : {
    "name" : "GetBidActivityQuantitiesSteel",
    "description" : "Get Steel Quantities for Activity Assign Dialog",
    "version" : "V1",
    "queryString" : "SELECT std.BidID,\n### Quantities ###\n(std.TakeOffQuantity) AS SteelQuantity,\n(std.WeldCount) AS WeldQuantity,  \n\n### Hours ###\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent'),0)) AS ShakeHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent'),0)) AS ErectHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent'),0)) AS BoltoutHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent'),0)) AS ImpHours,\n(COALESCE(std.WeldHours,0)) AS WeldHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent'),0)) AS SellHours,\n(COALESCE(IF(std.ActivityType = 'D', std.SteelHours, 0),0)) AS DemoHours,\n(COALESCE(IF(std.ActivityType = 'MISC', std.SteelHours, 0),0)) AS MiscHours,\n\n### Installed Quantities ###\nsum(COALESCE(er.InstalledShake,0)) AS InstalledShake,\nsum(COALESCE(er.InstalledErect,0)) AS InstalledErect,\nsum(COALESCE(er.InstalledBoltout,0)) AS InstalledBoltout,\nsum(COALESCE(er.InstalledImp,0)) AS InstalledImp,\nsum(COALESCE(er.InstalledWeld,0)) AS InstalledWeld,\nsum(COALESCE(er.InstalledSell,0)) AS InstalledSell,\nsum(COALESCE(er.InstalledDemo,0)) AS InstalledDemo,\nsum(COALESCE(er.InstalledMisc,0)) AS InstalledMisc\n\nFROM (SELECT BidID, TestPackageNumber, ActivityType, \n\t\tsum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours  \n\t\tFROM SteelTrackerDetails\n        GROUP BY BidID) std\n\nLEFT JOIN(SELECT std.BidID,\nCOALESCE(stls.FAShakeQuantity,0) AS InstalledShake,\nCOALESCE(stle.FAErectQuantity,0) AS InstalledErect,\nCOALESCE(stlb.FABoltOutQuantity,0) AS InstalledBoltout,\nCOALESCE(stli.FAImpQuantity,0) AS InstalledImp,\nCOALESCE(stlw.FAWeldQuantity,0) AS InstalledWeld,\nCOALESCE(stlsell.FASellQuantity,0) AS InstalledSell,\nCOALESCE(stld.DemoQuantity,0) AS InstalledDemo,\nCOALESCE(stlm.MiscQuantity,0) AS InstalledMisc\n\nFROM SteelTrackerDetails std\n\nLEFT JOIN SubmissionActivityStatus sas\n\tON sas.fk_BidIDAssigned = std.BidID AND sas.ActivityType IN (60,61,62,63,64,65,66,67,68,96)\nLEFT JOIN SteelShake stls\n\tON stls.ActivityID = sas.ActivityID AND stls.FARework = 0\nLEFT JOIN SteelErect stle\n\tON stle.ActivityID = sas.ActivityID AND stls.FARework = 0\nLEFT JOIN SteelBoltOut stlb\n\tON stlb.ActivityID = sas.ActivityID AND stls.FARework = 0\nLEFT JOIN SteelImp stli\n\tON stli.ActivityID = sas.ActivityID AND stls.FARework = 0\nLEFT JOIN SteelSell stlsell\n\tON stlsell.ActivityID = sas.ActivityID AND stls.FARework = 0\nLEFT JOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID AND stls.FARework = 0\nLEFT JOIN SteelWeld stlw\n\tON stlw.ActivityID = sas.ActivityID AND stls.FARework = 0\nLEFT JOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID AND stls.FARework = 0\nWHERE sas.fk_ActivityStatus IN (5,12)\n) er\n\tON er.BidID = std.BidID\n\nWHERE std.BidID = :BidID\nGROUP BY BidID",
    "countQueryString" : "select count(*) from (SELECT std.BidID,\n### Quantities ###\n(std.TakeOffQuantity) AS SteelQuantity,\n(std.WeldCount) AS WeldQuantity,  \n\n### Hours ###\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent'),0)) AS ShakeHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent'),0)) AS ErectHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent'),0)) AS BoltoutHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent'),0)) AS ImpHours,\n(COALESCE(std.WeldHours,0)) AS WeldHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent'),0)) AS SellHours,\n(COALESCE(IF(std.ActivityType = 'D', std.SteelHours, 0),0)) AS DemoHours,\n(COALESCE(IF(std.ActivityType = 'MISC', std.SteelHours, 0),0)) AS MiscHours,\n\n### Installed Quantities ###\nsum(COALESCE(er.InstalledShake,0)) AS InstalledShake,\nsum(COALESCE(er.InstalledErect,0)) AS InstalledErect,\nsum(COALESCE(er.InstalledBoltout,0)) AS InstalledBoltout,\nsum(COALESCE(er.InstalledImp,0)) AS InstalledImp,\nsum(COALESCE(er.InstalledWeld,0)) AS InstalledWeld,\nsum(COALESCE(er.InstalledSell,0)) AS InstalledSell,\nsum(COALESCE(er.InstalledDemo,0)) AS InstalledDemo,\nsum(COALESCE(er.InstalledMisc,0)) AS InstalledMisc\n\nFROM (SELECT BidID, TestPackageNumber, ActivityType, \n\t\tsum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours  \n\t\tFROM SteelTrackerDetails\n        GROUP BY BidID) std\n\nLEFT JOIN(SELECT std.BidID,\nCOALESCE(stls.FAShakeQuantity,0) AS InstalledShake,\nCOALESCE(stle.FAErectQuantity,0) AS InstalledErect,\nCOALESCE(stlb.FABoltOutQuantity,0) AS InstalledBoltout,\nCOALESCE(stli.FAImpQuantity,0) AS InstalledImp,\nCOALESCE(stlw.FAWeldQuantity,0) AS InstalledWeld,\nCOALESCE(stlsell.FASellQuantity,0) AS InstalledSell,\nCOALESCE(stld.DemoQuantity,0) AS InstalledDemo,\nCOALESCE(stlm.MiscQuantity,0) AS InstalledMisc\n\nFROM SteelTrackerDetails std\n\nLEFT JOIN SubmissionActivityStatus sas\n\tON sas.fk_BidIDAssigned = std.BidID AND sas.ActivityType IN (60,61,62,63,64,65,66,67,68,96)\nLEFT JOIN SteelShake stls\n\tON stls.ActivityID = sas.ActivityID AND stls.FARework = 0\nLEFT JOIN SteelErect stle\n\tON stle.ActivityID = sas.ActivityID AND stls.FARework = 0\nLEFT JOIN SteelBoltOut stlb\n\tON stlb.ActivityID = sas.ActivityID AND stls.FARework = 0\nLEFT JOIN SteelImp stli\n\tON stli.ActivityID = sas.ActivityID AND stls.FARework = 0\nLEFT JOIN SteelSell stlsell\n\tON stlsell.ActivityID = sas.ActivityID AND stls.FARework = 0\nLEFT JOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID AND stls.FARework = 0\nLEFT JOIN SteelWeld stlw\n\tON stlw.ActivityID = sas.ActivityID AND stls.FARework = 0\nLEFT JOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID AND stls.FARework = 0\nWHERE sas.fk_ActivityStatus IN (5,12)\n) er\n\tON er.BidID = std.BidID\n\nWHERE std.BidID = :BidID\nGROUP BY BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityQuantitiesSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "SteelQuantity",
        "fieldName" : "steelQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldQuantity",
        "fieldName" : "weldQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ShakeHours",
        "fieldName" : "shakeHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ErectHours",
        "fieldName" : "erectHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "BoltoutHours",
        "fieldName" : "boltoutHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ImpHours",
        "fieldName" : "impHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldHours",
        "fieldName" : "weldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellHours",
        "fieldName" : "sellHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "DemoHours",
        "fieldName" : "demoHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "MiscHours",
        "fieldName" : "miscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledShake",
        "fieldName" : "installedShake",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledErect",
        "fieldName" : "installedErect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledBoltout",
        "fieldName" : "installedBoltout",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledImp",
        "fieldName" : "installedImp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledWeld",
        "fieldName" : "installedWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledSell",
        "fieldName" : "installedSell",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledDemo",
        "fieldName" : "installedDemo",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledMisc",
        "fieldName" : "installedMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      } ]
    }
  },
  "GetBidChangeLogByID" : {
    "name" : "GetBidChangeLogByID",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT ID,BidID,Scope,Phase,Area,Location,Elevation,CU,P6ID,P6Description,Stage,TestPackageNumber,CostCode,LineNumber,EngDrawingNumber,SheetNumber,RevisionNumber,System,Service,ClientPipeSpec,MaterialCode,Description,ComponentNumber,ECT,PipingActivityType,PipeSize,TakeOffQuantity,QuantityUnit,EstimatedHours,WBS1,WBS2,WBS3,WBS4,WBS5,WBS6,WBS7,WBS8,WBS9,WBS10,Rev,TimeStamp \nFROM PipeTrackerDetails ptd\nWHERE ID = :ID\nUNION\nSELECT fk_OrgId,BidID,Scope,Phase,Area,Location,Elevation,CU,P6ID,P6Description,Stage,TestPackageNumber,CostCode,LineNumber,EngDrawingNumber,SheetNumber,RevisionNumber,System,Service,ClientPipeSpec,MaterialCode,Description,ComponentNumber,ECT,PipingActivityType,PipeSize,TakeOffQuantity,QuantityUnit,EstimatedHours,WBS1,WBS2,WBS3,WBS4,WBS5,WBS6,WBS7,WBS8,WBS9,WBS10,Rev,TimeStamp\nFROM PipeTrackerDetailsREV tdr\nWHERE tdr.fk_OrgID = :ID\nOrder By TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT ID,BidID,Scope,Phase,Area,Location,Elevation,CU,P6ID,P6Description,Stage,TestPackageNumber,CostCode,LineNumber,EngDrawingNumber,SheetNumber,RevisionNumber,System,Service,ClientPipeSpec,MaterialCode,Description,ComponentNumber,ECT,PipingActivityType,PipeSize,TakeOffQuantity,QuantityUnit,EstimatedHours,WBS1,WBS2,WBS3,WBS4,WBS5,WBS6,WBS7,WBS8,WBS9,WBS10,Rev,TimeStamp \nFROM PipeTrackerDetails ptd\nWHERE ID = :ID\nUNION\nSELECT fk_OrgId,BidID,Scope,Phase,Area,Location,Elevation,CU,P6ID,P6Description,Stage,TestPackageNumber,CostCode,LineNumber,EngDrawingNumber,SheetNumber,RevisionNumber,System,Service,ClientPipeSpec,MaterialCode,Description,ComponentNumber,ECT,PipingActivityType,PipeSize,TakeOffQuantity,QuantityUnit,EstimatedHours,WBS1,WBS2,WBS3,WBS4,WBS5,WBS6,WBS7,WBS8,WBS9,WBS10,Rev,TimeStamp\nFROM PipeTrackerDetailsREV tdr\nWHERE tdr.fk_OrgID = :ID\nOrder By TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidChangeLogByIdResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ID",
        "fieldName" : "id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "LineNumber",
        "fieldName" : "lineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "RevisionNumber",
        "fieldName" : "revisionNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientPipeSpec",
        "fieldName" : "clientPipeSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MaterialCode",
        "fieldName" : "materialCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ComponentNumber",
        "fieldName" : "componentNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ECT",
        "fieldName" : "ect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PipingActivityType",
        "fieldName" : "pipingActivityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PipeSize",
        "fieldName" : "pipeSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistoryCivil" : {
    "name" : "GetBidWorkHistoryCivil",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\n\n### Quantities Installed ###\nsum(COALESCE(cfa.FAQuantity,0)) AS Quantity,\n\n((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * 100) AS PercentClaimed,\n\nCONCAT(IF(cfa.FANotes IS NOT NULL, cfa.FANotes, ''), IF(cfm.MiscNotes IS NOT NULL, cfm.MiscNotes, '')) AS Notes,\nIF(cfa.FARework = 1 OR cfm.MiscRework = 1, 1, 0) AS Rework\n\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n        \nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType IN (70,71,97)\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\n#### Assigned Activities Joins #####    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID\nLEFT JOIN CivilMisc cfm\n\tON cfm.ActivityID = sas.ActivityID\nLEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours\n\t\t\tFROM `CivilTrackerDetails`\n\t\t\tGROUP BY BidID) ctd\n\tON ctd.BidID = sas.fk_BidIDAssigned\n\nWHERE sas.fk_BidIDAssigned = :BidID     \nAND fk_ActivityStatus IN (5,12)\nAND sas.ActivityType IN (70,71,97)\n\nGROUP BY sas.ActivityID",
    "countQueryString" : "select count(*) from (SELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\n\n### Quantities Installed ###\nsum(COALESCE(cfa.FAQuantity,0)) AS Quantity,\n\n((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * 100) AS PercentClaimed,\n\nCONCAT(IF(cfa.FANotes IS NOT NULL, cfa.FANotes, ''), IF(cfm.MiscNotes IS NOT NULL, cfm.MiscNotes, '')) AS Notes,\nIF(cfa.FARework = 1 OR cfm.MiscRework = 1, 1, 0) AS Rework\n\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n        \nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType IN (70,71,97)\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\n#### Assigned Activities Joins #####    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID\nLEFT JOIN CivilMisc cfm\n\tON cfm.ActivityID = sas.ActivityID\nLEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours\n\t\t\tFROM `CivilTrackerDetails`\n\t\t\tGROUP BY BidID) ctd\n\tON ctd.BidID = sas.fk_BidIDAssigned\n\nWHERE sas.fk_BidIDAssigned = :BidID     \nAND fk_ActivityStatus IN (5,12)\nAND sas.ActivityType IN (70,71,97)\n\nGROUP BY sas.ActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistoryCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "PercentClaimed",
        "fieldName" : "percentClaimed",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistoryEquip" : {
    "name" : "GetBidWorkHistoryEquip",
    "description" : "name",
    "version" : "V2",
    "queryString" : "SELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\n\n### Quantities Installed ###\nsum(COALESCE(efa.FAQuantity,0)) AS Quantity,\n\n(COALESCE(efa.FAPercentComplete,0) * 100) AS PercentClaimed,\n\nIF(efa.FANotes IS NOT NULL, efa.FANotes, '') AS Notes,\n(efa.FARework = 1) AS Rework\n\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n        \nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 80\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\n#### Assigned Activities Joins #####    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID\n\nLEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours\n\t\t\tFROM `EquipTrackerDetails`\n\t\t\tGROUP BY BidID) etd\n\tON etd.BidID = sas.fk_BidIDAssigned\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND fk_ActivityStatus IN (5,12)\nAND sas.ActivityType = 80\n\nGROUP BY sas.ActivityID",
    "countQueryString" : "select count(*) from (SELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\n\n### Quantities Installed ###\nsum(COALESCE(efa.FAQuantity,0)) AS Quantity,\n\n(COALESCE(efa.FAPercentComplete,0) * 100) AS PercentClaimed,\n\nIF(efa.FANotes IS NOT NULL, efa.FANotes, '') AS Notes,\n(efa.FARework = 1) AS Rework\n\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n        \nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 80\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\n#### Assigned Activities Joins #####    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID\n\nLEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours\n\t\t\tFROM `EquipTrackerDetails`\n\t\t\tGROUP BY BidID) etd\n\tON etd.BidID = sas.fk_BidIDAssigned\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND fk_ActivityStatus IN (5,12)\nAND sas.ActivityType = 80\n\nGROUP BY sas.ActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistoryEquipResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "PercentClaimed",
        "fieldName" : "percentClaimed",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistoryPipe" : {
    "name" : "GetBidWorkHistoryPipe",
    "description" : "Get all activities assigned/ earning hours against bid ID",
    "version" : "V1",
    "queryString" : "SELECT sas.ActivityID, at.ActivityType, \n \nCOALESCE((pe.ErectionLengthSpool1 + pe.ErectionLengthSpool2 + pe.ErectionLengthSpool3 + pe.ErectionLengthSpool4 + pe.ErectionLengthSpool5 + pe.ErectionLengthSpool6),0) AS Quantity,\npe.ErectionNotes AS Notes,\npe.Rev,\npe.ErectionRework AS Rework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\nJOIN PipeErection pe\n\tON pe.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.ActivityID, at.ActivityType,  \n \npb.BoltUpQuantity AS Quantity,\npb.BoltUpNotes AS Notes,\npb.Rev,\npb.BoltUpRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\nJOIN PipeBoltUp pb\n\tON pb.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.ActivityID, at.ActivityType,  \n \nCOALESCE((pw.WeldPercentCompleted),0) AS Quantity,\npw.WeldNotes AS Notes,\npw.Rev,\npw.WeldRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\nJOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.ActivityID, at.ActivityType,  \n \npt.TrimQuantity AS Quantity,\npt.TrimNotes AS Notes,  \npt.Rev,\npt.TrimRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\nJOIN PipeTrim pt\n\tON pt.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.ActivityID, at.ActivityType,  \n \nIF(psu.SupportComplete = 1, psu.SupportQuantity, COALESCE((psu.SupportPercentCompleted),0)) AS Quantity,\npsu.SupportNotes AS Notes,  \npsu.Rev,\npsu.SupportRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\nJOIN PipeSupports psu\n\tON psu.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.ActivityID, at.ActivityType,  \n \npd.DemoQuantity AS Quantity,\npd.DemoNotes AS Notes, \npd.Rev,\n'0',\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\nJOIN PipeDemo pd\n\tON pd.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.ActivityID, at.ActivityType,  \n \npm.MiscQuantity AS Quantity,\npm.MiscNotes AS Notes,\npm.Rev,\npm.MiscRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\nJOIN PipeMisc pm\n\tON pm.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT pteR.ActivityID, at.ActivityType, \n \n1 AS Quantity,\npteR.TestingNotes AS Notes,\npteR.Rev,\npteR.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, sasr.TimeStamp AS ReviewedTime \n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT sas.ActivityID, sas.SubmissionID, \n\t\t\t sas.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework\n\t\t\tFROM PipeTesting ste\n\t\t\tJOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 41 AND sas.fk_ActivityStatus IN (5,12)) pteR\n\tON pteR.TestingTestPackageNumber = ptd.TestPackageNumber AND ptd.ECT != 'D'\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = pteR.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionID = pteR.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp, sasr.fk_ActivityStatus\n\t\t\tFROM SubmissionActivityStatusREV sasr\n\t\t\tWHERE sasr.fk_ActivityStatus = 2\n\t\t\tGROUP BY fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = pteR.ActivityID \n    \nWHERE ptd.BidID = :BidID\nAND pteR.ActivityID IS NOT NULL\n\nUNION ALL\n\n\nSELECT pteH.ActivityID, at.ActivityType, \n \n1 AS Quantity,\npteH.TestingNotes AS Notes,\npteH.Rev,\npteH.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, sasr.TimeStamp AS ReviewedTime \n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT sas.ActivityID, sas.SubmissionID,  \n\t\t\t sas.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework\n\t\t\tFROM PipeTesting ste\n\t\t\tJOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = sas.ActivityID AND sas.ActivityType = 42 AND sas.fk_ActivityStatus IN (5,12) ) pteH\n\tON pteH.TestingTestPackageNumber = ptd.TestPackageNumber AND ptd.ECT != 'D' \n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = pteH.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionID = pteH.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp, sasr.fk_ActivityStatus\n\t\t\tFROM SubmissionActivityStatusREV sasr\n\t\t\tWHERE sasr.fk_ActivityStatus = 2\n\t\t\tGROUP BY fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = pteH.ActivityID \n        \nWHERE ptd.BidID = :BidID\nAND pteH.ActivityID IS NOT NULL\n\n\nUNION ALL\n\n\nSELECT pteC.ActivityID, at.ActivityType,\n \n1 AS Quantity,\npteC.TestingNotes AS Notes,\npteC.Rev,\npteC.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, sasr.TimeStamp AS ReviewedTime \n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT sas.ActivityID, sas.SubmissionID, \n\t\t\t sas.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework\n\t\t\tFROM PipeTesting ste\n\t\t\tJOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 43 AND sas.fk_ActivityStatus IN (5,12)) pteC\n\tON pteC.TestingTestPackageNumber = ptd.TestPackageNumber AND ptd.ECT != 'D'\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = pteC.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionID = pteC.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp, sasr.fk_ActivityStatus\n\t\t\tFROM SubmissionActivityStatusREV sasr\n\t\t\tWHERE sasr.fk_ActivityStatus = 2\n\t\t\tGROUP BY fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = pteC.ActivityID \nWHERE ptd.BidID = :BidID\nAND pteC.ActivityID IS NOT NULL",
    "countQueryString" : "select count(*) from (SELECT sas.ActivityID, at.ActivityType, \n \nCOALESCE((pe.ErectionLengthSpool1 + pe.ErectionLengthSpool2 + pe.ErectionLengthSpool3 + pe.ErectionLengthSpool4 + pe.ErectionLengthSpool5 + pe.ErectionLengthSpool6),0) AS Quantity,\npe.ErectionNotes AS Notes,\npe.Rev,\npe.ErectionRework AS Rework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\nJOIN PipeErection pe\n\tON pe.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.ActivityID, at.ActivityType,  \n \npb.BoltUpQuantity AS Quantity,\npb.BoltUpNotes AS Notes,\npb.Rev,\npb.BoltUpRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\nJOIN PipeBoltUp pb\n\tON pb.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.ActivityID, at.ActivityType,  \n \nCOALESCE((pw.WeldPercentCompleted),0) AS Quantity,\npw.WeldNotes AS Notes,\npw.Rev,\npw.WeldRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\nJOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.ActivityID, at.ActivityType,  \n \npt.TrimQuantity AS Quantity,\npt.TrimNotes AS Notes,  \npt.Rev,\npt.TrimRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\nJOIN PipeTrim pt\n\tON pt.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.ActivityID, at.ActivityType,  \n \nIF(psu.SupportComplete = 1, psu.SupportQuantity, COALESCE((psu.SupportPercentCompleted),0)) AS Quantity,\npsu.SupportNotes AS Notes,  \npsu.Rev,\npsu.SupportRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\nJOIN PipeSupports psu\n\tON psu.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.ActivityID, at.ActivityType,  \n \npd.DemoQuantity AS Quantity,\npd.DemoNotes AS Notes, \npd.Rev,\n'0',\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\nJOIN PipeDemo pd\n\tON pd.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.ActivityID, at.ActivityType,  \n \npm.MiscQuantity AS Quantity,\npm.MiscNotes AS Notes,\npm.Rev,\npm.MiscRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\nJOIN PipeMisc pm\n\tON pm.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT pteR.ActivityID, at.ActivityType, \n \n1 AS Quantity,\npteR.TestingNotes AS Notes,\npteR.Rev,\npteR.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, sasr.TimeStamp AS ReviewedTime \n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT sas.ActivityID, sas.SubmissionID, \n\t\t\t sas.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework\n\t\t\tFROM PipeTesting ste\n\t\t\tJOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 41 AND sas.fk_ActivityStatus IN (5,12)) pteR\n\tON pteR.TestingTestPackageNumber = ptd.TestPackageNumber AND ptd.ECT != 'D'\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = pteR.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionID = pteR.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp, sasr.fk_ActivityStatus\n\t\t\tFROM SubmissionActivityStatusREV sasr\n\t\t\tWHERE sasr.fk_ActivityStatus = 2\n\t\t\tGROUP BY fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = pteR.ActivityID \n    \nWHERE ptd.BidID = :BidID\nAND pteR.ActivityID IS NOT NULL\n\nUNION ALL\n\n\nSELECT pteH.ActivityID, at.ActivityType, \n \n1 AS Quantity,\npteH.TestingNotes AS Notes,\npteH.Rev,\npteH.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, sasr.TimeStamp AS ReviewedTime \n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT sas.ActivityID, sas.SubmissionID,  \n\t\t\t sas.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework\n\t\t\tFROM PipeTesting ste\n\t\t\tJOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = sas.ActivityID AND sas.ActivityType = 42 AND sas.fk_ActivityStatus IN (5,12) ) pteH\n\tON pteH.TestingTestPackageNumber = ptd.TestPackageNumber AND ptd.ECT != 'D' \n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = pteH.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionID = pteH.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp, sasr.fk_ActivityStatus\n\t\t\tFROM SubmissionActivityStatusREV sasr\n\t\t\tWHERE sasr.fk_ActivityStatus = 2\n\t\t\tGROUP BY fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = pteH.ActivityID \n        \nWHERE ptd.BidID = :BidID\nAND pteH.ActivityID IS NOT NULL\n\n\nUNION ALL\n\n\nSELECT pteC.ActivityID, at.ActivityType,\n \n1 AS Quantity,\npteC.TestingNotes AS Notes,\npteC.Rev,\npteC.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, sasr.TimeStamp AS ReviewedTime \n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT sas.ActivityID, sas.SubmissionID, \n\t\t\t sas.ActivityType, ste.TestingTestPackageNumber, ste.TestingNotes, ste.Rev, ste.TestingRework\n\t\t\tFROM PipeTesting ste\n\t\t\tJOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 43 AND sas.fk_ActivityStatus IN (5,12)) pteC\n\tON pteC.TestingTestPackageNumber = ptd.TestPackageNumber AND ptd.ECT != 'D'\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = pteC.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionID = pteC.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp, sasr.fk_ActivityStatus\n\t\t\tFROM SubmissionActivityStatusREV sasr\n\t\t\tWHERE sasr.fk_ActivityStatus = 2\n\t\t\tGROUP BY fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = pteC.ActivityID \nWHERE ptd.BidID = :BidID\nAND pteC.ActivityID IS NOT NULL) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistoryPipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistorySteel" : {
    "name" : "GetBidWorkHistorySteel",
    "description" : "Get all Field activities assigned to the given BidID, Grouped by Submission ID",
    "version" : "V1",
    "queryString" : "SELECT sas.SubmissionID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nsum(COALESCE(stls.FAShakeQuantity,0)) AS ShakeQuantity,\nsum(COALESCE(stle.FAErectQuantity,0)) AS ErectQuantity,\nsum(COALESCE(stle.FAErectPercent,0)) AS ErectPercent,\nsum(COALESCE(stlb.FABoltOutQuantity,0)) AS BoltoutQuantity,\nsum(COALESCE(stlb.FABoltOutPercent,0)) AS BoltoutPercent,\nsum(COALESCE(stli.FAImpQuantity,0)) AS ImpQuantity,\nsum(COALESCE(stli.FAImpPercent,0)) AS ImpPercent,\nsum(COALESCE(stlw.FAWeldQuantity,0)) AS WeldQuantity,\nsum(COALESCE(stlw.FAWeldPercent,0)) AS WeldPercent,\nsum(COALESCE(stlsell.FASellQuantity,0)) AS SellQuantity,\nsum(COALESCE(stld.DemoQuantity,0)) AS DemoQuantity,\nsum(COALESCE(stlm.MiscQuantity,0)) AS MiscQuantity\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n        \nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType IN (61,62,63,64,65,67,68,96)\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\nLEFT JOIN SteelShake stls\n\tON stls.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelErect stle\n\tON stle.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelBoltOut stlb\n\tON stlb.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelImp stli\n\tON stli.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelWeld stlw\n\tON stlw.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelSell stlsell\n\tON stlsell.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\n\n\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.ActivityType IN (61,62,63,64,65,67,68,96)\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.SubmissionID",
    "countQueryString" : "select count(*) from (SELECT sas.SubmissionID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nsum(COALESCE(stls.FAShakeQuantity,0)) AS ShakeQuantity,\nsum(COALESCE(stle.FAErectQuantity,0)) AS ErectQuantity,\nsum(COALESCE(stle.FAErectPercent,0)) AS ErectPercent,\nsum(COALESCE(stlb.FABoltOutQuantity,0)) AS BoltoutQuantity,\nsum(COALESCE(stlb.FABoltOutPercent,0)) AS BoltoutPercent,\nsum(COALESCE(stli.FAImpQuantity,0)) AS ImpQuantity,\nsum(COALESCE(stli.FAImpPercent,0)) AS ImpPercent,\nsum(COALESCE(stlw.FAWeldQuantity,0)) AS WeldQuantity,\nsum(COALESCE(stlw.FAWeldPercent,0)) AS WeldPercent,\nsum(COALESCE(stlsell.FASellQuantity,0)) AS SellQuantity,\nsum(COALESCE(stld.DemoQuantity,0)) AS DemoQuantity,\nsum(COALESCE(stlm.MiscQuantity,0)) AS MiscQuantity\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n        \nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType IN (61,62,63,64,65,67,68,96)\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\nLEFT JOIN SteelShake stls\n\tON stls.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelErect stle\n\tON stle.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelBoltOut stlb\n\tON stlb.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelImp stli\n\tON stli.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelWeld stlw\n\tON stlw.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelSell stlsell\n\tON stlsell.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\n\n\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.ActivityType IN (61,62,63,64,65,67,68,96)\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.SubmissionID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistorySteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ShakeQuantity",
        "fieldName" : "shakeQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ErectQuantity",
        "fieldName" : "erectQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ErectPercent",
        "fieldName" : "erectPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "BoltoutQuantity",
        "fieldName" : "boltoutQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "BoltoutPercent",
        "fieldName" : "boltoutPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ImpQuantity",
        "fieldName" : "impQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ImpPercent",
        "fieldName" : "impPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldQuantity",
        "fieldName" : "weldQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "WeldPercent",
        "fieldName" : "weldPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellQuantity",
        "fieldName" : "sellQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "DemoQuantity",
        "fieldName" : "demoQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "MiscQuantity",
        "fieldName" : "miscQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistorySteelExpanded" : {
    "name" : "GetBidWorkHistorySteelExpanded",
    "description" : "Gets the Bid Work History, with each Field activity having its own row.  Of the given SubID",
    "version" : "V1",
    "queryString" : "SELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\nat.ActivityType AS ActivityTypeName,\nCOALESCE(stls.FAShakeQuantity,0) AS Quantity, \n'1' AS Percent,\nstls.FANotes AS Notes,\nstls.FARework AS Rework\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n        \nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 61\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\nLEFT JOIN SteelShake stls\n\tON stls.ActivityID = sas.ActivityID\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 61\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID,  \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stle.FAErectQuantity,0) AS ErectQuantity,\nCOALESCE(stle.FAErectPercent,0) AS ErectPercent,\nstle.FANotes,\nstle.FARework\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 62\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\n\nLEFT JOIN SteelErect stle\n\tON stle.ActivityID = sas.ActivityID\n\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 62\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlb.FABoltOutQuantity,0) AS BoltoutQuantity,\nCOALESCE(stlb.FABoltOutPercent,0) AS BoltoutPercent, \nstlb.FANotes,\nstlb.FARework\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 63\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\n\nLEFT JOIN SteelBoltOut stlb\n\tON stlb.ActivityID = sas.ActivityID\n \n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 63\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stli.FAImpQuantity,0) AS ImpQuantity,\nCOALESCE(stli.FAImpPercent,0) AS ImpPercent, \nstli.FANotes,\nstli.FARework\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType =64\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\nLEFT JOIN SteelImp stli\n\tON stli.ActivityID = sas.ActivityID\n \n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 64\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID,  \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlw.FAWeldQuantity,0) AS WeldQuantity,\nCOALESCE(stlw.FAWeldPercent,0) AS WeldPercent,\nstlw.FANotes,\nstlw.FARework\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 68\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\nLEFT JOIN SteelWeld stlw\n\tON stlw.ActivityID = sas.ActivityID\n \nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 68\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlsell.FASellQuantity,0) AS SellQuantity, \n'1' AS Percent, \nstlsell.FANotes,\nstlsell.FARework\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 65\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\n    \nLEFT JOIN SteelSell stlsell\n\tON stlsell.ActivityID = sas.ActivityID\n \n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 65\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stld.DemoQuantity,0) AS DemoQuantity, \n'1' AS Percent, \nstld.DemoNotes,\n0 AS Rework\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 67\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\n\nLEFT JOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\n \nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 67\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID,  \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlm.MiscQuantity,0) AS MiscQuantity, \n'1' AS Percent,\nstlm.MiscNotes,\nstlm.MiscRework\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 96\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\n\nLEFT JOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\n    \nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 96\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID",
    "countQueryString" : "select count(*) from (SELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\nat.ActivityType AS ActivityTypeName,\nCOALESCE(stls.FAShakeQuantity,0) AS Quantity, \n'1' AS Percent,\nstls.FANotes AS Notes,\nstls.FARework AS Rework\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n        \nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 61\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\nLEFT JOIN SteelShake stls\n\tON stls.ActivityID = sas.ActivityID\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 61\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID,  \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stle.FAErectQuantity,0) AS ErectQuantity,\nCOALESCE(stle.FAErectPercent,0) AS ErectPercent,\nstle.FANotes,\nstle.FARework\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 62\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\n\nLEFT JOIN SteelErect stle\n\tON stle.ActivityID = sas.ActivityID\n\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 62\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlb.FABoltOutQuantity,0) AS BoltoutQuantity,\nCOALESCE(stlb.FABoltOutPercent,0) AS BoltoutPercent, \nstlb.FANotes,\nstlb.FARework\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 63\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\n\nLEFT JOIN SteelBoltOut stlb\n\tON stlb.ActivityID = sas.ActivityID\n \n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 63\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stli.FAImpQuantity,0) AS ImpQuantity,\nCOALESCE(stli.FAImpPercent,0) AS ImpPercent, \nstli.FANotes,\nstli.FARework\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType =64\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\nLEFT JOIN SteelImp stli\n\tON stli.ActivityID = sas.ActivityID\n \n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 64\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID,  \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlw.FAWeldQuantity,0) AS WeldQuantity,\nCOALESCE(stlw.FAWeldPercent,0) AS WeldPercent,\nstlw.FANotes,\nstlw.FARework\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 68\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\nLEFT JOIN SteelWeld stlw\n\tON stlw.ActivityID = sas.ActivityID\n \nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 68\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlsell.FASellQuantity,0) AS SellQuantity, \n'1' AS Percent, \nstlsell.FANotes,\nstlsell.FARework\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 65\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\n    \nLEFT JOIN SteelSell stlsell\n\tON stlsell.ActivityID = sas.ActivityID\n \n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 65\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stld.DemoQuantity,0) AS DemoQuantity, \n'1' AS Percent, \nstld.DemoNotes,\n0 AS Rework\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 67\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\n\nLEFT JOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\n \nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 67\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID,  \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlm.MiscQuantity,0) AS MiscQuantity, \n'1' AS Percent,\nstlm.MiscNotes,\nstlm.MiscRework\n\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\nLEFT JOIN (SELECT sasr.fk_ActivityID, max(sasr.TimeStamp) AS TimeStamp\n\t\t\tFROM SubmissionActivityStatusREV sasr\n            WHERE sasr.fk_ActivityStatus = 2\n            AND sasr.ActivityType = 96\n            GROUP BY sasr.fk_ActivityID) sasr\n\tON sasr.fk_ActivityID = sas.ActivityID \n\n\nLEFT JOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\n    \nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubID\nAND sas.ActivityType = 96\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SubID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistorySteelExpandedResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      }, {
        "name" : "Percent",
        "fieldName" : "percent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      } ]
    }
  },
  "GetDrawingByTestPackageCivil" : {
    "name" : "GetDrawingByTestPackageCivil",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT DISTINCT ctd.EngDrawingNumber, ctd.DetailDrawingNumber, ctd.FoundationDescription\nFROM CivilTrackerDetails ctd\nWHERE ctd.TestPackageNumber = :TestPackage\nORDER BY ctd.EngDrawingNumber, ctd.DetailDrawingNumber",
    "countQueryString" : "select count(*) from (SELECT DISTINCT ctd.EngDrawingNumber, ctd.DetailDrawingNumber, ctd.FoundationDescription\nFROM CivilTrackerDetails ctd\nWHERE ctd.TestPackageNumber = :TestPackage\nORDER BY ctd.EngDrawingNumber, ctd.DetailDrawingNumber) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "0",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetDrawingByTestPackageCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "DetailDrawingNumber",
        "fieldName" : "detailDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FoundationDescription",
        "fieldName" : "foundationDescription",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetDrawingByTestPackageSteel" : {
    "name" : "GetDrawingByTestPackageSteel",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT DISTINCT std.Area, std.PieceMark, std.Description\nFROM SteelTrackerDetails std\nWHERE std.TestPackageNumber = :TestPackage\nORDER BY std.Area, std.PieceMark",
    "countQueryString" : "select count(*) from (SELECT DISTINCT std.Area, std.PieceMark, std.Description\nFROM SteelTrackerDetails std\nWHERE std.TestPackageNumber = :TestPackage\nORDER BY std.Area, std.PieceMark) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetDrawingByTestPackageSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMark",
        "fieldName" : "pieceMark",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetDrawingsByTestPackagePipe" : {
    "name" : "GetDrawingsByTestPackagePipe",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT DISTINCT ptd.EngDrawingNumber, ptd.SheetNumber, ptd.LineNumber\nFROM PipeTrackerDetails ptd\nWHERE ptd.TestPackageNumber = :TestPackage\nORDER BY ptd.EngDrawingNumber, ptd.SheetNumber",
    "countQueryString" : "select count(*) from (SELECT DISTINCT ptd.EngDrawingNumber, ptd.SheetNumber, ptd.LineNumber\nFROM PipeTrackerDetails ptd\nWHERE ptd.TestPackageNumber = :TestPackage\nORDER BY ptd.EngDrawingNumber, ptd.SheetNumber) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetDrawingsByTestPackagePipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "LineNumber",
        "fieldName" : "lineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetErectionTotal" : {
    "name" : "GetErectionTotal",
    "description" : "Gets the Total footage of a given Erection Activity",
    "version" : "V1",
    "queryString" : "SELECT e.ErectionLengthSpool1 + e.ErectionLengthSpool2 + e.ErectionLengthSpool3 + e.ErectionLengthSpool4 + e.ErectionLengthSpool5 + e.ErectionLengthSpool6 AS Total\nFROM PipeErection e\nWHERE ActivityID = :ActivityId",
    "countQueryString" : "select count(*) from (SELECT e.ErectionLengthSpool1 + e.ErectionLengthSpool2 + e.ErectionLengthSpool3 + e.ErectionLengthSpool4 + e.ErectionLengthSpool5 + e.ErectionLengthSpool6 AS Total\nFROM PipeErection e\nWHERE ActivityID = :ActivityId) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityId",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetErectionTotalResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetNoteCount" : {
    "name" : "GetNoteCount",
    "description" : "Gets the number of notes BY PSAActivityID",
    "version" : "V1",
    "queryString" : "SELECT count(sasn.ID) AS NoteCount\nFROM SASNotes sasn\nWHERE sasn.ActivityID = :FieldActivityID",
    "countQueryString" : "select count(*) from (SELECT count(sasn.ID) AS NoteCount\nFROM SASNotes sasn\nWHERE sasn.ActivityID = :FieldActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetNoteCountResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "NoteCount",
        "fieldName" : "noteCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      } ]
    }
  },
  "GetNotesByFieldActivityID" : {
    "name" : "GetNotesByFieldActivityID",
    "description" : "Gets all notes tied to a specified ID",
    "version" : "V1",
    "queryString" : "SELECT sasn.Notes, sasn.TimeStamp, u.Email\nFROM SASNotes sasn\n\tJOIN PSA.tblUserPSA u\n\t\tON u.ID = sasn.UserID\nWHERE sasn.ActivityID = :FieldActivityID",
    "countQueryString" : "select count(*) from (SELECT sasn.Notes, sasn.TimeStamp, u.Email\nFROM SASNotes sasn\n\tJOIN PSA.tblUserPSA u\n\t\tON u.ID = sasn.UserID\nWHERE sasn.ActivityID = :FieldActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetNotesByFieldActivityIdResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "Email",
        "fieldName" : "email",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetPSRecentActivities" : {
    "name" : "GetPSRecentActivities",
    "description" : "Gets the recent activities modified by a given user in PS review",
    "version" : "V1",
    "queryString" : "SELECT sas.ActivityID, at.ActivityType, ats.Status, sas.TimeStamp\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\ton at.ID = sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats \n\ton ats.ID = sas.fk_ActivityStatus\n\nWHERE sas.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW()\nAND sas.fk_ActivityStatus IN (5,6,13)\nAND sas.fk_LastModifiedBy = :UserID\nORDER BY sas.TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT sas.ActivityID, at.ActivityType, ats.Status, sas.TimeStamp\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\ton at.ID = sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats \n\ton ats.ID = sas.fk_ActivityStatus\n\nWHERE sas.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW()\nAND sas.fk_ActivityStatus IN (5,6,13)\nAND sas.fk_LastModifiedBy = :UserID\nORDER BY sas.TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "UserID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetPsrecentActivitiesResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantitiesTestPackageCivil" : {
    "name" : "GetQuantitiesTestPackageCivil",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT ctd.BidID, ctd.TestPackageNumber, \n\n#### Count ####\ncount(ctd.BidID) AS SellPunchCount,\n\n#### Hours ####\nsum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,\n\n#### Installed Count ####\nsum(COALESCE(ers.InstalledSellPunch,0)) AS SellPunchInstalled,\n\n#### Earned Hours ####\nsum(IF(ers.InstalledSellPunch = 1, \n/*TRUE*/\n(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')),\n/*FALSE*/\n0\n)) AS EarnedSellPunchHours,\n\n#### Loose Hours ####\nsum(\n(COALESCE(ctd.EstimatedHours,0) * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent') / COALESCE(ctd.TakeOffQuantity,0)) \n*\n(COALESCE(ctd.TakeOffQuantity,0) - COALESCE(EarnedFAHours,0))\n) AS LooseHours\n\nFROM CivilTrackerDetails ctd\n\nLEFT JOIN (SELECT min(ctd.UID) AS UID,\n### Hours Earned ###\nIF(sum(COALESCE(IF(sas.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), COALESCE(cfa.FAQuantity,0)),0)) /*Nested IF convertes % to Quantity*/\n\t> ctd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ctd.EstimatedHours*', CivilHoursPercent, ',\n    /*FALSE*/ sum(COALESCE((ctd.EstimatedHours*', CivilHoursPercent, '/ctd.TakeOffQuantity*(COALESCE(IF(sas.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), cfa.FAQuantity),0))), 0))\n    ) AS EarnedFAHours\n\n### SS Joins ###\nFROM SubmissionActivityStatus sas\n\tJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN CivilFA cfa\n\t\tON cfa.ActivityID = sas.ActivityID AND cfa.FARework = 0\n\n\tLEFT JOIN CivilMisc cfm\n\t\tON cfm.ActivityID = sas.ActivityID AND cfm.MiscRework = 0\n \n    LEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours\n\t\t\t\tFROM`CivilTrackerDetails`\n\t\t\t\tGROUP BY BidID) ctd\n\t\tON ctd.BidID = sas.fk_BidIDAssigned\n        \nWHERE fk_ActivityStatus IN (5,12)\nAND sas.ActivityType IN (70,71,97)\nGROUP BY ctd.BidID) er\n\t\tON er.UID = ctd.UID\n\n\n ##### Earned Sell HOURS #####       \nLEFT JOIN (SELECT min(ctd.UID) AS UID, cs.InstalledSellPunch\n\t\t\tFROM CivilTrackerDetails ctd\n\t\t\tLEFT JOIN (SELECT sas.ActivityType, cs.SellTestPackageNumber, 1 AS InstalledSellPunch\n\t\t\t\t\t\tFROM CivilSellPackage cs \n\t\t\t\t\t\tINNER JOIN SubmissionActivityStatus sas\n\t\t\t\t\t\t\tON sas.ActivityID = cs.ActivityID AND sas.fk_ActivityStatus IN (5,12)) cs\n\tON cs.SellTestPackageNumber = ctd.TestPackageNumber AND ctd.ActivityType != \"Demo\"\nGROUP BY ctd.BidID) ers\n\tOn ers.UID = ctd.UID\n\nWHERE ctd.TestPackageNumber = :TestPackage",
    "countQueryString" : "select count(*) from (SELECT ctd.BidID, ctd.TestPackageNumber, \n\n#### Count ####\ncount(ctd.BidID) AS SellPunchCount,\n\n#### Hours ####\nsum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,\n\n#### Installed Count ####\nsum(COALESCE(ers.InstalledSellPunch,0)) AS SellPunchInstalled,\n\n#### Earned Hours ####\nsum(IF(ers.InstalledSellPunch = 1, \n/*TRUE*/\n(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')),\n/*FALSE*/\n0\n)) AS EarnedSellPunchHours,\n\n#### Loose Hours ####\nsum(\n(COALESCE(ctd.EstimatedHours,0) * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent') / COALESCE(ctd.TakeOffQuantity,0)) \n*\n(COALESCE(ctd.TakeOffQuantity,0) - COALESCE(EarnedFAHours,0))\n) AS LooseHours\n\nFROM CivilTrackerDetails ctd\n\nLEFT JOIN (SELECT min(ctd.UID) AS UID,\n### Hours Earned ###\nIF(sum(COALESCE(IF(sas.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), COALESCE(cfa.FAQuantity,0)),0)) /*Nested IF convertes % to Quantity*/\n\t> ctd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ctd.EstimatedHours*', CivilHoursPercent, ',\n    /*FALSE*/ sum(COALESCE((ctd.EstimatedHours*', CivilHoursPercent, '/ctd.TakeOffQuantity*(COALESCE(IF(sas.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), cfa.FAQuantity),0))), 0))\n    ) AS EarnedFAHours\n\n### SS Joins ###\nFROM SubmissionActivityStatus sas\n\tJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN CivilFA cfa\n\t\tON cfa.ActivityID = sas.ActivityID AND cfa.FARework = 0\n\n\tLEFT JOIN CivilMisc cfm\n\t\tON cfm.ActivityID = sas.ActivityID AND cfm.MiscRework = 0\n \n    LEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours\n\t\t\t\tFROM`CivilTrackerDetails`\n\t\t\t\tGROUP BY BidID) ctd\n\t\tON ctd.BidID = sas.fk_BidIDAssigned\n        \nWHERE fk_ActivityStatus IN (5,12)\nAND sas.ActivityType IN (70,71,97)\nGROUP BY ctd.BidID) er\n\t\tON er.UID = ctd.UID\n\n\n ##### Earned Sell HOURS #####       \nLEFT JOIN (SELECT min(ctd.UID) AS UID, cs.InstalledSellPunch\n\t\t\tFROM CivilTrackerDetails ctd\n\t\t\tLEFT JOIN (SELECT sas.ActivityType, cs.SellTestPackageNumber, 1 AS InstalledSellPunch\n\t\t\t\t\t\tFROM CivilSellPackage cs \n\t\t\t\t\t\tINNER JOIN SubmissionActivityStatus sas\n\t\t\t\t\t\t\tON sas.ActivityID = cs.ActivityID AND sas.fk_ActivityStatus IN (5,12)) cs\n\tON cs.SellTestPackageNumber = ctd.TestPackageNumber AND ctd.ActivityType != \"Demo\"\nGROUP BY ctd.BidID) ers\n\tOn ers.UID = ctd.UID\n\nWHERE ctd.TestPackageNumber = :TestPackage) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantitiesTestPackageCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SellPunchCount",
        "fieldName" : "sellPunchCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      }, {
        "name" : "SellPunchHours",
        "fieldName" : "sellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellPunchInstalled",
        "fieldName" : "sellPunchInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "EarnedSellPunchHours",
        "fieldName" : "earnedSellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "LooseHours",
        "fieldName" : "looseHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantitiesTestPackagePipe" : {
    "name" : "GetQuantitiesTestPackagePipe",
    "description" : "Get testing quantities",
    "version" : "V1",
    "queryString" : "SELECT ptd.TestPackageNumber, \n\ncount(ptd.BidID) AS ItemsTotal, \n\nTRUNCATE(sum(ste.ReadyForTestingHours),6) AS ReadyForTestingHours,\nTRUNCATE(sum(ste.HydroHours),6) AS HydroHours,\nTRUNCATE(sum(ste.ClientTurnoverHours),6) AS ClientTurnoverHours,\n\nSUM(ert.ReadyForTestingInstalled) AS ReadyForTestingInstalled, \nSUM(ert.HydroInstalled) AS HydroInstalled, \nSUM(ert.ClientTurnoverInstalled) AS ClientTurnoverInstalled,\n\nTRUNCATE(sum(ert.EarnedReadyForTestingHours),6) AS EarnedReadyForTestingHours, \nTRUNCATE(sum(ert.EarnedHydroHours),6) AS EarnedHydroHours, \nTRUNCATE(sum(ert.EarnedClientTurnoverHours),6) AS EarnedClientTurnoverHours,\n\nTRUNCATE(sum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity *(ptd.TakeOffQuantity \n- (COALESCE(er.InstalledFootage,0) \n  + COALESCE(er.InstalledBoltUps,0)\n  + COALESCE(er.InstalledWelds,0)\n  + COALESCE(er.InstalledCuts,0)\n  + COALESCE(er.InstalledTrim,0)\n  + COALESCE(er.InstalledSupports,0)\n  + COALESCE(er.InstalledMisc,0)\n  + COALESCE(er.InstalledDemo,0))))),6) AS LooseHours\n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT min(ptd.ID) AS ID,\n    \nIF( sum(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0)) \n\t> ptd.TakeOffQuantity, /*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0))),0))\n    ) AS EarnedErectionHours,\n\nIF(sum(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0))), 0))\n    ) AS EarnedBoltUpHours,\n\nIF(sum(COALESCE(pw.WeldPercentCompleted * .01,0) + COALESCE(pmw.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pw.WeldPercentCompleted * .01,0) + COALESCE(pmw.MiscQuantity,0))),0))\n    ) AS EarnedWeldHours,\n\nIF(sum(COALESCE(pcut.WeldPercentCompleted * .01,0) + COALESCE(pmc.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pcut.WeldPercentCompleted * .01,0) + COALESCE(pmc.MiscQuantity,0))),0))\n    ) AS EarnedCutHours,\n    \nIF(sum(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0))),0))\n    ) AS EarnedTrimHours,\n    \nIF(sum(COALESCE((psu.SupportPercentCompleted * .01 * psu.SupportQuantity),0) + COALESCE(pmpsu.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE((psu.SupportPercentCompleted * .01 * psu.SupportQuantity),0) + COALESCE(pmpsu.MiscQuantity,0))),0))\n    ) AS EarnedSupportHours,\n    \nIF(sum(COALESCE(IF(ptd.PipingActivityType = 'MISC' AND ptd.ECT != 'D', pm.MiscQuantity,0),0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*COALESCE(IF(ptd.PipingActivityType = 'MISC' AND ptd.ECT != 'D', pm.MiscQuantity,0),0)),0))\n    ) AS EarnedMiscHours,\n    \nIF(sum(COALESCE(pd.DemoQuantity,0) + COALESCE(pmd.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours,\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours/ptd.TakeOffQuantity*(COALESCE(pd.DemoQuantity,0) + COALESCE(pmd.MiscQuantity,0))),0))\n    ) AS EarnedDemoHours,\n    \n\nsum(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0)) AS InstalledFootage,\nsum(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0)) AS InstalledBoltUps, \nsum(COALESCE(pw.WeldPercentCompleted * .01,0) + COALESCE(pmw.MiscQuantity,0)) AS InstalledWelds,\nsum(COALESCE(pcut.WeldPercentCompleted * .01,0) + COALESCE(pmc.MiscQuantity,0)) AS InstalledCuts,\nsum(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0)) AS InstalledTrim,\nsum(COALESCE((psu.SupportPercentCompleted * .01 * psu.SupportQuantity),0) + COALESCE(pmpsu.MiscQuantity,0)) AS InstalledSupports,\nsum(COALESCE(pm.MiscQuantity,0)) AS InstalledMisc,\nsum(COALESCE(pd.DemoQuantity,0) + COALESCE(pmd.MiscQuantity,0)) AS InstalledDemo\n\nFROM `Job1112`.SubmissionActivityStatus sas\n\t\t\tJOIN PSA.REF_ActivityTypes at\n\t\t\t\tON at.ID = sas.ActivityType\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeErection pe\n\t\t\t\tON pe.ActivityID = sas.ActivityID AND pe.ErectionRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeBoltUp pb\n\t\t\t\tON pb.ActivityID = sas.ActivityID AND pb.BoltUpRework = 0\n\t\t \n\t\t\tLEFT JOIN `Job1112`.PipeWeld pw\n\t\t\t\tON pw.ActivityID = sas.ActivityID AND sas.ActivityType = 22 AND  pw.WeldRework = 0\n\t\t \n\t\t\tLEFT JOIN `Job1112`.PipeWeld pcut\n\t\t\t\tON pcut.ActivityID = sas.ActivityID AND sas.ActivityType = 23 AND pcut.WeldRework = 0\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeTrim pt\n\t\t\t\tON pt.ActivityID = sas.ActivityID AND pt.TrimRework = 0\n\t\t\t\n            LEFT JOIN `Job1112`.PipeSupports psu\n\t\t\t\tON psu.ActivityID = sas.ActivityID AND psu.SupportRework = 0\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeDemo pd\n\t\t\t\tON pd.ActivityID = sas.ActivityID\n\t\t\t\n\t\t\tLEFT JOIN `Job1112`.`PipeTrackerDetails` ptd\n\t\t\t\tON ptd.BidID = sas.fk_BidIDAssigned\n\n\t\t/* #### Begining of Misc activities assigned joins #### */\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pm\n\t\t\t\tON pm.ActivityID = sas.ActivityID AND ptd.ECT != \"D\" AND ptd.PipingActivityType = \"MISC\"  AND pm.MiscRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pme\n\t\t\t\tON pme.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"PE\" AND pme.MiscRework = 0\n\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmb\n\t\t\t\tON pmb.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"BU\" AND pmb.MiscRework = 0\n\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmw\n\t\t\t\tON pmw.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"W\" AND pmw.MiscRework = 0\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmc\n\t\t\t\tON pmc.ActivityID = sas.ActivityID AND ptd.ECT != \"D\" AND ptd.PipingActivityType = \"CUT\" AND pmc.MiscRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmt\n\t\t\t\tON pmt.ActivityID = sas.ActivityID AND ptd.ECT = \"T\" AND ptd.PipingActivityType IN (\"V\",\"Plug\",\"HpLp\",\"Other\",\"Blind\") AND pmt.MiscRework = 0\n\t\t\t   \n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmpsu\n\t\t\t\tON pmpsu.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"S\" AND pmpsu.MiscRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmd\n\t\t\t\tON pmd.ActivityID = sas.ActivityID AND ptd.ECT = \"D\" AND pmd.MiscRework = 0\n        \n\n        \nWHERE fk_ActivityStatus IN (5,12)\nGROUP BY ptd.BidID) er\n\t\tON er.ID = ptd.ID\n\nLEFT JOIN (SELECT min(ptd.ID) AS ID,\nsum(COALESCE(steR.InstalledReadyForTesting, 0)) AS ReadyForTestingInstalled,\nsum(COALESCE(steH.InstalledHydro, 0)) AS HydroInstalled,\nsum(COALESCE(steC.InstalledClientTurnover, 0)) AS ClientTurnoverInstalled,\n\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * steR.InstalledReadyForTesting, 0)) AS EarnedReadyForTestingHours,\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') * steH.InstalledHydro, 0)) AS EarnedHydroHours,\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') * steC.InstalledClientTurnover, 0)) AS EarnedClientTurnoverHours\n\nFROM `Job1112`.`PipeTrackerDetails` ptd\n\n\t\tLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledReadyForTesting\n\t\t\t\t\tFROM `Job1112`.PipeTesting ste\n\t\t\t\t\tJOIN `Job1112`.SubmissionActivityStatus sas\n\t\t\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 41 AND sas.fk_ActivityStatus IN (5,12) AND ste.TestingRework = 0) steR\n\t\t\tON steR.TestingTestPackageNumber = ptd.TestPackageNumber AND steR.ActivityType = 41 AND ptd.ECT != \"D\"\n\t\t\t\n\t\tLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledHydro\n\t\t\t\t\tFROM `Job1112`.PipeTesting ste\n\t\t\t\t\tJOIN `Job1112`.SubmissionActivityStatus sas\n\t\t\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 42 AND sas.fk_ActivityStatus IN (5,12) AND ste.TestingRework = 0) steH\n\t\t\tON steH.TestingTestPackageNumber = ptd.TestPackageNumber AND steH.ActivityType = 42 AND ptd.ECT != \"D\"\n\t\t\t\n\t\tLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledClientTurnover\n\t\t\t\t\tFROM `Job1112`.PipeTesting ste\n\t\t\t\t\tJOIN `Job1112`.SubmissionActivityStatus sas\n\t\t\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 43 AND sas.fk_ActivityStatus IN (5,12) AND ste.TestingRework = 0) steC\n\t\t\tON steC.TestingTestPackageNumber = ptd.TestPackageNumber AND steC.ActivityType = 43 AND ptd.ECT != \"D\"\n\n\t\tGROUP BY ptd.BidID) ert\n\tON ert.ID = ptd.ID\n    \nLEFT JOIN (SELECT ptd.ID,\n\t\t\tCOALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent'),0) AS TestingHours,\n            COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent')),0) AS ReadyForTestingHours,\n            COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent')),0) AS HydroHours,\n            COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent')),0) AS ClientTurnoverHours\n\t\t\tFROM PipeTrackerDetails ptd\n\t\t\tWHERE ptd.ECT != 'D') ste\n\tON ste.ID = ptd.ID\n  \n    \nWHERE ptd.TestPackageNumber = :TestPackage\nGROUP BY ptd.TestPackageNumber",
    "countQueryString" : "select count(*) from (SELECT ptd.TestPackageNumber, \n\ncount(ptd.BidID) AS ItemsTotal, \n\nTRUNCATE(sum(ste.ReadyForTestingHours),6) AS ReadyForTestingHours,\nTRUNCATE(sum(ste.HydroHours),6) AS HydroHours,\nTRUNCATE(sum(ste.ClientTurnoverHours),6) AS ClientTurnoverHours,\n\nSUM(ert.ReadyForTestingInstalled) AS ReadyForTestingInstalled, \nSUM(ert.HydroInstalled) AS HydroInstalled, \nSUM(ert.ClientTurnoverInstalled) AS ClientTurnoverInstalled,\n\nTRUNCATE(sum(ert.EarnedReadyForTestingHours),6) AS EarnedReadyForTestingHours, \nTRUNCATE(sum(ert.EarnedHydroHours),6) AS EarnedHydroHours, \nTRUNCATE(sum(ert.EarnedClientTurnoverHours),6) AS EarnedClientTurnoverHours,\n\nTRUNCATE(sum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity *(ptd.TakeOffQuantity \n- (COALESCE(er.InstalledFootage,0) \n  + COALESCE(er.InstalledBoltUps,0)\n  + COALESCE(er.InstalledWelds,0)\n  + COALESCE(er.InstalledCuts,0)\n  + COALESCE(er.InstalledTrim,0)\n  + COALESCE(er.InstalledSupports,0)\n  + COALESCE(er.InstalledMisc,0)\n  + COALESCE(er.InstalledDemo,0))))),6) AS LooseHours\n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT min(ptd.ID) AS ID,\n    \nIF( sum(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0)) \n\t> ptd.TakeOffQuantity, /*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0))),0))\n    ) AS EarnedErectionHours,\n\nIF(sum(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0))), 0))\n    ) AS EarnedBoltUpHours,\n\nIF(sum(COALESCE(pw.WeldPercentCompleted * .01,0) + COALESCE(pmw.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pw.WeldPercentCompleted * .01,0) + COALESCE(pmw.MiscQuantity,0))),0))\n    ) AS EarnedWeldHours,\n\nIF(sum(COALESCE(pcut.WeldPercentCompleted * .01,0) + COALESCE(pmc.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pcut.WeldPercentCompleted * .01,0) + COALESCE(pmc.MiscQuantity,0))),0))\n    ) AS EarnedCutHours,\n    \nIF(sum(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0))),0))\n    ) AS EarnedTrimHours,\n    \nIF(sum(COALESCE((psu.SupportPercentCompleted * .01 * psu.SupportQuantity),0) + COALESCE(pmpsu.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE((psu.SupportPercentCompleted * .01 * psu.SupportQuantity),0) + COALESCE(pmpsu.MiscQuantity,0))),0))\n    ) AS EarnedSupportHours,\n    \nIF(sum(COALESCE(IF(ptd.PipingActivityType = 'MISC' AND ptd.ECT != 'D', pm.MiscQuantity,0),0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*COALESCE(IF(ptd.PipingActivityType = 'MISC' AND ptd.ECT != 'D', pm.MiscQuantity,0),0)),0))\n    ) AS EarnedMiscHours,\n    \nIF(sum(COALESCE(pd.DemoQuantity,0) + COALESCE(pmd.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours,\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours/ptd.TakeOffQuantity*(COALESCE(pd.DemoQuantity,0) + COALESCE(pmd.MiscQuantity,0))),0))\n    ) AS EarnedDemoHours,\n    \n\nsum(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0)) AS InstalledFootage,\nsum(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0)) AS InstalledBoltUps, \nsum(COALESCE(pw.WeldPercentCompleted * .01,0) + COALESCE(pmw.MiscQuantity,0)) AS InstalledWelds,\nsum(COALESCE(pcut.WeldPercentCompleted * .01,0) + COALESCE(pmc.MiscQuantity,0)) AS InstalledCuts,\nsum(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0)) AS InstalledTrim,\nsum(COALESCE((psu.SupportPercentCompleted * .01 * psu.SupportQuantity),0) + COALESCE(pmpsu.MiscQuantity,0)) AS InstalledSupports,\nsum(COALESCE(pm.MiscQuantity,0)) AS InstalledMisc,\nsum(COALESCE(pd.DemoQuantity,0) + COALESCE(pmd.MiscQuantity,0)) AS InstalledDemo\n\nFROM `Job1112`.SubmissionActivityStatus sas\n\t\t\tJOIN PSA.REF_ActivityTypes at\n\t\t\t\tON at.ID = sas.ActivityType\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeErection pe\n\t\t\t\tON pe.ActivityID = sas.ActivityID AND pe.ErectionRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeBoltUp pb\n\t\t\t\tON pb.ActivityID = sas.ActivityID AND pb.BoltUpRework = 0\n\t\t \n\t\t\tLEFT JOIN `Job1112`.PipeWeld pw\n\t\t\t\tON pw.ActivityID = sas.ActivityID AND sas.ActivityType = 22 AND  pw.WeldRework = 0\n\t\t \n\t\t\tLEFT JOIN `Job1112`.PipeWeld pcut\n\t\t\t\tON pcut.ActivityID = sas.ActivityID AND sas.ActivityType = 23 AND pcut.WeldRework = 0\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeTrim pt\n\t\t\t\tON pt.ActivityID = sas.ActivityID AND pt.TrimRework = 0\n\t\t\t\n            LEFT JOIN `Job1112`.PipeSupports psu\n\t\t\t\tON psu.ActivityID = sas.ActivityID AND psu.SupportRework = 0\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeDemo pd\n\t\t\t\tON pd.ActivityID = sas.ActivityID\n\t\t\t\n\t\t\tLEFT JOIN `Job1112`.`PipeTrackerDetails` ptd\n\t\t\t\tON ptd.BidID = sas.fk_BidIDAssigned\n\n\t\t/* #### Begining of Misc activities assigned joins #### */\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pm\n\t\t\t\tON pm.ActivityID = sas.ActivityID AND ptd.ECT != \"D\" AND ptd.PipingActivityType = \"MISC\"  AND pm.MiscRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pme\n\t\t\t\tON pme.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"PE\" AND pme.MiscRework = 0\n\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmb\n\t\t\t\tON pmb.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"BU\" AND pmb.MiscRework = 0\n\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmw\n\t\t\t\tON pmw.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"W\" AND pmw.MiscRework = 0\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmc\n\t\t\t\tON pmc.ActivityID = sas.ActivityID AND ptd.ECT != \"D\" AND ptd.PipingActivityType = \"CUT\" AND pmc.MiscRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmt\n\t\t\t\tON pmt.ActivityID = sas.ActivityID AND ptd.ECT = \"T\" AND ptd.PipingActivityType IN (\"V\",\"Plug\",\"HpLp\",\"Other\",\"Blind\") AND pmt.MiscRework = 0\n\t\t\t   \n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmpsu\n\t\t\t\tON pmpsu.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"S\" AND pmpsu.MiscRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmd\n\t\t\t\tON pmd.ActivityID = sas.ActivityID AND ptd.ECT = \"D\" AND pmd.MiscRework = 0\n        \n\n        \nWHERE fk_ActivityStatus IN (5,12)\nGROUP BY ptd.BidID) er\n\t\tON er.ID = ptd.ID\n\nLEFT JOIN (SELECT min(ptd.ID) AS ID,\nsum(COALESCE(steR.InstalledReadyForTesting, 0)) AS ReadyForTestingInstalled,\nsum(COALESCE(steH.InstalledHydro, 0)) AS HydroInstalled,\nsum(COALESCE(steC.InstalledClientTurnover, 0)) AS ClientTurnoverInstalled,\n\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * steR.InstalledReadyForTesting, 0)) AS EarnedReadyForTestingHours,\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') * steH.InstalledHydro, 0)) AS EarnedHydroHours,\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') * steC.InstalledClientTurnover, 0)) AS EarnedClientTurnoverHours\n\nFROM `Job1112`.`PipeTrackerDetails` ptd\n\n\t\tLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledReadyForTesting\n\t\t\t\t\tFROM `Job1112`.PipeTesting ste\n\t\t\t\t\tJOIN `Job1112`.SubmissionActivityStatus sas\n\t\t\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 41 AND sas.fk_ActivityStatus IN (5,12) AND ste.TestingRework = 0) steR\n\t\t\tON steR.TestingTestPackageNumber = ptd.TestPackageNumber AND steR.ActivityType = 41 AND ptd.ECT != \"D\"\n\t\t\t\n\t\tLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledHydro\n\t\t\t\t\tFROM `Job1112`.PipeTesting ste\n\t\t\t\t\tJOIN `Job1112`.SubmissionActivityStatus sas\n\t\t\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 42 AND sas.fk_ActivityStatus IN (5,12) AND ste.TestingRework = 0) steH\n\t\t\tON steH.TestingTestPackageNumber = ptd.TestPackageNumber AND steH.ActivityType = 42 AND ptd.ECT != \"D\"\n\t\t\t\n\t\tLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledClientTurnover\n\t\t\t\t\tFROM `Job1112`.PipeTesting ste\n\t\t\t\t\tJOIN `Job1112`.SubmissionActivityStatus sas\n\t\t\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 43 AND sas.fk_ActivityStatus IN (5,12) AND ste.TestingRework = 0) steC\n\t\t\tON steC.TestingTestPackageNumber = ptd.TestPackageNumber AND steC.ActivityType = 43 AND ptd.ECT != \"D\"\n\n\t\tGROUP BY ptd.BidID) ert\n\tON ert.ID = ptd.ID\n    \nLEFT JOIN (SELECT ptd.ID,\n\t\t\tCOALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent'),0) AS TestingHours,\n            COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent')),0) AS ReadyForTestingHours,\n            COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent')),0) AS HydroHours,\n            COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent')),0) AS ClientTurnoverHours\n\t\t\tFROM PipeTrackerDetails ptd\n\t\t\tWHERE ptd.ECT != 'D') ste\n\tON ste.ID = ptd.ID\n  \n    \nWHERE ptd.TestPackageNumber = :TestPackage\nGROUP BY ptd.TestPackageNumber) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantitiesTestPackagePipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ItemsTotal",
        "fieldName" : "itemsTotal",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      }, {
        "name" : "ReadyForTestingHours",
        "fieldName" : "readyForTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HydroHours",
        "fieldName" : "hydroHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ClientTurnoverHours",
        "fieldName" : "clientTurnoverHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ReadyForTestingInstalled",
        "fieldName" : "readyForTestingInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "HydroInstalled",
        "fieldName" : "hydroInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ClientTurnoverInstalled",
        "fieldName" : "clientTurnoverInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "EarnedReadyForTestingHours",
        "fieldName" : "earnedReadyForTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedHydroHours",
        "fieldName" : "earnedHydroHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedClientTurnoverHours",
        "fieldName" : "earnedClientTurnoverHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "LooseHours",
        "fieldName" : "looseHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantitiesTestPackageSteel" : {
    "name" : "GetQuantitiesTestPackageSteel",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "SELECT std.BidID, std.TestPackageNumber,\n\n### Count ####\ncount(std.BidID) AS SellPunchCount,\n\n### Hours ####\nCONVERT(sum(std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')), DECIMAL(16,6)) AS SellPunchHours,\n\n### Installed Count ###\nsum(COALESCE(er.InstalledSell,0)) AS InstalledSell,\n\n### Earned Hours ###\nCONVERT(sum(er.EarnedSellHours), DECIMAL(16,6)) AS EarnedSellPunchHours,\n\n### Loose Hours ###\nCONVERT(sum(\n(\nIF(std.ActivityType = \"E\"\n,/*TRUE*/\n(std.SteelHours * (1-(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')))\n,/*FALSE*/\nstd.SteelHours)\n) \n- COALESCE(er.EarnedFAHours,0)\n), DECIMAL(16,6)) AS LooseHours\n\nFROM (SELECT BidID, TestPackageNumber, ActivityType, \n                                sum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,\n        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n                                FROM SteelTrackerDetails \n                                GROUP BY BidID) std\n        \nLEFT JOIN SubmissionActivityStatus sas\n                ON sas.fk_BidIDAssigned = std.BidID AND sas.ActivityType = 65 AND sas.fk_ActivityStatus IN (5,12)\n        \n### Earned/Installed Columns ###\nLEFT JOIN (SELECT BidID, \n\n### Installed Quantities ###\nsum(COALESCE(stlsell.FASellQuantity,0)) AS InstalledSell,\n\n### Earned Hour Quantities ###\nsum(IF((COALESCE(stlsell.FASellQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelSell stlsell\n                                                ON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 65\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelSell stlsell\n                                                ON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 65\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity) * stlsell.FASellQuantity,0))\n)) AS EarnedSellHours,\n\n(\nsum(IF((COALESCE(stls.FAShakeQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelShake stls\n                                                ON stls.ActivityID = sas.ActivityID AND stls.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 61\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n((SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelShake stls\n                                                ON stls.ActivityID = sas.ActivityID AND stls.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 61\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity) * stls.FAShakeQuantity,0))\n)) \n+\nsum(IF((COALESCE(stle.FAErectQuantity,0) * COALESCE(stle.FAErectPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelErect stle\n                                                ON stle.ActivityID = sas.ActivityID AND stle.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 62\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelErect stle \n                                                ON stle.ActivityID = sas.ActivityID AND stle.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 62\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity) * (stle.FAErectQuantity * stle.FAErectPercent),0))\n)) \n+\nsum(IF((COALESCE(stlb.FABoltOutQuantity,0) * COALESCE(stlb.FABoltOutPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelBoltOut stlb\n                                                ON stlb.ActivityID = sas.ActivityID AND stlb.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 63\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelBoltOut stlb\n                                                ON stlb.ActivityID = sas.ActivityID AND stlb.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 63\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity) * (stlb.FABoltOutQuantity * stlb.FABoltOutPercent),0))\n)) \n+\nsum(IF((COALESCE(stli.FAImpQuantity,0) * COALESCE(stli.FAImpPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelImp stli\n                                                ON stli.ActivityID = sas.ActivityID AND stli.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 64\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelImp stli\n                                                ON stli.ActivityID = sas.ActivityID AND stli.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 64\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity) * (stli.FAImpQuantity * stli.FAImpPercent),0))\n)) \n+\nsum(IF((COALESCE(stlw.FAWeldQuantity,0) * COALESCE(stlw.FAWeldPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelWeld stlw\n                                                ON stlw.ActivityID = sas.ActivityID AND stlw.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 68\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.WeldCount,/*Is New + cumlitive quantity greater then WeldCount*/\n/*TRUE*/ \nGREATEST((COALESCE(std.WeldCount,0) - \n(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelWeld stlw\n                                                ON stlw.ActivityID = sas.ActivityID AND stlw.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 68\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.WeldHours / std.WeldCount),\n/*FALSE*/\n(COALESCE((std.WeldHours / std.WeldCount) * (stlw.FAWeldQuantity * stlw.FAWeldPercent),0))\n)) \n+\nsum(IF((COALESCE(stld.DemoQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(DemoQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelDemo stld\n                                                ON stld.ActivityID = sas.ActivityID \n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 67\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(DemoQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelDemo stld\n                                                ON stld.ActivityID = sas.ActivityID\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 67\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.DemoHours / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.DemoHours / std.TakeOffQuantity) * stld.DemoQuantity ,0))\n)) \n+\nsum(IF((COALESCE(stlm.MiscQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelMisc stlm\n                                                ON stlm.ActivityID = sas.ActivityID AND stlm.MiscRework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 96\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelMisc stlm\n                                                ON stlm.ActivityID = sas.ActivityID AND stlm.MiscRework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 96\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.MiscHours / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.MiscHours / std.TakeOffQuantity) * stlm.MiscQuantity ,0))\n))\n) AS EarnedFAHours\n\n\nFROM SubmissionActivityStatus sas\n        \nJOIN (SELECT BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours, sum(WeldCount) AS WeldCount, \n                                IF(ActivityType = \"D\", sum(SteelHours), 0) AS DemoHours,\n                                IF(ActivityType = \"Misc\", sum(SteelHours), 0) AS MiscHours\n                                FROM SteelTrackerDetails \n                                GROUP BY BidID) std\n                ON std.BidID = sas.fk_BidIDAssigned\n\nLEFT JOIN SteelShake stls\n                ON stls.ActivityID = sas.ActivityID AND stls.FARework = 0\n\nLEFT JOIN SteelErect stle\n                ON stle.ActivityID = sas.ActivityID AND stle.FARework = 0\n\nLEFT JOIN SteelBoltOut stlb\n                ON stlb.ActivityID = sas.ActivityID AND stlb.FARework = 0\n\nLEFT JOIN SteelImp stli\n                ON stli.ActivityID = sas.ActivityID AND stli.FARework = 0\n    \nLEFT JOIN SteelWeld stlw\n                ON stlw.ActivityID = sas.ActivityID AND stlw.FARework = 0\n\nLEFT JOIN SteelSell stlsell\n                ON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n\nLEFT JOIN SteelDemo stld\n                ON stld.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelMisc stlm\n                ON stlm.ActivityID = sas.ActivityID AND stlm.MiscRework = 0\n\nWHERE sas.fk_ActivityStatus IN (5,12)\nAND sas.ActivityType IN (60,61,62,63,64,65,66,67,68,69,96) \nGROUP BY std.BidID\n) er\n                ON er.BidID = std.BidID\n  \nWHERE std.TestPackageNumber = :TestPackage",
    "countQueryString" : "select count(*) from (SELECT std.BidID, std.TestPackageNumber,\n\n### Count ####\ncount(std.BidID) AS SellPunchCount,\n\n### Hours ####\nCONVERT(sum(std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')), DECIMAL(16,6)) AS SellPunchHours,\n\n### Installed Count ###\nsum(COALESCE(er.InstalledSell,0)) AS InstalledSell,\n\n### Earned Hours ###\nCONVERT(sum(er.EarnedSellHours), DECIMAL(16,6)) AS EarnedSellPunchHours,\n\n### Loose Hours ###\nCONVERT(sum(\n(\nIF(std.ActivityType = \"E\"\n,/*TRUE*/\n(std.SteelHours * (1-(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')))\n,/*FALSE*/\nstd.SteelHours)\n) \n- COALESCE(er.EarnedFAHours,0)\n), DECIMAL(16,6)) AS LooseHours\n\nFROM (SELECT BidID, TestPackageNumber, ActivityType, \n                                sum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,\n        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n                                FROM SteelTrackerDetails \n                                GROUP BY BidID) std\n        \nLEFT JOIN SubmissionActivityStatus sas\n                ON sas.fk_BidIDAssigned = std.BidID AND sas.ActivityType = 65 AND sas.fk_ActivityStatus IN (5,12)\n        \n### Earned/Installed Columns ###\nLEFT JOIN (SELECT BidID, \n\n### Installed Quantities ###\nsum(COALESCE(stlsell.FASellQuantity,0)) AS InstalledSell,\n\n### Earned Hour Quantities ###\nsum(IF((COALESCE(stlsell.FASellQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelSell stlsell\n                                                ON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 65\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelSell stlsell\n                                                ON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 65\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity) * stlsell.FASellQuantity,0))\n)) AS EarnedSellHours,\n\n(\nsum(IF((COALESCE(stls.FAShakeQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelShake stls\n                                                ON stls.ActivityID = sas.ActivityID AND stls.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 61\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n((SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelShake stls\n                                                ON stls.ActivityID = sas.ActivityID AND stls.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 61\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity) * stls.FAShakeQuantity,0))\n)) \n+\nsum(IF((COALESCE(stle.FAErectQuantity,0) * COALESCE(stle.FAErectPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelErect stle\n                                                ON stle.ActivityID = sas.ActivityID AND stle.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 62\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelErect stle \n                                                ON stle.ActivityID = sas.ActivityID AND stle.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 62\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity) * (stle.FAErectQuantity * stle.FAErectPercent),0))\n)) \n+\nsum(IF((COALESCE(stlb.FABoltOutQuantity,0) * COALESCE(stlb.FABoltOutPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelBoltOut stlb\n                                                ON stlb.ActivityID = sas.ActivityID AND stlb.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 63\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelBoltOut stlb\n                                                ON stlb.ActivityID = sas.ActivityID AND stlb.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 63\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity) * (stlb.FABoltOutQuantity * stlb.FABoltOutPercent),0))\n)) \n+\nsum(IF((COALESCE(stli.FAImpQuantity,0) * COALESCE(stli.FAImpPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelImp stli\n                                                ON stli.ActivityID = sas.ActivityID AND stli.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 64\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelImp stli\n                                                ON stli.ActivityID = sas.ActivityID AND stli.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 64\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity) * (stli.FAImpQuantity * stli.FAImpPercent),0))\n)) \n+\nsum(IF((COALESCE(stlw.FAWeldQuantity,0) * COALESCE(stlw.FAWeldPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelWeld stlw\n                                                ON stlw.ActivityID = sas.ActivityID AND stlw.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 68\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.WeldCount,/*Is New + cumlitive quantity greater then WeldCount*/\n/*TRUE*/ \nGREATEST((COALESCE(std.WeldCount,0) - \n(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelWeld stlw\n                                                ON stlw.ActivityID = sas.ActivityID AND stlw.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 68\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.WeldHours / std.WeldCount),\n/*FALSE*/\n(COALESCE((std.WeldHours / std.WeldCount) * (stlw.FAWeldQuantity * stlw.FAWeldPercent),0))\n)) \n+\nsum(IF((COALESCE(stld.DemoQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(DemoQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelDemo stld\n                                                ON stld.ActivityID = sas.ActivityID \n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 67\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(DemoQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelDemo stld\n                                                ON stld.ActivityID = sas.ActivityID\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 67\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.DemoHours / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.DemoHours / std.TakeOffQuantity) * stld.DemoQuantity ,0))\n)) \n+\nsum(IF((COALESCE(stlm.MiscQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelMisc stlm\n                                                ON stlm.ActivityID = sas.ActivityID AND stlm.MiscRework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 96\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelMisc stlm\n                                                ON stlm.ActivityID = sas.ActivityID AND stlm.MiscRework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 96\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.MiscHours / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.MiscHours / std.TakeOffQuantity) * stlm.MiscQuantity ,0))\n))\n) AS EarnedFAHours\n\n\nFROM SubmissionActivityStatus sas\n        \nJOIN (SELECT BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours, sum(WeldCount) AS WeldCount, \n                                IF(ActivityType = \"D\", sum(SteelHours), 0) AS DemoHours,\n                                IF(ActivityType = \"Misc\", sum(SteelHours), 0) AS MiscHours\n                                FROM SteelTrackerDetails \n                                GROUP BY BidID) std\n                ON std.BidID = sas.fk_BidIDAssigned\n\nLEFT JOIN SteelShake stls\n                ON stls.ActivityID = sas.ActivityID AND stls.FARework = 0\n\nLEFT JOIN SteelErect stle\n                ON stle.ActivityID = sas.ActivityID AND stle.FARework = 0\n\nLEFT JOIN SteelBoltOut stlb\n                ON stlb.ActivityID = sas.ActivityID AND stlb.FARework = 0\n\nLEFT JOIN SteelImp stli\n                ON stli.ActivityID = sas.ActivityID AND stli.FARework = 0\n    \nLEFT JOIN SteelWeld stlw\n                ON stlw.ActivityID = sas.ActivityID AND stlw.FARework = 0\n\nLEFT JOIN SteelSell stlsell\n                ON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n\nLEFT JOIN SteelDemo stld\n                ON stld.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelMisc stlm\n                ON stlm.ActivityID = sas.ActivityID AND stlm.MiscRework = 0\n\nWHERE sas.fk_ActivityStatus IN (5,12)\nAND sas.ActivityType IN (60,61,62,63,64,65,66,67,68,69,96) \nGROUP BY std.BidID\n) er\n                ON er.BidID = std.BidID\n  \nWHERE std.TestPackageNumber = :TestPackage) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantitiesTestPackageSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SellPunchCount",
        "fieldName" : "sellPunchCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      }, {
        "name" : "SellPunchHours",
        "fieldName" : "sellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "InstalledSell",
        "fieldName" : "installedSell",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "EarnedSellPunchHours",
        "fieldName" : "earnedSellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "LooseHours",
        "fieldName" : "looseHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityBoltUpInstalled" : {
    "name" : "GetQuantityBoltUpInstalled",
    "description" : "Gets the Quantity of units installed BY BidID",
    "version" : "V1",
    "queryString" : "SELECT COALESCE(sum(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0)),0) AS Total\n\nFROM SubmissionActivityStatus sas\n\n\tLEFT JOIN PipeBoltUp pb\n\t\tON pb.ActivityID = sas.ActivityID AND pb.BoltUpRework = 0\n\t\n\tLEFT JOIN PipeMisc pm\n\t\tON pm.ActivityID = sas.ActivityID AND pm.MiscRework = 0\n\n    \n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n        \n                \n\tLEFT JOIN PipeMisc pmb\n\t\t\t\tON pmb.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"BU\" AND pmb.MiscRework = 0\n\n\nWHERE sas.ActivityType IN (21, 91)\nAND sas.fk_ActivityStatus IN (5,12) \nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT COALESCE(sum(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0)),0) AS Total\n\nFROM SubmissionActivityStatus sas\n\n\tLEFT JOIN PipeBoltUp pb\n\t\tON pb.ActivityID = sas.ActivityID AND pb.BoltUpRework = 0\n\t\n\tLEFT JOIN PipeMisc pm\n\t\tON pm.ActivityID = sas.ActivityID AND pm.MiscRework = 0\n\n    \n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n        \n                \n\tLEFT JOIN PipeMisc pmb\n\t\t\t\tON pmb.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"BU\" AND pmb.MiscRework = 0\n\n\nWHERE sas.ActivityType IN (21, 91)\nAND sas.fk_ActivityStatus IN (5,12) \nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityBoltUpInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityCutPrepInstalled" : {
    "name" : "GetQuantityCutPrepInstalled",
    "description" : "Get Cut/Prep installed Quantity BY BidId",
    "version" : "V1",
    "queryString" : "SELECT COALESCE(sum(COALESCE(pcut.WeldPercentCompleted,0) + COALESCE(pmc.MiscQuantity,0)),0) AS Total\n\nFROM SubmissionActivityStatus sas\n\n\tLEFT JOIN PipeWeld pcut\n\t\tON pcut.ActivityID = sas.ActivityID AND sas.ActivityType = 23 AND pcut.WeldRework = 0\n        \n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n\t        \n\tLEFT JOIN PipeMisc pmc\n\t\tON pmc.ActivityID = sas.ActivityID AND ptd.ECT != \"D\" AND ptd.PipingActivityType = \"CUT\" AND pmc.MiscRework = 0\n\n\n\nWHERE sas.ActivityType IN (23, 91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT COALESCE(sum(COALESCE(pcut.WeldPercentCompleted,0) + COALESCE(pmc.MiscQuantity,0)),0) AS Total\n\nFROM SubmissionActivityStatus sas\n\n\tLEFT JOIN PipeWeld pcut\n\t\tON pcut.ActivityID = sas.ActivityID AND sas.ActivityType = 23 AND pcut.WeldRework = 0\n        \n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n\t        \n\tLEFT JOIN PipeMisc pmc\n\t\tON pmc.ActivityID = sas.ActivityID AND ptd.ECT != \"D\" AND ptd.PipingActivityType = \"CUT\" AND pmc.MiscRework = 0\n\n\n\nWHERE sas.ActivityType IN (23, 91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityCutPrepInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityDemoRemoved" : {
    "name" : "GetQuantityDemoRemoved",
    "description" : "...",
    "version" : "V1",
    "queryString" : "SELECT COALESCE(sum(COALESCE(pd.DemoQuantity, 0) + COALESCE(pmd.MiscQuantity,0)),0) AS Total\nFROM SubmissionActivityStatus sas\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n\t\n    LEFT JOIN PipeDemo pd\n\t\tON pd.ActivityID = sas.ActivityID \n        \n\tLEFT JOIN PipeMisc pmd\n\t\t\t\tON pmd.ActivityID = sas.ActivityID AND ptd.ECT = \"D\" AND pmd.MiscRework = 0\n\n\n\nWHERE sas.ActivityType IN (51,52,53,59,91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT COALESCE(sum(COALESCE(pd.DemoQuantity, 0) + COALESCE(pmd.MiscQuantity,0)),0) AS Total\nFROM SubmissionActivityStatus sas\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n\t\n    LEFT JOIN PipeDemo pd\n\t\tON pd.ActivityID = sas.ActivityID \n        \n\tLEFT JOIN PipeMisc pmd\n\t\t\t\tON pmd.ActivityID = sas.ActivityID AND ptd.ECT = \"D\" AND pmd.MiscRework = 0\n\n\n\nWHERE sas.ActivityType IN (51,52,53,59,91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityDemoRemovedResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityLFInstalled" : {
    "name" : "GetQuantityLFInstalled",
    "description" : "Gets the Total footage installed by all PSA activities assigned to a BidID BY BidID",
    "version" : "V1",
    "queryString" : "SELECT COALESCE(sum(\nCOALESCE(pe.ErectionLengthSpool1,0) + \nCOALESCE(pe.ErectionLengthSpool2,0) + \nCOALESCE(pe.ErectionLengthSpool3,0) + \nCOALESCE(pe.ErectionLengthSpool4,0) + \nCOALESCE(pe.ErectionLengthSpool5,0) + \nCOALESCE(pe.ErectionLengthSpool6,0) +\nCOALESCE(pme.MiscQuantity,0)\n),0) AS Total \nFROM SubmissionActivityStatus sas\n\n\tLEFT JOIN PipeErection pe\n\t\t\t\tON pe.ActivityID = sas.ActivityID AND pe.ErectionRework = 0\n\t\t\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n        \n    LEFT JOIN PipeMisc pme\n\t\t\t\tON pme.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"PE\" AND pme.MiscRework = 0\n\nWHERE sas.ActivityType IN (11, 91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID\nGROUP BY BidID",
    "countQueryString" : "select count(*) from (SELECT COALESCE(sum(\nCOALESCE(pe.ErectionLengthSpool1,0) + \nCOALESCE(pe.ErectionLengthSpool2,0) + \nCOALESCE(pe.ErectionLengthSpool3,0) + \nCOALESCE(pe.ErectionLengthSpool4,0) + \nCOALESCE(pe.ErectionLengthSpool5,0) + \nCOALESCE(pe.ErectionLengthSpool6,0) +\nCOALESCE(pme.MiscQuantity,0)\n),0) AS Total \nFROM SubmissionActivityStatus sas\n\n\tLEFT JOIN PipeErection pe\n\t\t\t\tON pe.ActivityID = sas.ActivityID AND pe.ErectionRework = 0\n\t\t\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n        \n    LEFT JOIN PipeMisc pme\n\t\t\t\tON pme.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"PE\" AND pme.MiscRework = 0\n\nWHERE sas.ActivityType IN (11, 91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID\nGROUP BY BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityLfinstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityMiscInstalled" : {
    "name" : "GetQuantityMiscInstalled",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT COALESCE(sum(pm.MiscQuantity),0) AS Total\n\nFROM SubmissionActivityStatus sas\n\nJOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\nJOIN PipeMisc pm\n\tON pm.ActivityID = sas.ActivityID AND ptd.ECT != \"D\" AND ptd.PipingActivityType = \"MISC\"  AND pm.MiscRework = 0\n\nWHERE sas.fk_ActivityStatus IN (5,12) \nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT COALESCE(sum(pm.MiscQuantity),0) AS Total\n\nFROM SubmissionActivityStatus sas\n\nJOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\nJOIN PipeMisc pm\n\tON pm.ActivityID = sas.ActivityID AND ptd.ECT != \"D\" AND ptd.PipingActivityType = \"MISC\"  AND pm.MiscRework = 0\n\nWHERE sas.fk_ActivityStatus IN (5,12) \nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityMiscInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantitySupportsInstalled" : {
    "name" : "GetQuantitySupportsInstalled",
    "description" : "Get the number of Supports installed BY BidID",
    "version" : "V1",
    "queryString" : "SELECT COALESCE(sum(COALESCE((psu.SupportPercentCompleted * psu.SupportQuantity),0) + COALESCE(pmpsu.MiscQuantity,0)),0) AS Total\n\nFROM SubmissionActivityStatus sas\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n\t\n\tLEFT JOIN PipeSupports psu\n\t\tON psu.ActivityID = sas.ActivityID AND psu.SupportRework = 0\n        \n\tLEFT JOIN PipeMisc pmpsu\n\t\tON pmpsu.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"S\" AND pmpsu.MiscRework = 0\n\nWHERE sas.ActivityType IN (32, 91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT COALESCE(sum(COALESCE((psu.SupportPercentCompleted * psu.SupportQuantity),0) + COALESCE(pmpsu.MiscQuantity,0)),0) AS Total\n\nFROM SubmissionActivityStatus sas\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n\t\n\tLEFT JOIN PipeSupports psu\n\t\tON psu.ActivityID = sas.ActivityID AND psu.SupportRework = 0\n        \n\tLEFT JOIN PipeMisc pmpsu\n\t\tON pmpsu.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"S\" AND pmpsu.MiscRework = 0\n\nWHERE sas.ActivityType IN (32, 91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantitySupportsInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityTrimInstalled" : {
    "name" : "GetQuantityTrimInstalled",
    "description" : "Get the sum of all Trim activities installed BY Bid ID",
    "version" : "V1",
    "queryString" : "SELECT COALESCE(SUM(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0)),0) AS Total\n\nFROM SubmissionActivityStatus sas\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n\t\n   LEFT JOIN PipeTrim pt\n\t\tON pt.ActivityID = sas.ActivityID AND pt.TrimRework = 0\n        \n\tLEFT JOIN PipeMisc pmt\n\t\tON pmt.ActivityID = sas.ActivityID AND ptd.ECT = \"T\" AND ptd.PipingActivityType IN (\"V\",\"Plug\",\"HpLp\",\"Other\",\"Blind\") AND pmt.MiscRework = 0\n\n\n\nWHERE sas.ActivityType IN (30,31,33,34,35,39,91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT COALESCE(SUM(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0)),0) AS Total\n\nFROM SubmissionActivityStatus sas\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n\t\n   LEFT JOIN PipeTrim pt\n\t\tON pt.ActivityID = sas.ActivityID AND pt.TrimRework = 0\n        \n\tLEFT JOIN PipeMisc pmt\n\t\tON pmt.ActivityID = sas.ActivityID AND ptd.ECT = \"T\" AND ptd.PipingActivityType IN (\"V\",\"Plug\",\"HpLp\",\"Other\",\"Blind\") AND pmt.MiscRework = 0\n\n\n\nWHERE sas.ActivityType IN (30,31,33,34,35,39,91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityTrimInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityWeldInstalled" : {
    "name" : "GetQuantityWeldInstalled",
    "description" : "Get the number of Welds installed BY BidID",
    "version" : "V1",
    "queryString" : "SELECT COALESCE(sum(COALESCE(pw.WeldPercentCompleted,0) + COALESCE(pmw.MiscQuantity,0)),0) AS Total\n\nFROM SubmissionActivityStatus sas\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n        \n\tLEFT JOIN `Job1112`.PipeWeld pw\n\t\t\t\tON pw.ActivityID = sas.ActivityID AND sas.ActivityType = 22 AND  pw.WeldRework = 0\n\t\n\tLEFT JOIN `Job1112`.PipeMisc pmw\n\t\t\t\tON pmw.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"W\" AND pmw.MiscRework = 0\n        \n\n\nWHERE sas.ActivityType IN (22, 91) \nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT COALESCE(sum(COALESCE(pw.WeldPercentCompleted,0) + COALESCE(pmw.MiscQuantity,0)),0) AS Total\n\nFROM SubmissionActivityStatus sas\n\n    LEFT JOIN (SELECT min(ID) AS ID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours, ECT, PipingActivityType\n\t\t\t\tFROM `PipeTrackerDetails`\n\t\t\t\tGROUP BY BidID) ptd\n\t\tON ptd.BidID = sas.fk_BidIDAssigned\n        \n\tLEFT JOIN `Job1112`.PipeWeld pw\n\t\t\t\tON pw.ActivityID = sas.ActivityID AND sas.ActivityType = 22 AND  pw.WeldRework = 0\n\t\n\tLEFT JOIN `Job1112`.PipeMisc pmw\n\t\t\t\tON pmw.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"W\" AND pmw.MiscRework = 0\n        \n\n\nWHERE sas.ActivityType IN (22, 91) \nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityWeldInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPRCivil" : {
    "name" : "GetReportDPRCivil",
    "description" : "Name",
    "version" : "V2",
    "queryString" : "SELECT \nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType AS ActivityTypeName,  \n\ncfa.FAFoundation AS Foundation, \ncfa.FADescription AS Description, \ncfa.FADrawingNumber AS DrawingNumber, \ncfa.FADetailDrawingNumber AS DetailDrawing,\nIF(sas.ActivityType = 70, CONCAT(cfa.FAPercentComplete*100,\"%\") , CONCAT(cfa.FAQuantity,\" yds\") ) AS QuantityInstalled,\nats.Status AS CurrentStatus,\ncfa.FARework AS Rework,\ncfa.FANotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nJOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID\n        \n\n\nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\n\nUNION\n\n\n\n\nSELECT \nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType AS ActivityTypeName,  \n\n'N/A' AS Foundation, \nCONCAT('Test Package: ',csell.SellTestPackageNumber) AS Description, \n'N/A' AS DrawingNumber, \n'N/A' AS DetailDrawing,\n1 AS QuantityInstalled,\nats.Status AS CurrentStatus,\n'0' AS Rework,\ncsell.SellNotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN CivilSellPackage csell\n\tON csell.ActivityID = sas.ActivityID\n\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day",
    "countQueryString" : "select count(*) from (SELECT \nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType AS ActivityTypeName,  \n\ncfa.FAFoundation AS Foundation, \ncfa.FADescription AS Description, \ncfa.FADrawingNumber AS DrawingNumber, \ncfa.FADetailDrawingNumber AS DetailDrawing,\nIF(sas.ActivityType = 70, CONCAT(cfa.FAPercentComplete*100,\"%\") , CONCAT(cfa.FAQuantity,\" yds\") ) AS QuantityInstalled,\nats.Status AS CurrentStatus,\ncfa.FARework AS Rework,\ncfa.FANotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nJOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID\n        \n\n\nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\n\nUNION\n\n\n\n\nSELECT \nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType AS ActivityTypeName,  \n\n'N/A' AS Foundation, \nCONCAT('Test Package: ',csell.SellTestPackageNumber) AS Description, \n'N/A' AS DrawingNumber, \n'N/A' AS DetailDrawing,\n1 AS QuantityInstalled,\nats.Status AS CurrentStatus,\n'0' AS Rework,\ncsell.SellNotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN CivilSellPackage csell\n\tON csell.ActivityID = sas.ActivityID\n\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ForemanID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "SuperID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "ManagerID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2017-05-01",
      "required" : true
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2017-06-06",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprcivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "FieldActivityId",
        "fieldName" : "fieldActivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Foundation",
        "fieldName" : "foundation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DrawingNumber",
        "fieldName" : "drawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailDrawing",
        "fieldName" : "detailDrawing",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityInstalled",
        "fieldName" : "quantityInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CurrentStatus",
        "fieldName" : "currentStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DateSubmitted",
        "fieldName" : "dateSubmitted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Date",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPREquip" : {
    "name" : "GetReportDPREquip",
    "description" : "name",
    "version" : "V2",
    "queryString" : "SELECT \nsas.ActivityID AS FieldActivityId, at.ActivityType AS ActivityTypeName,  \n\nefa.FATagNumber AS TagNumber, \nefa.FAActivitySelect AS Description,\nCONCAT(efa.FAPercentComplete*100,\"%\") AS QuantityInstalled,\nats.Status AS CurrentStatus,\nefa.FARework AS Rework,\nefa.FANotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID \n        \n\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day",
    "countQueryString" : "select count(*) from (SELECT \nsas.ActivityID AS FieldActivityId, at.ActivityType AS ActivityTypeName,  \n\nefa.FATagNumber AS TagNumber, \nefa.FAActivitySelect AS Description,\nCONCAT(efa.FAPercentComplete*100,\"%\") AS QuantityInstalled,\nats.Status AS CurrentStatus,\nefa.FARework AS Rework,\nefa.FANotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID \n        \n\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ForemanID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "SuperID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "ManagerID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2017-05-01",
      "required" : true
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2017-06-06",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprequipResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "FieldActivityId",
        "fieldName" : "fieldActivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TagNumber",
        "fieldName" : "tagNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityInstalled",
        "fieldName" : "quantityInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CurrentStatus",
        "fieldName" : "currentStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DateSubmitted",
        "fieldName" : "dateSubmitted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Date",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPRPipe" : {
    "name" : "GetReportDPRPipe",
    "description" : "Get the Daily Progress Report of given date range By Foreman",
    "version" : "V1",
    "queryString" : "SELECT \nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType AS ActivityTypeName,  \npe.ErectionDrawingNumber AS DrawingNumber, \npe.ErectionSheetNumber AS SheetNumber, \npe.ErectionSpool1 AS Spool1, \nIF(pe.ErectionSpool3 IS NULL OR pe.ErectionSpool3 = '', pe.ErectionSpool2,  CONCAT(pe.ErectionSpool2, '...')) AS Spool2,\npe.ErectionPipeSize AS Size, \n(pe.ErectionLengthSpool1 + pe.ErectionLengthSpool2 + pe.ErectionLengthSpool3 + pe.ErectionLengthSpool4 + pe.ErectionLengthSpool5 + pe.ErectionLengthSpool6) AS QuantityInstalled,\nats.Status AS CurrentStatus,\npe.ErectionNotes AS Notes,\npe.ErectionRework AS Rework,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    LEFT JOIN PipeErection pe\n\t\tON pe.ActivityID = sas.ActivityID\n        \nWHERE sas.ActivityType = 11\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType, \npb.BoltUpDrawingNumber, \npb.BoltUpSheetNumber, \npb.BoltUpSpool1, \npb.BoltUpSpool2, \npb.BoltUpSize, \npb.BoltUpQuantity, \nats.Status,\npb.BoltUpNotes,\npb.BoltUpRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n\tLEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    LEFT JOIN PipeBoltUp pb\n        ON pb.ActivityID = sas.ActivityID\n    \nWHERE sas.ActivityType = 21\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)      \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType, \npw.WeldDrawingNumber, \npw.WeldSheetNumber, \npw.WeldSpool1, \npw.WeldSpool2, \npw.WeldSize, \nCOALESCE((pw.WeldPercentCompleted * .01),0), \nats.Status,\npw.WeldNotes,\npw.WeldRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n\tLEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    LEFT JOIN PipeWeld pw\n        ON pw.ActivityID = sas.ActivityID\n        \nWHERE sas.ActivityType = 22\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType, \npcut.WeldDrawingNumber, \npcut.WeldSheetNumber, \n'N/A', \n'N/A', \npcut.WeldSize, \n COALESCE((pcut.WeldPercentCompleted * .01),0), \nats.Status,\npcut.WeldNotes,\npcut.WeldRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n\tLEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\\\n    LEFT JOIN PipeWeld pcut\n        ON pcut.ActivityID = sas.ActivityID\n    \nWHERE sas.ActivityType = 23\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)       \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType, \npt.TrimDrawingNumber, \npt.TrimSheetNumber, \n'N/A', \n'N/A', \npt.TrimSize, \npt.TrimQuantity, \nats.Status,\npt.TrimNotes,\npt.TrimRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n\tLEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    LEFT JOIN PipeTrim pt\n\t\tON pt.ActivityID = sas.ActivityID\n        \nWHERE sas.ActivityType IN (30,31,33,34,35,39)\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType, \npsu.SupportDrawingNumber, \npsu.SupportSheetNumber, \n'N/A', \n'N/A', \n'N/A', \nIF(psu.SupportComplete = 1, psu.SupportQuantity, COALESCE((psu.SupportPercentCompleted * .01),0)), \nats.Status,\nCONCAT(psu.SupportType, '-: ', psu.SupportPartNumber, '-: ', psu.SupportNotes),\npsu.SupportRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n\tLEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PipeSupports psu\n\t\tON psu.ActivityID = sas.ActivityID \n        \nWHERE sas.ActivityType = 32\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType, \npd.DemoDrawingNumber, \npd.DemoSheetNumber, \n'N/A', \n'N/A', \npd.DemoSize, \npd.DemoQuantity, \nats.Status,\npd.DemoNotes,\n0,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n\tLEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    LEFT JOIN PipeDemo pd\n\t\tON pd.ActivityID = sas.ActivityID\n        \nWHERE sas.ActivityType IN (51,52,53,59)\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType, \npm.MiscDrawingNumber, \npm.MiscSheetNumber, \n'N/A', \n'N/A', \n'N/A', \npm.MiscQuantity, \nats.Status,\npm.MiscNotes,\npm.MiscRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n\tLEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    LEFT JOIN PipeMisc pm\n\t\tON pm.ActivityID = sas.ActivityID\n        \nWHERE sas.ActivityType = 91\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)  \nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID) \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day",
    "countQueryString" : "select count(*) from (SELECT \nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType AS ActivityTypeName,  \npe.ErectionDrawingNumber AS DrawingNumber, \npe.ErectionSheetNumber AS SheetNumber, \npe.ErectionSpool1 AS Spool1, \nIF(pe.ErectionSpool3 IS NULL OR pe.ErectionSpool3 = '', pe.ErectionSpool2,  CONCAT(pe.ErectionSpool2, '...')) AS Spool2,\npe.ErectionPipeSize AS Size, \n(pe.ErectionLengthSpool1 + pe.ErectionLengthSpool2 + pe.ErectionLengthSpool3 + pe.ErectionLengthSpool4 + pe.ErectionLengthSpool5 + pe.ErectionLengthSpool6) AS QuantityInstalled,\nats.Status AS CurrentStatus,\npe.ErectionNotes AS Notes,\npe.ErectionRework AS Rework,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n    LEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    LEFT JOIN PipeErection pe\n\t\tON pe.ActivityID = sas.ActivityID\n        \nWHERE sas.ActivityType = 11\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType, \npb.BoltUpDrawingNumber, \npb.BoltUpSheetNumber, \npb.BoltUpSpool1, \npb.BoltUpSpool2, \npb.BoltUpSize, \npb.BoltUpQuantity, \nats.Status,\npb.BoltUpNotes,\npb.BoltUpRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n\tLEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    LEFT JOIN PipeBoltUp pb\n        ON pb.ActivityID = sas.ActivityID\n    \nWHERE sas.ActivityType = 21\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)      \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType, \npw.WeldDrawingNumber, \npw.WeldSheetNumber, \npw.WeldSpool1, \npw.WeldSpool2, \npw.WeldSize, \nCOALESCE((pw.WeldPercentCompleted * .01),0), \nats.Status,\npw.WeldNotes,\npw.WeldRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n\tLEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    LEFT JOIN PipeWeld pw\n        ON pw.ActivityID = sas.ActivityID\n        \nWHERE sas.ActivityType = 22\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType, \npcut.WeldDrawingNumber, \npcut.WeldSheetNumber, \n'N/A', \n'N/A', \npcut.WeldSize, \n COALESCE((pcut.WeldPercentCompleted * .01),0), \nats.Status,\npcut.WeldNotes,\npcut.WeldRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n\tLEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\\\n    LEFT JOIN PipeWeld pcut\n        ON pcut.ActivityID = sas.ActivityID\n    \nWHERE sas.ActivityType = 23\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)       \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType, \npt.TrimDrawingNumber, \npt.TrimSheetNumber, \n'N/A', \n'N/A', \npt.TrimSize, \npt.TrimQuantity, \nats.Status,\npt.TrimNotes,\npt.TrimRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n\tLEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    LEFT JOIN PipeTrim pt\n\t\tON pt.ActivityID = sas.ActivityID\n        \nWHERE sas.ActivityType IN (30,31,33,34,35,39)\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType, \npsu.SupportDrawingNumber, \npsu.SupportSheetNumber, \n'N/A', \n'N/A', \n'N/A', \nIF(psu.SupportComplete = 1, psu.SupportQuantity, COALESCE((psu.SupportPercentCompleted * .01),0)), \nats.Status,\nCONCAT(psu.SupportType, '-: ', psu.SupportPartNumber, '-: ', psu.SupportNotes),\npsu.SupportRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n\tLEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\tLEFT JOIN PipeSupports psu\n\t\tON psu.ActivityID = sas.ActivityID \n        \nWHERE sas.ActivityType = 32\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType, \npd.DemoDrawingNumber, \npd.DemoSheetNumber, \n'N/A', \n'N/A', \npd.DemoSize, \npd.DemoQuantity, \nats.Status,\npd.DemoNotes,\n0,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n\tLEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    LEFT JOIN PipeDemo pd\n\t\tON pd.ActivityID = sas.ActivityID\n        \nWHERE sas.ActivityType IN (51,52,53,59)\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID AS FieldActivityId, sas.ActivityType, at.ActivityType, \npm.MiscDrawingNumber, \npm.MiscSheetNumber, \n'N/A', \n'N/A', \n'N/A', \npm.MiscQuantity, \nats.Status,\npm.MiscNotes,\npm.MiscRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\n\nJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN PSA.REF_ActivityStatuses ats\n\t\tON ats.ID = sas.fk_ActivityStatus\n\tLEFT JOIN SubsDetails sd\n\t\tON sd.SubmissionId = sas.SubmissionID\n\tLEFT JOIN PSA.tblCrews tc\n\t\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\n\tLEFT JOIN PSA.tblCrewsRev tcr\n\t\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    LEFT JOIN PipeMisc pm\n\t\tON pm.ActivityID = sas.ActivityID\n        \nWHERE sas.ActivityType = 91\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)  \nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID) \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ForemanID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "SuperID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ManagerID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2017-05-01",
      "required" : false
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2017-06-06",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprpipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "FieldActivityId",
        "fieldName" : "fieldActivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DrawingNumber",
        "fieldName" : "drawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Spool1",
        "fieldName" : "spool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Spool2",
        "fieldName" : "spool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Size",
        "fieldName" : "size",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityInstalled",
        "fieldName" : "quantityInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "CurrentStatus",
        "fieldName" : "currentStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      }, {
        "name" : "DateSubmitted",
        "fieldName" : "dateSubmitted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Date",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPRSteelCondensed" : {
    "name" : "GetReportDPRSteelCondensed",
    "description" : "Get Daily Progress Report (steel)  Input users, and date range",
    "version" : "V1",
    "queryString" : "SELECT Area, PieceNumber, \nsum(ShakeQuantity) AS ShakeQuantity, \nsum(ErectQuantity) AS ErectQuantity, \nsum(BoltoutQuantity) AS BoltoutQuantity, \nsum(ImpQuantity) AS ImpQuantity, \nsum(WeldQuantity) AS WeldQuantity, \nsum(SellQuantity) AS SellQuantity, \nsum(DemoQuantity) AS DemoQuantity, \nsum(MiscQuantity) AS MiscQuantity, \nReceivedTime \nFROM(SELECT  \nstls.FAArea AS Area, stls.FAPieceNumber AS PieceNumber, \nsum(COALESCE(stls.FAShakeQuantity,0)) AS ShakeQuantity,\n0 AS ErectQuantity,\n0 AS BoltoutQuantity,\n0 AS ImpQuantity,\n0 AS WeldQuantity,\n0 AS SellQuantity,\n0 AS DemoQuantity,\n0 AS MiscQuantity,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelShake stls\n\tON stls.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstle.FAArea AS Area, stle.FAPieceNumber AS PieceNumber,\n0,\nTRUNCATE(sum(COALESCE(stle.FAErectQuantity * stle.FAErectPercent,0)),2),\n0,0,0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelErect stle\n\tON stle.ActivityID = sas.ActivityID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlb.FAArea AS Area, stlb.FAPieceNumber AS PieceNumber,\n0,0,\nTRUNCATE(sum(COALESCE(stlb.FABoltoutQuantity * stlb.FABoltoutPercent,0)),2),\n0,0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelBoltOut stlb\n\tON stlb.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstli.FAArea AS Area, stli.FAPieceNumber AS PieceNumber,\n0,0,0,\nTRUNCATE(sum(COALESCE(stli.FAImpQuantity * stli.FAImpPercent,0)),2),\n0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelImp stli\n\tON stli.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlw.FAArea AS Area, stlw.FAPieceNumber AS PieceNumber,\n0,0,0,0,\nTRUNCATE(sum(COALESCE(stlw.FAWeldQuantity * stlw.FAWeldPercent,0)),2),\n0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelWeld stlw\n\tON stlw.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlsell.FAArea AS Area, stlsell.FAPieceNumber AS PieceNumber,\n0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stlsell.FASellQuantity,0)),2),\n0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelSell stlsell\n\tON stlsell.ActivityID = sas.ActivityID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstld.DemoArea AS Area, 0 AS PieceNumber,\n0,0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stld.DemoQuantity,0)),2),\n0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlm.MiscArea AS Area, stlm.MiscPieceNumber AS PieceNumber,\n0,0,0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stlm.MiscQuantity,0)),2),\n\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)\n) t\nGROUP BY t.Area, t.PieceNumber, Date(t.ReceivedTime)",
    "countQueryString" : "select count(*) from (SELECT Area, PieceNumber, \nsum(ShakeQuantity) AS ShakeQuantity, \nsum(ErectQuantity) AS ErectQuantity, \nsum(BoltoutQuantity) AS BoltoutQuantity, \nsum(ImpQuantity) AS ImpQuantity, \nsum(WeldQuantity) AS WeldQuantity, \nsum(SellQuantity) AS SellQuantity, \nsum(DemoQuantity) AS DemoQuantity, \nsum(MiscQuantity) AS MiscQuantity, \nReceivedTime \nFROM(SELECT  \nstls.FAArea AS Area, stls.FAPieceNumber AS PieceNumber, \nsum(COALESCE(stls.FAShakeQuantity,0)) AS ShakeQuantity,\n0 AS ErectQuantity,\n0 AS BoltoutQuantity,\n0 AS ImpQuantity,\n0 AS WeldQuantity,\n0 AS SellQuantity,\n0 AS DemoQuantity,\n0 AS MiscQuantity,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelShake stls\n\tON stls.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstle.FAArea AS Area, stle.FAPieceNumber AS PieceNumber,\n0,\nTRUNCATE(sum(COALESCE(stle.FAErectQuantity * stle.FAErectPercent,0)),2),\n0,0,0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelErect stle\n\tON stle.ActivityID = sas.ActivityID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlb.FAArea AS Area, stlb.FAPieceNumber AS PieceNumber,\n0,0,\nTRUNCATE(sum(COALESCE(stlb.FABoltoutQuantity * stlb.FABoltoutPercent,0)),2),\n0,0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelBoltOut stlb\n\tON stlb.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstli.FAArea AS Area, stli.FAPieceNumber AS PieceNumber,\n0,0,0,\nTRUNCATE(sum(COALESCE(stli.FAImpQuantity * stli.FAImpPercent,0)),2),\n0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelImp stli\n\tON stli.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlw.FAArea AS Area, stlw.FAPieceNumber AS PieceNumber,\n0,0,0,0,\nTRUNCATE(sum(COALESCE(stlw.FAWeldQuantity * stlw.FAWeldPercent,0)),2),\n0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelWeld stlw\n\tON stlw.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlsell.FAArea AS Area, stlsell.FAPieceNumber AS PieceNumber,\n0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stlsell.FASellQuantity,0)),2),\n0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelSell stlsell\n\tON stlsell.ActivityID = sas.ActivityID \n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstld.DemoArea AS Area, 0 AS PieceNumber,\n0,0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stld.DemoQuantity,0)),2),\n0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlm.MiscArea AS Area, stlm.MiscPieceNumber AS PieceNumber,\n0,0,0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stlm.MiscQuantity,0)),2),\n\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY Area, PieceNumber, Date(sd.ReceivedTime)\n) t\nGROUP BY t.Area, t.PieceNumber, Date(t.ReceivedTime)) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "PM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ConstM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "SiteM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "AreaM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "Super",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "GF",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "Foreman",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2017-05-01",
      "required" : false
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2017-06-06",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprsteelCondensedResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceNumber",
        "fieldName" : "pieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ShakeQuantity",
        "fieldName" : "shakeQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ErectQuantity",
        "fieldName" : "erectQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "BoltoutQuantity",
        "fieldName" : "boltoutQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ImpQuantity",
        "fieldName" : "impQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldQuantity",
        "fieldName" : "weldQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellQuantity",
        "fieldName" : "sellQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "DemoQuantity",
        "fieldName" : "demoQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "MiscQuantity",
        "fieldName" : "miscQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPRSteelDetailed" : {
    "name" : "GetReportDPRSteelDetailed",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT  \n(IF(stls.FAArea IS NOT NULL, stls.FAArea,\nIF(stle.FAArea IS NOT NULL, stle.FAArea,\nIF(stlb.FAArea IS NOT NULL, stlb.FAArea,\nIF(stli.FAArea IS NOT NULL, stli.FAArea,\nIF(stlw.FAArea IS NOT NULL, stlw.FAArea,\nIF(stlsell.FAArea IS NOT NULL, stlsell.FAArea,\nIF(stlm.MiscArea IS NOT NULL, stlm.MiscArea,0)\n))))))) AS Area,\n\n(IF(stls.FAPieceNumber IS NOT NULL, stls.FAPieceNumber,\nIF(stle.FAPieceNumber IS NOT NULL, stle.FAPieceNumber,\nIF(stlb.FAPieceNumber IS NOT NULL, stlb.FAPieceNumber,\nIF(stli.FAPieceNumber IS NOT NULL, stli.FAPieceNumber,\nIF(stlw.FAPieceNumber IS NOT NULL, stlw.FAPieceNumber,\nIF(stlsell.FAPieceNumber IS NOT NULL, stlsell.FAPieceNumber,\nIF(stlm.MiscPieceNumber IS NOT NULL, stlm.MiscPieceNumber,0)\n))))))) AS PieceNumber,\n\nCOALESCE(stls.FAShakeQuantity,0) AS ShakeQuantity,\nCOALESCE(stle.FAErectQuantity,0) AS ErectQuantity,\nCONCAT(TRUNCATE(COALESCE(stle.FAErectPercent,0) * 100,0), '%') AS ErectPercent,\nCOALESCE(stlb.FABoltOutQuantity,0) AS BoltoutQuantity,\nCONCAT(TRUNCATE(COALESCE(stlb.FABoltOutPercent,0) * 100,0), '%') AS BoltoutPercent,\nCOALESCE(stli.FAImpQuantity,0) AS ImpQuantity,\nCONCAT(TRUNCATE(COALESCE(stli.FAImpPercent,0) * 100,0), '%') AS ImpPercent,\nCOALESCE(stlw.FAWeldQuantity,0) AS WeldQuantity,\nCONCAT(TRUNCATE(COALESCE(stlw.FAWeldPercent,0) * 100,0), '%') AS WeldPercent,\nCOALESCE(stlsell.FASellQuantity,0) AS SellQuantity,\nCOALESCE(stld.DemoQuantity,0) AS DemoQuantity,\nCOALESCE(stlm.MiscQuantity,0) AS MiscQuantity,\nDATE(sd.ReceivedTime) AS ReceivedTime,\n(ats.Status) AS CurrentStatus\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.REF_ActivityStatuses ats\n    ON ats.ID = sas.fk_ActivityStatus\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nLEFT JOIN SteelShake stls\n\tON stls.ActivityID = sas.ActivityID\nLEFT JOIN SteelErect stle\n\tON stle.ActivityID = sas.ActivityID\nLEFT JOIN SteelBoltOut stlb\n\tON stlb.ActivityID = sas.ActivityID\nLEFT JOIN SteelImp stli\n\tON stli.ActivityID = sas.ActivityID\nLEFT JOIN SteelWeld stlw\n\tON stlw.ActivityID = sas.ActivityID\nLEFT JOIN SteelSell stlsell\n\tON stlsell.ActivityID = sas.ActivityID\nLEFT JOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nLEFT JOIN SteelMisc stlm\n\tON  stlm.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sas.ActivityType IN (61,62,63,64,65,67,68,96)\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\nGROUP BY sas.ActivityID, Date(sd.ReceivedTime)",
    "countQueryString" : "select count(*) from (SELECT  \n(IF(stls.FAArea IS NOT NULL, stls.FAArea,\nIF(stle.FAArea IS NOT NULL, stle.FAArea,\nIF(stlb.FAArea IS NOT NULL, stlb.FAArea,\nIF(stli.FAArea IS NOT NULL, stli.FAArea,\nIF(stlw.FAArea IS NOT NULL, stlw.FAArea,\nIF(stlsell.FAArea IS NOT NULL, stlsell.FAArea,\nIF(stlm.MiscArea IS NOT NULL, stlm.MiscArea,0)\n))))))) AS Area,\n\n(IF(stls.FAPieceNumber IS NOT NULL, stls.FAPieceNumber,\nIF(stle.FAPieceNumber IS NOT NULL, stle.FAPieceNumber,\nIF(stlb.FAPieceNumber IS NOT NULL, stlb.FAPieceNumber,\nIF(stli.FAPieceNumber IS NOT NULL, stli.FAPieceNumber,\nIF(stlw.FAPieceNumber IS NOT NULL, stlw.FAPieceNumber,\nIF(stlsell.FAPieceNumber IS NOT NULL, stlsell.FAPieceNumber,\nIF(stlm.MiscPieceNumber IS NOT NULL, stlm.MiscPieceNumber,0)\n))))))) AS PieceNumber,\n\nCOALESCE(stls.FAShakeQuantity,0) AS ShakeQuantity,\nCOALESCE(stle.FAErectQuantity,0) AS ErectQuantity,\nCONCAT(TRUNCATE(COALESCE(stle.FAErectPercent,0) * 100,0), '%') AS ErectPercent,\nCOALESCE(stlb.FABoltOutQuantity,0) AS BoltoutQuantity,\nCONCAT(TRUNCATE(COALESCE(stlb.FABoltOutPercent,0) * 100,0), '%') AS BoltoutPercent,\nCOALESCE(stli.FAImpQuantity,0) AS ImpQuantity,\nCONCAT(TRUNCATE(COALESCE(stli.FAImpPercent,0) * 100,0), '%') AS ImpPercent,\nCOALESCE(stlw.FAWeldQuantity,0) AS WeldQuantity,\nCONCAT(TRUNCATE(COALESCE(stlw.FAWeldPercent,0) * 100,0), '%') AS WeldPercent,\nCOALESCE(stlsell.FASellQuantity,0) AS SellQuantity,\nCOALESCE(stld.DemoQuantity,0) AS DemoQuantity,\nCOALESCE(stlm.MiscQuantity,0) AS MiscQuantity,\nDATE(sd.ReceivedTime) AS ReceivedTime,\n(ats.Status) AS CurrentStatus\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.REF_ActivityStatuses ats\n    ON ats.ID = sas.fk_ActivityStatus\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nLEFT JOIN SteelShake stls\n\tON stls.ActivityID = sas.ActivityID\nLEFT JOIN SteelErect stle\n\tON stle.ActivityID = sas.ActivityID\nLEFT JOIN SteelBoltOut stlb\n\tON stlb.ActivityID = sas.ActivityID\nLEFT JOIN SteelImp stli\n\tON stli.ActivityID = sas.ActivityID\nLEFT JOIN SteelWeld stlw\n\tON stlw.ActivityID = sas.ActivityID\nLEFT JOIN SteelSell stlsell\n\tON stlsell.ActivityID = sas.ActivityID\nLEFT JOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nLEFT JOIN SteelMisc stlm\n\tON  stlm.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sas.ActivityType IN (61,62,63,64,65,67,68,96)\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\nGROUP BY sas.ActivityID, Date(sd.ReceivedTime)) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "PM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ConstM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "SiteM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "AreaM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "Super",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "GF",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "Foreman",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2017-05-01",
      "required" : false
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2017-06-06",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprsteelDetailedResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceNumber",
        "fieldName" : "pieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ShakeQuantity",
        "fieldName" : "shakeQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ErectQuantity",
        "fieldName" : "erectQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ErectPercent",
        "fieldName" : "erectPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BoltoutQuantity",
        "fieldName" : "boltoutQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "BoltoutPercent",
        "fieldName" : "boltoutPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ImpQuantity",
        "fieldName" : "impQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ImpPercent",
        "fieldName" : "impPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldQuantity",
        "fieldName" : "weldQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "WeldPercent",
        "fieldName" : "weldPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SellQuantity",
        "fieldName" : "sellQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DemoQuantity",
        "fieldName" : "demoQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscQuantity",
        "fieldName" : "miscQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Date",
          "list" : false
        }
      }, {
        "name" : "CurrentStatus",
        "fieldName" : "currentStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDWRByDate" : {
    "name" : "GetReportDWRByDate",
    "description" : "Get Daily Weld Report BY Date Range",
    "version" : "V1",
    "queryString" : "SELECT sas.ActivityID AS FieldActivityID, \npw.WeldSpool1, pw.WeldSpool2, pw.WeldLineNumber, pw.WeldDrawingNumber, pw.WeldSheetNumber, pw.WeldNumber,\npw.WeldStencil, pw.WeldSize, pw.WeldThickness, pw.WeldMaterial, pw.WeldType, pw.WeldLineSpec, pw.WeldProcedure, pw.WeldNotes,\nsd.ReceivedTime\nFROM SubmissionActivityStatus sas\n\nJOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID AND pw.ActivityType = 22\n\nJOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\n    \nWHERE sd.ReceivedTime BETWEEN :BeginDate and :EndDate\n\nORDER BY sd.ReceivedTime",
    "countQueryString" : "select count(*) from (SELECT sas.ActivityID AS FieldActivityID, \npw.WeldSpool1, pw.WeldSpool2, pw.WeldLineNumber, pw.WeldDrawingNumber, pw.WeldSheetNumber, pw.WeldNumber,\npw.WeldStencil, pw.WeldSize, pw.WeldThickness, pw.WeldMaterial, pw.WeldType, pw.WeldLineSpec, pw.WeldProcedure, pw.WeldNotes,\nsd.ReceivedTime\nFROM SubmissionActivityStatus sas\n\nJOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID AND pw.ActivityType = 22\n\nJOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\n    \nWHERE sd.ReceivedTime BETWEEN :BeginDate and :EndDate\n\nORDER BY sd.ReceivedTime) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BeginDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2017-05-01",
      "required" : false
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2017-06-06",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDwrbyDateResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "FieldActivityID",
        "fieldName" : "fieldActivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "WeldSpool1",
        "fieldName" : "weldSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSpool2",
        "fieldName" : "weldSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldLineNumber",
        "fieldName" : "weldLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldDrawingNumber",
        "fieldName" : "weldDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSheetNumber",
        "fieldName" : "weldSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldNumber",
        "fieldName" : "weldNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldStencil",
        "fieldName" : "weldStencil",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSize",
        "fieldName" : "weldSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "WeldThickness",
        "fieldName" : "weldThickness",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldMaterial",
        "fieldName" : "weldMaterial",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldType",
        "fieldName" : "weldType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldLineSpec",
        "fieldName" : "weldLineSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldProcedure",
        "fieldName" : "weldProcedure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldNotes",
        "fieldName" : "weldNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingCivilPunch" : {
    "name" : "GetSettingCivilPunch",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'CivilSellPunchHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'CivilSellPunchHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingCivilPunchResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingCivilWork" : {
    "name" : "GetSettingCivilWork",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'CivilWorkHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'CivilWorkHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingCivilWorkResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeCTOPercent" : {
    "name" : "GetSettingPipeCTOPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'ClientTurnoverPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'ClientTurnoverPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeCtopercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeHydroPercent" : {
    "name" : "GetSettingPipeHydroPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'HydroHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'HydroHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeHydroPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeMechPercent" : {
    "name" : "GetSettingPipeMechPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'MechHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'MechHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeMechPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeRFTPercent" : {
    "name" : "GetSettingPipeRFTPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'CompleteForTestPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'CompleteForTestPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeRftpercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeTestingPercent" : {
    "name" : "GetSettingPipeTestingPercent",
    "description" : "Gets the Percent of Mech hours for testing",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'TestingHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'TestingHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeTestingPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingProductivityIntervals" : {
    "name" : "GetSettingProductivityIntervals",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT \ns1.Value1 AS Interval1, \ns2.Value1 AS Interval2, \ns3.Value1 AS Interval3, \ns4.Value1 AS Interval4\n\nFROM SETTINGS s1\n\nJOIN SETTINGS s2\n\tON s2.Label = 'ProductivityInterval2'\nJOIN SETTINGS s3\n\tON s3.Label = 'ProductivityInterval3'\nJOIN SETTINGS s4\n\tON s4.Label = 'ProductivityInterval4'\n\nWHERE s1.Label = 'ProductivityInterval1'",
    "countQueryString" : "select count(*) from (SELECT \ns1.Value1 AS Interval1, \ns2.Value1 AS Interval2, \ns3.Value1 AS Interval3, \ns4.Value1 AS Interval4\n\nFROM SETTINGS s1\n\nJOIN SETTINGS s2\n\tON s2.Label = 'ProductivityInterval2'\nJOIN SETTINGS s3\n\tON s3.Label = 'ProductivityInterval3'\nJOIN SETTINGS s4\n\tON s4.Label = 'ProductivityInterval4'\n\nWHERE s1.Label = 'ProductivityInterval1') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingProductivityIntervalsResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Interval1",
        "fieldName" : "interval1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Interval2",
        "fieldName" : "interval2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Interval3",
        "fieldName" : "interval3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Interval4",
        "fieldName" : "interval4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelBoltoutPercent" : {
    "name" : "GetSettingSteelBoltoutPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelBoltoutHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelBoltoutHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelBoltoutPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelErectPercent" : {
    "name" : "GetSettingSteelErectPercent",
    "description" : "SteelErectHoursPercent",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelErectHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelErectHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelErectPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelImpPercent" : {
    "name" : "GetSettingSteelImpPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelImpHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelImpHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelImpPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelSellPercent" : {
    "name" : "GetSettingSteelSellPercent",
    "description" : "GetSettingSteelSellPercent",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelSellHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelSellHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelSellPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelShakePercent" : {
    "name" : "GetSettingSteelShakePercent",
    "description" : "SteelShakeHoursPercent",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelShakeHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelShakeHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelShakePercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSuperRecentActivites" : {
    "name" : "GetSuperRecentActivites",
    "description" : "Get recent activites modified by a given user super review page",
    "version" : "V1",
    "queryString" : "SELECT sas.ActivityID, at.ActivityType, ats.Status, sas.TimeStamp\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\ton at.ID = sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats \n\ton ats.ID = sas.fk_ActivityStatus\n\nWHERE sas.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW() \nAND sas.ActivityType <> 0\nAND sas.fk_ActivityStatus <> 10 \nAND sas.fk_ActivityStatus <> 11\nAND (sas.fk_LastModifiedBy = :UserID OR sas.fk_LastModifiedBy = :SelectedSuper)\nORDER BY sas.TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT sas.ActivityID, at.ActivityType, ats.Status, sas.TimeStamp\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\ton at.ID = sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats \n\ton ats.ID = sas.fk_ActivityStatus\n\nWHERE sas.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW() \nAND sas.ActivityType <> 0\nAND sas.fk_ActivityStatus <> 10 \nAND sas.fk_ActivityStatus <> 11\nAND (sas.fk_LastModifiedBy = :UserID OR sas.fk_LastModifiedBy = :SelectedSuper)\nORDER BY sas.TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "UserID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SelectedSuper",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "46",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSuperRecentActivitesResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "UnLockSSActivity" : {
    "name" : "UnLockSSActivity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE SubmissionActivityStatus sas\nSET sas.LockField = null\nWHERE sas.ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UnLockSsactivityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateCivilFA" : {
    "name" : "UpdateCivilFA",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `CivilFA` \nSET \n`FADescription`= :Description, \n`FAFoundation`= :Foundation, \n`FADrawingNumber`= :Drawing,\n`FADetailDrawingNumber`= :DetailDrawing,\n`FAPercentComplete`= :Percent,\n`FAQuantity`= :Quantity,\n`FARework`= :Rework,\n`FANotes`= :Notes \nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Description",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Foundation",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Drawing",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "DetailDrawing",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateCivilFaRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateCivilFAQuantity" : {
    "name" : "UpdateCivilFAQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `CivilFA` \nSET \n`FAPercentComplete`= :Percent,\n`FAQuantity`= :Quantity\nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateCivilFaquantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateCivilMisc" : {
    "name" : "UpdateCivilMisc",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `CivilMisc` \nSET \n`MiscFoundation` = :Foundation,\n`MiscDrawingNumber` = :Drawing,\n`MiscDetailDrawingNumber` = :DetailDrawing,\n`MiscPercentComplete`= :Percent,\n`MiscRework` = :Rework,\n`MiscNotes` = :Notes\nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Foundation",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Drawing",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "DetailDrawing",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateCivilMiscRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateCivilMiscQuantity" : {
    "name" : "UpdateCivilMiscQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `CivilMisc` \nSET \n`MiscPercentComplete`= :Percent\nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateCivilMiscQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateCivilSellPackage" : {
    "name" : "UpdateCivilSellPackage",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `CivilSellPackage` \nSET \n`SellTestPackageNumber`= :TestPackageNumber, \n`SellNotes`= :Notes \nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "TestPackageNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "Update SellPackage Test",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateCivilSellPackageRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateEquipFA" : {
    "name" : "UpdateEquipFA",
    "description" : "name",
    "version" : "V2",
    "queryString" : "UPDATE `EquipFA` \nSET \n`FATagNumber`= :TagNumber, \n`FAActivitySelect`= :Activity, \n`FAQuantity`= :Quantity,\n`FAPercentComplete`= :Percent,\n`FARework`= :Rework,\n`FANotes`= :Notes \nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "TagNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Activity",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateEquipFaRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateEquipFAQuantity" : {
    "name" : "UpdateEquipFAQuantity",
    "description" : "Update Quantity only for Equip FA",
    "version" : "V2",
    "queryString" : "UPDATE `EquipFA` \nSET \n`FAPercentComplete`= :Percent\nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Percent",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".4",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateEquipFaquantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeBoltUp" : {
    "name" : "UpdatePipeBoltUp",
    "description" : "Updates the Job####.SubsBoltUp table with data from inputs",
    "version" : "V1",
    "queryString" : "UPDATE PipeBoltUp \nSET BoltUpSpool1 = :Spool1,\nBoltUpSpool2 = :Spool2,\nBoltUpDrawingNumber = :DrawingNumber,\nBoltUpLineNumber = :LineNumber,\nBoltUpSheetNumber = :SheetNumber,\nBoltUpSize = :Size,\nBoltUpQuantity = :Quantity,\nBoltUpRework = :Rework,\nBoltUpNotes = :Notes\nWHERE ActivityID= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Spool1",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1-A",
      "required" : false
    }, {
      "name" : "Spool2",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1-B",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "dwg1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "line1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "8",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "Test Notes",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeBoltUpRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeBoltupQuantity" : {
    "name" : "UpdatePipeBoltupQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE PipeBoltUp \nSET BoltUpQuantity = :BoltUpQuantity\nWHERE ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "BoltUpQuantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeBoltupQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeCutPrep" : {
    "name" : "UpdatePipeCutPrep",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE PipeWeld\nSET\nWeldDrawingNumber = :DrawingNumber,\nWeldLineNumber = :LineNumber,\nWeldSheetNumber = :SheetNumber,\nWeldSize = :Size,\nWeldThickness = :Thickness,\nWeldRework = :Rework,\nWeldNotes = :Notes\nWHERE ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Thickness",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "note test",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeCutPrepRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeDemo" : {
    "name" : "UpdatePipeDemo",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE PipeDemo\nSET \nDemoDrawingNumber = :DrawingNumber,\nDemoLineNumber = :LineNumber,\nDemoSheetNumber = :SheetNumber,\nDemoQuantity = :Quantity,\nDemoSize = :Size,\nDemoNotes = :Notes\nWHERE ActivityID= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeDemoRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeDemoQuantity" : {
    "name" : "UpdatePipeDemoQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE PipeDemo\nSET \nDemoQuantity = :Quantity\nWHERE ActivityID= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeDemoQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeEWO" : {
    "name" : "UpdatePipeEWO",
    "description" : "Update Job####.SubsEWO from input fields",
    "version" : "V1",
    "queryString" : "UPDATE PipeEWO\nSET \n\nEWONumber = :EWONumber,\nEWOHours = :EWOHours,\nEWODrawingNumber = :DrawingNumber,\nEWOLineNumber = :LineNumber,\nEWOSheetNumber = :SheetNumber,\nEWORework = :Rework,\nEWONotes = :Notes\nWHERE ActivityID= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "EWONumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "EWOHours",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeEwoRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeErection" : {
    "name" : "UpdatePipeErection",
    "description" : "Updates Job####.SubsErection table with data inputs",
    "version" : "V1",
    "queryString" : "UPDATE PipeErection\nSET\nErectionSpool1 = :Spool1,\nErectionLengthSpool1 = :Spool1Length,\nErectionSpool2 = :Spool2,\nErectionLengthSpool2 = :Spool2Length,\nErectionSpool3 = :Spool3,\nErectionLengthSpool3 = :Spool3Length,\nErectionSpool4 = :Spool4,\nErectionLengthSpool4 = :Spool4Length,\nErectionSpool5 = :Spool5,\nErectionLengthSpool5 = :Spool5Length,\nErectionSpool6 = :Spool6,\nErectionLengthSpool6 = :Spool6Length,\nErectionOnCords = :OnCords,\nErectionDrawingNumber = :DrawingNumber,\nErectionLineNumber = :LineNumber,\nErectionSheetNumber = :SheetNumber,\nErectionPipeSize = :Size,\nErectionRework = :Rework,\nErectionNotes = :Notes\nWHERE ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Spool1",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool1Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool2",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool2Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool3",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool3Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool4",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool4Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool5",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool5Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool6",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool6Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "OnCords",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeErectionRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeErectionQuantity" : {
    "name" : "UpdatePipeErectionQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE PipeErection\nSET\nErectionLengthSpool1 = :Spool1Length\nWHERE ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Spool1Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "333",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeErectionQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeMisc" : {
    "name" : "UpdatePipeMisc",
    "description" : "Update Job####.SubsMisc table with data inputs",
    "version" : "V1",
    "queryString" : "UPDATE PipeMisc\nSET\nMiscDrawingNumber = :DrawingNumber,\nMiscLineNumber = :LineNumber,\nMiscSheetNumber = :SheetNumber,\nMiscQuantity = :Quantity,\nMiscRework = :Rework,\nMiscNotes = :Notes\nWHERE ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeMiscRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeMiscQuantity" : {
    "name" : "UpdatePipeMiscQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE PipeMisc\nSET\nMiscQuantity = :Quantity\nWHERE ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeMiscQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeSupports" : {
    "name" : "UpdatePipeSupports",
    "description" : "Update Job####.SubsSupports with Data inputs",
    "version" : "V1",
    "queryString" : "UPDATE PipeSupports\nSET\nSupportPartNumber = :PartNumber,\nSupportQuantity = :Quantity,\nSupportDrawingNumber = :DrawingNumber,\nSupportLineNumber = :LineNumber,\nSupportSheetNumber = :Sheet,\nSupportComplete = :Complete,\nSupportShared = :Shared,\nSupportPercentCompleted = :PercentComplete,\nSupportRework = :Rework,\nSupportNotes = :Notes\nWHERE ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "PartNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Sheet",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Complete",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Shared",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "PercentComplete",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeSupportsRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeSupportsQuantity" : {
    "name" : "UpdatePipeSupportsQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE PipeSupports\nSET\nSupportQuantity = :Quantity\nWHERE ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeSupportsQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeTesting" : {
    "name" : "UpdatePipeTesting",
    "description" : "Update Job####.SubsTesting with input fields",
    "version" : "V1",
    "queryString" : "UPDATE PipeTesting\nSET \nTestingTestPackageNumber = :TestPackageNumber,\nTestingRework = :Rework,\nTestingNotes = :Notes\nWHERE ActivityID= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "TestPackageNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeTestingRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeTrim" : {
    "name" : "UpdatePipeTrim",
    "description" : "Update Job####.SubsTrim with data inputs",
    "version" : "V1",
    "queryString" : "UPDATE PipeTrim\nSET\nTrimSize = :Size,\nTrimQuantity = :PlugQuantity,\nTrimHandleType = :HandleType,\nTrimInstrumentType = :InstType,\nTrimDrawingNumber = :DrawingNumber,\nTrimLineNumber = :LineNumber,\nTrimSheetNumber = :SheetNumber,\nTrimRework = :Rework,\nTrimNotes = :Notes\nWHERE ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1.0",
      "required" : false
    }, {
      "name" : "PlugQuantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "HandleType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "InstType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeTrimRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeTrimQuantity" : {
    "name" : "UpdatePipeTrimQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE PipeTrim\nSET\nTrimQuantity = :Quantity\nWHERE ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeTrimQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeWeld" : {
    "name" : "UpdatePipeWeld",
    "description" : "Update Job####.SubsWeld with data inputs",
    "version" : "V1",
    "queryString" : "UPDATE PipeWeld\nSET\nWeldSpool1 = :Spool1,\nWeldSpool2 = :Spool2,\nWeldDrawingNumber = :DrawingNumber,\nWeldLineNumber = :LineNumber,\nWeldSheetNumber = :SheetNumber,\nWeldLineSpec = :LineSpec,\nWeldNumber = :WeldNumber,\nWeldStencil = :Stencil,\nWeldSize = :Size,\nWeldThickness = :Thickness,\nWeldType = :WeldType,\nWeldPosition = :WeldPosition,\nWeldMaterial = :Material,\nWeldProcedure = :Procedure,\nWeldComplete = :Complete,\nWeldShared = :Shared,\nWeldPercentCompleted = :PercentComplete,\nWeldRework = :Rework,\nWeldNotes = :Notes\nWHERE ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Spool1",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool2",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineSpec",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "WeldNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Stencil",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Thickness",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "WeldType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "WeldPosition",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Material",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Procedure",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Complete",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Shared",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "PercentComplete",
      "type" : "big_integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeWeldRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeWeldQuantity" : {
    "name" : "UpdatePipeWeldQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE PipeWeld\nSET\nWeldPercentCompleted = :PercentComplete\nWHERE ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "PercentComplete",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".4",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "7",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeWeldQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSS" : {
    "name" : "UpdateSS",
    "description" : "Update Job####.SumbissionStatus\nModifiedBY, ReviewedBY, and ApprovedBY",
    "version" : "V1",
    "queryString" : "UPDATE SubmissionActivityStatus sas\nSET \nsas.fk_ActivityStatus = :ActivityStatus,\nsas.fk_LastModifiedBy = :UserID,\nsas.fk_BidIDAssigned = IF(:BidID = 0, sas.fk_BidIDAssigned, :BidID)\nWHERE sas.ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "ActivityStatus",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "UserID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSsRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingCivilPunch" : {
    "name" : "UpdateSettingCivilPunch",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='CivilSellPunchHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".05",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingCivilPunchRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingCivilWork" : {
    "name" : "UpdateSettingCivilWork",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='CivilWorkHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".95",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingCivilWorkRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeCTOPercent" : {
    "name" : "UpdateSettingPipeCTOPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='ClientTurnoverPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".35",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeCtopercentRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeHydroPercent" : {
    "name" : "UpdateSettingPipeHydroPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='HydroHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".3",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeHydroPercentRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeMechPercent" : {
    "name" : "UpdateSettingPipeMechPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='MechHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".9",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeMechPercentRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeRFTPercent" : {
    "name" : "UpdateSettingPipeRFTPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='CompleteForTestPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".35",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeRftpercentRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeTestingPercent" : {
    "name" : "UpdateSettingPipeTestingPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='TestingHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeTestingPercentRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelBoltout" : {
    "name" : "UpdateSettingSteelBoltout",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelBoltoutHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".15",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelBoltoutRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelErect" : {
    "name" : "UpdateSettingSteelErect",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelErectHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".35",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelErectRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelImp" : {
    "name" : "UpdateSettingSteelImp",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelImpHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".35",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelImpRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelSell" : {
    "name" : "UpdateSettingSteelSell",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelSellHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelSellRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelShake" : {
    "name" : "UpdateSettingSteelShake",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelShakeHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".05",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelShakeRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelBoltout" : {
    "name" : "UpdateSteelBoltout",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelBoltOut` \nSET \n`FAArea`= :Area, \n`FAPieceNumber`= :Piece, \n`FABoltOutQuantity`= :Quantity,\n`FABoltOutPercent`= :Percent,\n`FARework`= :Rework, \n`FANotes`= :Notes \nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "CWP-063-S-002",
      "required" : false
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "19BP2",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelBoltoutRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelBoltoutQuantity" : {
    "name" : "UpdateSteelBoltoutQuantity",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelBoltOut` \nSET \n \n`FABoltOutQuantity`= :Quantity,\n`FABoltOutPercent`= :Percent\nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelBoltoutQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelDemo" : {
    "name" : "UpdateSteelDemo",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelDemo` \nSET \n`DemoArea`= :Area, \n`DemoSteelType`= :SteelType, \n`DemoSize`= :Size,\n`DemoQuantity`= :Quantity,\n`DemoNotes`= :Notes\nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "CWP-059-S-001A",
      "required" : false
    }, {
      "name" : "SteelType",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "Size",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "12\"",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "19",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "Query update Test",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelDemoRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelDemoQuantity" : {
    "name" : "UpdateSteelDemoQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelDemo` \nSET \n\n`DemoQuantity`= :Quantity\nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "25",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelDemoQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelErect" : {
    "name" : "UpdateSteelErect",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelErect` \nSET \n`FAArea`= :Area, \n`FAPieceNumber`= :Piece, \n`FAErectQuantity`= :Quantity,\n`FAErectPercent`= :Percent,\n`FARework`= :Rework, \n`FANotes`= :Notes \nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "CWP-063-S-002",
      "required" : false
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "19BP2",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelErectRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelErectQuantity" : {
    "name" : "UpdateSteelErectQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelErect` \nSET \n\n`FAErectQuantity`= :Quantity,\n`FAErectPercent`= :Percent\n\nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelErectQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelImp" : {
    "name" : "UpdateSteelImp",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelImp` \nSET \n`FAArea`= :Area, \n`FAPieceNumber`= :Piece, \n`FAImpQuantity`= :Quantity,\n`FAImpPercent`= :Percent,\n`FARework`= :Rework, \n`FANotes`= :Notes \nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "CWP-063-S-002",
      "required" : false
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "29CP1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelImpRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelImpQuantity" : {
    "name" : "UpdateSteelImpQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelImp` \nSET \n\n`FAImpQuantity`= :Quantity,\n`FAImpPercent`= :Percent\nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelImpQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelMisc" : {
    "name" : "UpdateSteelMisc",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelMisc` \nSET \n`MiscArea`= :Area, \n`MiscPieceNumber`= :Piece, \n`MiscQuantity`= :Quantity, \n`MiscRework`= :Rework, \n`MiscNotes`= :Notes \nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "CWP-059-S-001A",
      "required" : false
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "100BP1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelMiscRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelMiscQuantity" : {
    "name" : "UpdateSteelMiscQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelMisc` \nSET \n\n`MiscQuantity`= :Quantity\nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "float",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelMiscQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelSell" : {
    "name" : "UpdateSteelSell",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelSell` \nSET \n`FAArea`= :Area, \n`FAPieceNumber`= :Piece, \n`FASellQuantity`= :Quantity,\n`FARework`= :Rework, \n`FANotes`= :Notes \nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "CWP-059-S-001A",
      "required" : false
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "10BP1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelSellRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelSellPackage" : {
    "name" : "UpdateSteelSellPackage",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelSellPackage` \nSET \n`SellTestPackageNumber`= :TestPackage,\n`SellNotes`= :Notes \nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelSellPackageRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelSellQuantity" : {
    "name" : "UpdateSteelSellQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelSell` \nSET \n\n`FASellQuantity`= :Quantity\nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "float",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelSellQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelShake" : {
    "name" : "UpdateSteelShake",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelShake` \nSET \n`FAArea`= :Area, \n`FAPieceNumber`= :Piece, \n`FAShakeQuantity`= :Quantity, \n`FARework`= :Rework, \n`FANotes`= :Notes \nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "CWP-063-S-002",
      "required" : false
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "50BRP4R",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "Query Test2",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelShakeRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelShakeQuantity" : {
    "name" : "UpdateSteelShakeQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelShake` \nSET \n\n`FAShakeQuantity`= :Quantity\n\nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelShakeQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelWeld" : {
    "name" : "UpdateSteelWeld",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelWeld` \nSET \n`FAArea`= :Area, \n`FAPieceNumber`= :Piece, \n`FAWeldQuantity`= :Quantity,\n`FAWeldPercent`= :Percent,\n`FARework`= :Rework, \n`FANotes`= :Notes \nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Area",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "CWP-063-S-002",
      "required" : false
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "63A2",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "2",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Rework",
      "type" : "character",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "0",
      "required" : false
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelWeldRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelWeldQuantity" : {
    "name" : "UpdateSteelWeldQuantity",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelWeld` \nSET \n\n`FAWeldQuantity`= :Quantity,\n`FAWeldPercent`= :Percent\nWHERE `ActivityID`= :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelWeldQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSubDetails" : {
    "name" : "UpdateSubDetails",
    "description" : "Updates Job####.SubsDetails with Data inputs",
    "version" : "V1",
    "queryString" : "UPDATE SubsDetails\nSET\nTemperature = :Temp,\nPrecipitation = :Precipitation,\nWind = :Wind\nWHERE SubmissionID = :SubmissionID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Temp",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "Good",
      "required" : false
    }, {
      "name" : "Precipitation",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "Clear",
      "required" : false
    }, {
      "name" : "Wind",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "Calm",
      "required" : false
    }, {
      "name" : "SubmissionID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "379",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSubDetailsRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  }
}