{
  "CreateSASNote" : {
    "name" : "CreateSASNote",
    "description" : "Creates a Submission Note",
    "version" : "V1",
    "queryString" : "INSERT INTO SASNotes (`ActivityID`, `UserID` ,`Notes`) \nVALUES (:ActivityID, :CreatedBy ,:Note)",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "INSERT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "648",
      "required" : true
    }, {
      "name" : "CreatedBy",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Note",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "TestNote",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.CreateSasnoteRequest",
      "method" : "POST"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "GetActivitiesPendingApproval" : {
    "name" : "GetActivitiesPendingApproval",
    "description" : "Get all activities pending PS Approval",
    "version" : "V1",
    "queryString" : "SELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \nnull AS BidID, pe.ErectionSpool1 AS Spool1,COALESCE(pe.ErectionSpool2, 'N/A') AS Spool2, \npe.ErectionLineNumber AS Line1, pe.ErectionDrawingNumber AS Drawing1, pe.ErectionSheetNumber AS Sheet1, \npe.ErectionLineNumber AS Line2, pe.ErectionDrawingNumber AS Drawing2, pe.ErectionSheetNumber AS Sheet2, \npe.ErectionPipeSize AS Size, pe.ErectionNotes AS Notes,\n(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0)) AS Quantity, \n'N/A' AS Area, 1.00 AS PercentClaim, pe.ErectionRework AS Rework\nFROM SubmissionActivityStatus sas\n\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeErection pe\n\tON pe.ActivityID = sas.ActivityID\n\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n \n \nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \npc.ConnectionBidID AS BidID, pc.ConnectionSpool1, pc.ConnectionSpool2, \npc.ConnectionLineNumber AS Line1, pc.ConnectionDrawingNumber AS DWG1, pc.ConnectionSheetNumber AS Sheet1,\nCOALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,\npc.ConnectionSize , pc.ConnectionNotes, pc.ConnectionQuantity AS Quantity\n, 'N/A' AS Area, 1.00 AS PercentClaim, pc.ConnectionRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeConnection pc\n\tON pc.ActivityID = sas.ActivityID AND pc.ActivityType = 21\nLEFT JOIN REF_SpoolList sl\n\tON sl.SpoolNumber = pc.ConnectionSpool2\n\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n \n \nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \npc.ConnectionBidID AS BidID, 'N/A' AS Spool1, 'N/A' AS Spool2, \nptd.LineNumber AS Line1, ptd.EngDrawingNumber AS DWG1, ptd.SheetNumber AS Sheet1,\n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2,\npc.ConnectionSize , pc.ConnectionNotes, pc.ConnectionQuantity AS Quantity, \n'N/A' AS Area, 1.00 AS PercentClaim, pc.ConnectionRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeConnection pc\n\tON pc.ActivityID = sas.ActivityID AND pc.ActivityType != 21\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = pc.ConnectionBidID\n\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \nnull AS BidID, pw.WeldSpool1, pw.WeldSpool2, \npw.WeldLineNumber, pw.WeldDrawingNumber, pw.WeldSheetNumber, \nCOALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,\npw.WeldSize , pw.WeldNotes, COALESCE(pw.WeldPercentCompleted,0) AS Quantity\n, 'N/A' AS Area, 1.00 AS PercentClaim, pw.WeldRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus \nJOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID\nLEFT JOIN REF_SpoolList sl\n\tON sl.SpoolNumber = pw.WeldSpool2\n    \nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \npfa.FABidID AS BidID, 'N/A' AS Spool1, 'N/A' AS Spool2, \nptd.LineNumber, ptd.EngDrawingNumber, ptd.SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2,\n'N/A' , pfa.FANotes, pfa.FAQuantity AS Quantity\n, 'N/A' AS Area, FAPercentCompleted AS PercentClaim, pfa.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus      \nJOIN PipeFA pfa\n\tON pfa.ActivityID = sas.ActivityID\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = pfa.FABidID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \nnull AS BidID, pte.TestingTestPackageNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS Line1, 'N/A' AS DrawingNumber, pte.TestingRework AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2,\n'N/A' AS Size , pte.TestingNotes, 1 AS Quantity, \n'N/A' AS Area, 1.00 AS PercentClaim, pte.TestingRework AS Rework\n            \nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeTesting pte\n\tON pte.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \nnull AS BidID, 'N/A' AS Spool1, 'N/A' AS Spool2, \npm.MiscLineNumber, pm.MiscDrawingNumber, pm.MiscSheetNumber, \npm.MiscLineNumber AS Line2, pm.MiscDrawingNumber AS DWG2, pm.MiscSheetNumber AS Sheet2,\n'N/A' AS MiscSize , pm.MiscNotes, pm.MiscQuantity AS Quantity,\n'N/A' AS Area, 1.00 AS PercentClaim, pm.MiscRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\t\nJOIN PipeMisc pm\n\tON pm.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nnull AS BidID, stlfa.FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlfa.FANotes, stlfa.FAQuantity AS Quantity, stlfa.FASortGroup1, stlfa.FAPercentCompleted AS PercentClaim, stlfa.FARework AS Rework\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstld.DemoBidID AS BidID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstld.DemoNotes, 1 AS Quantity, std.Area, DemoPercentCompleted AS PercentClaim, 0 AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nJOIN SteelTrackerDetails std\n\tON std.BidID = stld.DemoBidID\n\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nnull AS BidID, stlsp.SellTestPackageNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlsp.SellNotes, 1 AS Quantity, 'N/A', 1.00 AS PercentClaim, 0 AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelSellPackage stlsp\n\tON stlsp.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstlm.MiscBidID AS BidID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlm.MiscNotes, 1 AS Quantity, 'N/A', MiscPercentCompleted AS PercentClaim, stlm.MiscRework AS Rework\n \nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, \ncfa.FABidID AS BidID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \ncfa.FANotes, IF(cfa.ActivityType = 70, (cfa.FAPercentCompleted * ctd.TakeOffQuantity), cfa.FAQuantity) AS Quantity, 'N/A' AS Area, cfa.FAPercentCompleted AS PercentClaim, cfa.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID\nJOIN CivilTrackerDetails ctd\n\tON ctd.BidID =  cfa.FABidID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, \nnull AS BidID, csp.SellTestPackageNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \ncsp.SellNotes, 1 AS Quantity, 'N/A' AS Area, 1.00 PercentClaim, 0 AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN CivilSellPackage csp\n\tON csp.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'EQUIP' AS Craft,\nefa.FABidID AS BidID, 'N/A' AS Spool1, etd.ComponentNumber AS Spool2, \netd.Description AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nefa.FANotes, efa.FAQuantity AS Quantity, 'N/A' AS Area, efa.FAPercentCompleted AS PercentClaim, efa.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID\nLEFT JOIN EquipTrackerDetails etd\n\tON etd.BidID = efa.FABidID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)",
    "countQueryString" : "select count(*) from (SELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \nnull AS BidID, pe.ErectionSpool1 AS Spool1,COALESCE(pe.ErectionSpool2, 'N/A') AS Spool2, \npe.ErectionLineNumber AS Line1, pe.ErectionDrawingNumber AS Drawing1, pe.ErectionSheetNumber AS Sheet1, \npe.ErectionLineNumber AS Line2, pe.ErectionDrawingNumber AS Drawing2, pe.ErectionSheetNumber AS Sheet2, \npe.ErectionPipeSize AS Size, pe.ErectionNotes AS Notes,\n(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0)) AS Quantity, \n'N/A' AS Area, 1.00 AS PercentClaim, pe.ErectionRework AS Rework\nFROM SubmissionActivityStatus sas\n\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeErection pe\n\tON pe.ActivityID = sas.ActivityID\n\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n \n \nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \npc.ConnectionBidID AS BidID, pc.ConnectionSpool1, pc.ConnectionSpool2, \npc.ConnectionLineNumber AS Line1, pc.ConnectionDrawingNumber AS DWG1, pc.ConnectionSheetNumber AS Sheet1,\nCOALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,\npc.ConnectionSize , pc.ConnectionNotes, pc.ConnectionQuantity AS Quantity\n, 'N/A' AS Area, 1.00 AS PercentClaim, pc.ConnectionRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeConnection pc\n\tON pc.ActivityID = sas.ActivityID AND pc.ActivityType = 21\nLEFT JOIN REF_SpoolList sl\n\tON sl.SpoolNumber = pc.ConnectionSpool2\n\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n \n \nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \npc.ConnectionBidID AS BidID, 'N/A' AS Spool1, 'N/A' AS Spool2, \nptd.LineNumber AS Line1, ptd.EngDrawingNumber AS DWG1, ptd.SheetNumber AS Sheet1,\n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2,\npc.ConnectionSize , pc.ConnectionNotes, pc.ConnectionQuantity AS Quantity, \n'N/A' AS Area, 1.00 AS PercentClaim, pc.ConnectionRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeConnection pc\n\tON pc.ActivityID = sas.ActivityID AND pc.ActivityType != 21\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = pc.ConnectionBidID\n\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \nnull AS BidID, pw.WeldSpool1, pw.WeldSpool2, \npw.WeldLineNumber, pw.WeldDrawingNumber, pw.WeldSheetNumber, \nCOALESCE(sl.LineNumber,'N/A') AS Line2, COALESCE(sl.DrawingNumber,'N/A') AS DWG2, COALESCE(sl.Sheetnumber,'N/A') AS Sheet2,\npw.WeldSize , pw.WeldNotes, COALESCE(pw.WeldPercentCompleted,0) AS Quantity\n, 'N/A' AS Area, 1.00 AS PercentClaim, pw.WeldRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus \nJOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID\nLEFT JOIN REF_SpoolList sl\n\tON sl.SpoolNumber = pw.WeldSpool2\n    \nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \npfa.FABidID AS BidID, 'N/A' AS Spool1, 'N/A' AS Spool2, \nptd.LineNumber, ptd.EngDrawingNumber, ptd.SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2,\n'N/A' , pfa.FANotes, pfa.FAQuantity AS Quantity\n, 'N/A' AS Area, FAPercentCompleted AS PercentClaim, pfa.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus      \nJOIN PipeFA pfa\n\tON pfa.ActivityID = sas.ActivityID\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = pfa.FABidID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \nnull AS BidID, pte.TestingTestPackageNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS Line1, 'N/A' AS DrawingNumber, pte.TestingRework AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2,\n'N/A' AS Size , pte.TestingNotes, 1 AS Quantity, \n'N/A' AS Area, 1.00 AS PercentClaim, pte.TestingRework AS Rework\n            \nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PipeTesting pte\n\tON pte.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'PIPE' AS Craft, \nnull AS BidID, 'N/A' AS Spool1, 'N/A' AS Spool2, \npm.MiscLineNumber, pm.MiscDrawingNumber, pm.MiscSheetNumber, \npm.MiscLineNumber AS Line2, pm.MiscDrawingNumber AS DWG2, pm.MiscSheetNumber AS Sheet2,\n'N/A' AS MiscSize , pm.MiscNotes, pm.MiscQuantity AS Quantity,\n'N/A' AS Area, 1.00 AS PercentClaim, pm.MiscRework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\t\nJOIN PipeMisc pm\n\tON pm.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nnull AS BidID, stlfa.FAPieceNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlfa.FANotes, stlfa.FAQuantity AS Quantity, stlfa.FASortGroup1, stlfa.FAPercentCompleted AS PercentClaim, stlfa.FARework AS Rework\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstld.DemoBidID AS BidID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstld.DemoNotes, 1 AS Quantity, std.Area, DemoPercentCompleted AS PercentClaim, 0 AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nJOIN SteelTrackerDetails std\n\tON std.BidID = stld.DemoBidID\n\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nnull AS BidID, stlsp.SellTestPackageNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlsp.SellNotes, 1 AS Quantity, 'N/A', 1.00 AS PercentClaim, 0 AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelSellPackage stlsp\n\tON stlsp.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'STEEL' AS Craft, \nstlm.MiscBidID AS BidID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nstlm.MiscNotes, 1 AS Quantity, 'N/A', MiscPercentCompleted AS PercentClaim, stlm.MiscRework AS Rework\n \nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, \ncfa.FABidID AS BidID, 'N/A' AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \ncfa.FANotes, IF(cfa.ActivityType = 70, (cfa.FAPercentCompleted * ctd.TakeOffQuantity), cfa.FAQuantity) AS Quantity, 'N/A' AS Area, cfa.FAPercentCompleted AS PercentClaim, cfa.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID\nJOIN CivilTrackerDetails ctd\n\tON ctd.BidID =  cfa.FABidID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'CIVIL' AS Craft, \nnull AS BidID, csp.SellTestPackageNumber AS Spool1, 'N/A' AS Spool2, \n'N/A' AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \ncsp.SellNotes, 1 AS Quantity, 'N/A' AS Area, 1.00 PercentClaim, 0 AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN CivilSellPackage csp\n\tON csp.ActivityID = sas.ActivityID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, sas.ActivityType, at.ActivityType AS ActivityTypeName, ats.Status, 'EQUIP' AS Craft,\nefa.FABidID AS BidID, 'N/A' AS Spool1, etd.ComponentNumber AS Spool2, \netd.Description AS LineNumber, 'N/A' AS DrawingNumber, 'N/A' AS SheetNumber, \n'N/A' AS Line2, 'N/A' AS DWG2, 'N/A' AS Sheet2, 'N/A' AS Size , \nefa.FANotes, efa.FAQuantity AS Quantity, 'N/A' AS Area, efa.FAPercentCompleted AS PercentClaim, efa.FARework AS Rework\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID =sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID\nLEFT JOIN EquipTrackerDetails etd\n\tON etd.BidID = efa.FABidID\nWHERE sas.fk_ActivityStatus IN (2,7,9,11,44)\nAND (sas.LockField IS NULL OR sas.LockField = :UserID)) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "UserID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "46",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivitiesPendingApprovalResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Craft",
        "fieldName" : "craft",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Spool1",
        "fieldName" : "spool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Spool2",
        "fieldName" : "spool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Line1",
        "fieldName" : "line1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Drawing1",
        "fieldName" : "drawing1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Sheet1",
        "fieldName" : "sheet1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Line2",
        "fieldName" : "line2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Drawing2",
        "fieldName" : "drawing2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Sheet2",
        "fieldName" : "sheet2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Size",
        "fieldName" : "size",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PercentClaim",
        "fieldName" : "percentClaim",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      } ]
    }
  },
  "GetActivitiesPendingReviewFAs" : {
    "name" : "GetActivitiesPendingReviewFAs",
    "description" : "Gets all activities pending super review for Pipe Civil Equip, AND Non Piece mark steel work.",
    "version" : "V2",
    "queryString" : "SELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,\nat.ActivityType AS ActivityTypeName, sd.ReceivedTime, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status, \nptd.Description AS Description, 'Pipe' AS Craft,  NULL AS BidID\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nLEFT JOIN PipeFA pfa\n    ON pfa.ActivityID = sas.ActivityID\nLEFT JOIN PipeTrackerDetails ptd\n    ON ptd.BidID = pfa.FABidID\n\n\nWHERE sas.ActivityType IN (11,21,22,23,24,25,31,32,33,38,39,41,42,43,51,52,53,59,90,91,92)\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\n\n\n\nUNION\n\n\n\nSELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,at.ActivityType AS ActivityTypeName, sd.ReceivedTime, \nCONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status,\nCASE sas.ActivityType\nWHEN 67 THEN\n\tstd.Description\nWHEN 66 THEN\n\t'Sell Package'\nWHEN 96 THEN\n\t'MISC'\nELSE\n\tNULL\nEND AS Description, \n'Steel' AS Craft, stld.DemoBidID\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nLEFT JOIN SteelSellPackage stlsell\n\tON stlsell.ActivityID = sas.ActivityID\nLEFT JOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelTrackerDetails std\n\tON std.BidID = stld.DemoBidID\n    \nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.ActivityType IN (66,67,96)\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\n\n\n\nUNION\n\n\n\nSELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,\nat.ActivityType AS ActivityTypeName, sd.ReceivedTime, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status,\nIF(sas.ActivityType IN (70,71), ctd.Description, IF(sas.ActivityType = 72, 'Sell Package', 'MISC') ) AS Description, \n'Civil' AS Craft, cfa.FABidID\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID\nLEFT JOIN CivilSellPackage csell\n\tON csell.ActivityID = sas.ActivityID\n    \nLEFT JOIN CivilTrackerDetails ctd\n\tON ctd.BidID = cfa.FABidID\n    \nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.fk_ActivityStatus in (1,4,6,8,10)\nAND sas.ActivityType IN (70,71,72)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\n\n\n\nUNION\n\n\n\nSELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,\nat.ActivityType AS ActivityTypeName, sd.ReceivedTime, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status,\netd.Description, 'Equip' AS Craft, efa.FABidID\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nJOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID\n    \nLEFT JOIN EquipTrackerDetails etd\n\tON etd.BidID = efa.FABidID\n    \nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\n\n\n\nORDER BY ActivityID DESC",
    "countQueryString" : "select count(*) from (SELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,\nat.ActivityType AS ActivityTypeName, sd.ReceivedTime, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status, \nptd.Description AS Description, 'Pipe' AS Craft,  NULL AS BidID\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nLEFT JOIN PipeFA pfa\n    ON pfa.ActivityID = sas.ActivityID\nLEFT JOIN PipeTrackerDetails ptd\n    ON ptd.BidID = pfa.FABidID\n\n\nWHERE sas.ActivityType IN (11,21,22,23,24,25,31,32,33,38,39,41,42,43,51,52,53,59,90,91,92)\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\n\n\n\nUNION\n\n\n\nSELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,at.ActivityType AS ActivityTypeName, sd.ReceivedTime, \nCONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status,\nCASE sas.ActivityType\nWHEN 67 THEN\n\tstd.Description\nWHEN 66 THEN\n\t'Sell Package'\nWHEN 96 THEN\n\t'MISC'\nELSE\n\tNULL\nEND AS Description, \n'Steel' AS Craft, stld.DemoBidID\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nLEFT JOIN SteelSellPackage stlsell\n\tON stlsell.ActivityID = sas.ActivityID\nLEFT JOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelTrackerDetails std\n\tON std.BidID = stld.DemoBidID\n    \nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.ActivityType IN (66,67,96)\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\n\n\n\nUNION\n\n\n\nSELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,\nat.ActivityType AS ActivityTypeName, sd.ReceivedTime, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status,\nIF(sas.ActivityType IN (70,71), ctd.Description, IF(sas.ActivityType = 72, 'Sell Package', 'MISC') ) AS Description, \n'Civil' AS Craft, cfa.FABidID\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID\nLEFT JOIN CivilSellPackage csell\n\tON csell.ActivityID = sas.ActivityID\n    \nLEFT JOIN CivilTrackerDetails ctd\n\tON ctd.BidID = cfa.FABidID\n    \nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.fk_ActivityStatus in (1,4,6,8,10)\nAND sas.ActivityType IN (70,71,72)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\n\n\n\nUNION\n\n\n\nSELECT sd.SubmissionID, sas.ActivityID, sas.ActivityType, sas.fk_ActivityStatus,\nat.ActivityType AS ActivityTypeName, sd.ReceivedTime, CONCAT(u.FirstName, \" \", u.LastName) AS NameFull, ats.Status,\netd.Description, 'Equip' AS Craft, efa.FABidID\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nJOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID\n    \nLEFT JOIN EquipTrackerDetails etd\n\tON etd.BidID = efa.FABidID\n    \nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\n\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\n\nWHERE sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\n\n\n\nORDER BY ActivityID DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "SuperID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "47",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivitiesPendingReviewFasResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "fk_ActivityStatus",
        "fieldName" : "fkActivityStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "NameFull",
        "fieldName" : "nameFull",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Craft",
        "fieldName" : "craft",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetActivitiesPendingReviewSteel" : {
    "name" : "GetActivitiesPendingReviewSteel",
    "description" : "Get All activities pending super review for Steel.",
    "version" : "V2",
    "queryString" : "SELECT fas.SubmissionID, fas.fk_ActivityStatus, fas.Status, fas.ReceivedTime, fas.NameFull, fas.PieceMark, fas.SortGroup1,\nSUM(QuantityShake) AS QuantityShake,\nSUM(QuantityErect) AS QuantityErect,\nSUM(QuantityBoltOut) AS QuantityBoltOut,\nSUM(QuantityImp) AS QuantityImp,\nSUM(QuantitySell) AS QuantitySell,\nSUM(QuantityWeld) AS QuantityWeld\nFROM (\nSELECT sd.SubmissionID, sas.fk_ActivityStatus, ats.Status, sd.ReceivedTime, \nCONCAT(u.FirstName, \" \", u.LastName) AS NameFull, \n(COALESCE(stls.FASortGroup1,COALESCE(stle.FASortGroup1,COALESCE(stlb.FASortGroup1, COALESCE(stli.FASortGroup1, COALESCE(stlsell.FASortGroup1, COALESCE(stlw.FASortGroup1,'N/A'))))))) AS SortGroup1,\n\n(COALESCE(stls.FAPieceNumber,COALESCE(stle.FAPieceNumber,COALESCE(stlb.FAPieceNumber, COALESCE(stli.FAPieceNumber, COALESCE(stlsell.FAPieceNumber, COALESCE(stlw.FAPieceNumber,'N/A'))))))) AS PieceMark,\n\n(COALESCE(stls.FAQuantity,0) * COALESCE(stls.FAPercentCompleted,0)) AS QuantityShake,\n(COALESCE(stle.FAQuantity,0) * COALESCE(stle.FAPercentCompleted,0)) AS QuantityErect,\n(COALESCE(stlb.FAQuantity,0) * COALESCE(stlb.FAPercentCompleted,0)) AS QuantityBoltOut,\n(COALESCE(stli.FAQuantity,0) * COALESCE(stli.FAPercentCompleted,0)) AS QuantityImp,\n(COALESCE(stlsell.FAQuantity,0) * COALESCE(stlsell.FAPercentCompleted,0)) AS QuantitySell,\n(COALESCE(stlw.FAQuantity,0) * COALESCE(stlw.FAPercentCompleted,0)) AS QuantityWeld\n\nFROM SubsDetails sd\nJOIN SubmissionActivityStatus sas\n\tON sas.SubmissionID = sd.SubmissionID\nLEFT JOIN SteelFA stls\n\tON stls.ActivityID = sas.ActivityID AND stls.ActivityType = 61\nLEFT JOIN SteelFA stle\n\tON stle.ActivityID = sas.ActivityID AND stle.ActivityType = 62\nLEFT JOIN SteelFA stlb\n\tON stlb.ActivityID = sas.ActivityID AND stlb.ActivityType = 63\nLEFT JOIN SteelFA stli\n\tON stli.ActivityID = sas.ActivityID AND stli.ActivityType = 64\nLEFT JOIN SteelFA stlsell\n\tON stlsell.ActivityID = sas.ActivityID AND stlsell.ActivityType = 65\nLEFT JOIN SteelFA stlw\n\tON stlw.ActivityID = sas.ActivityID AND stlw.ActivityType = 68\n\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nWHERE sas.ActivityType IN (61,62,63,64,65,68)\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\n\nORDER BY sd.SubmissionID DESC ) fas\nGROUP BY fas.SubmissionID, fas.PieceMark, fas.fk_ActivityStatus",
    "countQueryString" : "select count(*) from (SELECT fas.SubmissionID, fas.fk_ActivityStatus, fas.Status, fas.ReceivedTime, fas.NameFull, fas.PieceMark, fas.SortGroup1,\nSUM(QuantityShake) AS QuantityShake,\nSUM(QuantityErect) AS QuantityErect,\nSUM(QuantityBoltOut) AS QuantityBoltOut,\nSUM(QuantityImp) AS QuantityImp,\nSUM(QuantitySell) AS QuantitySell,\nSUM(QuantityWeld) AS QuantityWeld\nFROM (\nSELECT sd.SubmissionID, sas.fk_ActivityStatus, ats.Status, sd.ReceivedTime, \nCONCAT(u.FirstName, \" \", u.LastName) AS NameFull, \n(COALESCE(stls.FASortGroup1,COALESCE(stle.FASortGroup1,COALESCE(stlb.FASortGroup1, COALESCE(stli.FASortGroup1, COALESCE(stlsell.FASortGroup1, COALESCE(stlw.FASortGroup1,'N/A'))))))) AS SortGroup1,\n\n(COALESCE(stls.FAPieceNumber,COALESCE(stle.FAPieceNumber,COALESCE(stlb.FAPieceNumber, COALESCE(stli.FAPieceNumber, COALESCE(stlsell.FAPieceNumber, COALESCE(stlw.FAPieceNumber,'N/A'))))))) AS PieceMark,\n\n(COALESCE(stls.FAQuantity,0) * COALESCE(stls.FAPercentCompleted,0)) AS QuantityShake,\n(COALESCE(stle.FAQuantity,0) * COALESCE(stle.FAPercentCompleted,0)) AS QuantityErect,\n(COALESCE(stlb.FAQuantity,0) * COALESCE(stlb.FAPercentCompleted,0)) AS QuantityBoltOut,\n(COALESCE(stli.FAQuantity,0) * COALESCE(stli.FAPercentCompleted,0)) AS QuantityImp,\n(COALESCE(stlsell.FAQuantity,0) * COALESCE(stlsell.FAPercentCompleted,0)) AS QuantitySell,\n(COALESCE(stlw.FAQuantity,0) * COALESCE(stlw.FAPercentCompleted,0)) AS QuantityWeld\n\nFROM SubsDetails sd\nJOIN SubmissionActivityStatus sas\n\tON sas.SubmissionID = sd.SubmissionID\nLEFT JOIN SteelFA stls\n\tON stls.ActivityID = sas.ActivityID AND stls.ActivityType = 61\nLEFT JOIN SteelFA stle\n\tON stle.ActivityID = sas.ActivityID AND stle.ActivityType = 62\nLEFT JOIN SteelFA stlb\n\tON stlb.ActivityID = sas.ActivityID AND stlb.ActivityType = 63\nLEFT JOIN SteelFA stli\n\tON stli.ActivityID = sas.ActivityID AND stli.ActivityType = 64\nLEFT JOIN SteelFA stlsell\n\tON stlsell.ActivityID = sas.ActivityID AND stlsell.ActivityType = 65\nLEFT JOIN SteelFA stlw\n\tON stlw.ActivityID = sas.ActivityID AND stlw.ActivityType = 68\n\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nWHERE sas.ActivityType IN (61,62,63,64,65,68)\nAND sas.fk_ActivityStatus in (1,4,6,8,10)\nAND (tc.Superintendent = :SuperID OR tcr.Superintendent = :SuperID)\n\nORDER BY sd.SubmissionID DESC ) fas\nGROUP BY fas.SubmissionID, fas.PieceMark, fas.fk_ActivityStatus) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "SuperID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "47",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivitiesPendingReviewSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "fk_ActivityStatus",
        "fieldName" : "fkActivityStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "NameFull",
        "fieldName" : "nameFull",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMark",
        "fieldName" : "pieceMark",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SortGroup1",
        "fieldName" : "sortGroup1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityShake",
        "fieldName" : "quantityShake",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "QuantityErect",
        "fieldName" : "quantityErect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "QuantityBoltOut",
        "fieldName" : "quantityBoltOut",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "QuantityImp",
        "fieldName" : "quantityImp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "QuantitySell",
        "fieldName" : "quantitySell",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "QuantityWeld",
        "fieldName" : "quantityWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetActivitiesPendingReviewSteelActivities" : {
    "name" : "GetActivitiesPendingReviewSteelActivities",
    "description" : "Returns individual activities for given submission/pieceMark/Status.  Populates the Super Review steel detailed list",
    "version" : "V2",
    "queryString" : "SELECT sas.fk_ActivityStatus, ats.Status, at.ActivityType, at.ID AS ActivityTypeID,\nstl.ActivityID, stl.FASortGroup1, stl.FAPieceNumber, stl.FAQuantity, stl.FAPercentCompleted, stl.FARework, stl.FANotes, stl.FATimeInForm\n\n\n\nFROM SubsDetails sd\nJOIN SubmissionActivityStatus sas\n\tON sas.SubmissionID = sd.SubmissionID\nJOIN SteelFA stl\n\tON stl.ActivityID = sas.ActivityID \n    \nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nWHERE sas.SubmissionID = :SubmissionID\nAND stl.FAPiecenumber = :PieceMark\nAND sas.fk_ActivityStatus = :StatusID\n\nORDER BY sas.ActivityType",
    "countQueryString" : "select count(*) from (SELECT sas.fk_ActivityStatus, ats.Status, at.ActivityType, at.ID AS ActivityTypeID,\nstl.ActivityID, stl.FASortGroup1, stl.FAPieceNumber, stl.FAQuantity, stl.FAPercentCompleted, stl.FARework, stl.FANotes, stl.FATimeInForm\n\n\n\nFROM SubsDetails sd\nJOIN SubmissionActivityStatus sas\n\tON sas.SubmissionID = sd.SubmissionID\nJOIN SteelFA stl\n\tON stl.ActivityID = sas.ActivityID \n    \nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\nJOIN PSA.REF_ActivityTypes at\n\tON  at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nWHERE sas.SubmissionID = :SubmissionID\nAND stl.FAPiecenumber = :PieceMark\nAND sas.fk_ActivityStatus = :StatusID\n\nORDER BY sas.ActivityType) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "SubmissionID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "456",
      "required" : true
    }, {
      "name" : "PieceMark",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "10B1",
      "required" : true
    }, {
      "name" : "StatusID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "4",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivitiesPendingReviewSteelActivitiesResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "fk_ActivityStatus",
        "fieldName" : "fkActivityStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeID",
        "fieldName" : "activityTypeId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FASortGroup1",
        "fieldName" : "fasortGroup1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPieceNumber",
        "fieldName" : "fapieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAQuantity",
        "fieldName" : "faquantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FAPercentCompleted",
        "fieldName" : "fapercentCompleted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryCivilFA" : {
    "name" : "GetActivityHistoryCivilFA",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT cfa.* \nFROM CivilFA cfa\nWHERE ActivityID = :ActivityID\n\nUNION\n\nSELECT cfar.fk_OrgActivityId, cfar.FABidID, cfar.FAQuantity, cfar.FAPercentCompleted,  cfar.FARework, cfar.FANotes, cfar.ActivityType, cfar.FATimeInForm, cfar.Rev, cfar.TimeStamp\nFROM CivilFAREV cfar\nWHERE cfar.fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT cfa.* \nFROM CivilFA cfa\nWHERE ActivityID = :ActivityID\n\nUNION\n\nSELECT cfar.fk_OrgActivityId, cfar.FABidID, cfar.FAQuantity, cfar.FAPercentCompleted,  cfar.FARework, cfar.FANotes, cfar.ActivityType, cfar.FATimeInForm, cfar.Rev, cfar.TimeStamp\nFROM CivilFAREV cfar\nWHERE cfar.fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2506",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryCivilFaResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FABidID",
        "fieldName" : "fabidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FAQuantity",
        "fieldName" : "faquantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FAPercentCompleted",
        "fieldName" : "fapercentCompleted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryEquipFA" : {
    "name" : "GetActivityHistoryEquipFA",
    "description" : "name",
    "version" : "V2",
    "queryString" : "SELECT efa.* \nFROM EquipFA efa\nWHERE ActivityID = :ActivityID\n\nUNION\n\nSELECT efar.fk_OrgActivityID, efar.FABidID, efar.FATagNumber, efar.FAActivitySelect, efar.FAQuantity, efar.FAPercentCompleted, efar.FARework, efar.FANotes, efar.ActivityType, efar.FATimeInForm, efar.Rev, efar.TimeStamp\nFROM EquipFAREV efar\nWHERE efar.fk_OrgActivityID = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT efa.* \nFROM EquipFA efa\nWHERE ActivityID = :ActivityID\n\nUNION\n\nSELECT efar.fk_OrgActivityID, efar.FABidID, efar.FATagNumber, efar.FAActivitySelect, efar.FAQuantity, efar.FAPercentCompleted, efar.FARework, efar.FANotes, efar.ActivityType, efar.FATimeInForm, efar.Rev, efar.TimeStamp\nFROM EquipFAREV efar\nWHERE efar.fk_OrgActivityID = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2709",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryEquipFaResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FABidID",
        "fieldName" : "fabidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FATagNumber",
        "fieldName" : "fatagNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAActivitySelect",
        "fieldName" : "faactivitySelect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAQuantity",
        "fieldName" : "faquantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FAPercentCompleted",
        "fieldName" : "fapercentCompleted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryPipeConnection" : {
    "name" : "GetActivityHistoryPipeConnection",
    "description" : "Get the change history for a given Pipe Connection ActivityID",
    "version" : "V2",
    "queryString" : "SELECT pc.* \nFROM PipeConnection pc\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT pcr.fk_OrgActivityId, pcr.ConnectionBidID, pcr.ConnectionSpool1, pcr.ConnectionSpool2, pcr.ConnectionDrawingNumber, pcr.ConnectionLineNumber, pcr.ConnectionSheetNumber, pcr.ConnectionSize, \npcr.ConnectionQuantity, pcr.ConnectionRework, pcr.ConnectionNotes, pcr.ActivityType, pcr.ConnectionTimeInForm, pcr.Rev, pcr.TimeStamp\nFROM PipeConnectionREV pcr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT pc.* \nFROM PipeConnection pc\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT pcr.fk_OrgActivityId, pcr.ConnectionBidID, pcr.ConnectionSpool1, pcr.ConnectionSpool2, pcr.ConnectionDrawingNumber, pcr.ConnectionLineNumber, pcr.ConnectionSheetNumber, pcr.ConnectionSize, \npcr.ConnectionQuantity, pcr.ConnectionRework, pcr.ConnectionNotes, pcr.ActivityType, pcr.ConnectionTimeInForm, pcr.Rev, pcr.TimeStamp\nFROM PipeConnectionREV pcr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2689",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryPipeConnectionResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ConnectionBidID",
        "fieldName" : "connectionBidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ConnectionSpool1",
        "fieldName" : "connectionSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ConnectionSpool2",
        "fieldName" : "connectionSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ConnectionDrawingNumber",
        "fieldName" : "connectionDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ConnectionLineNumber",
        "fieldName" : "connectionLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ConnectionSheetNumber",
        "fieldName" : "connectionSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ConnectionSize",
        "fieldName" : "connectionSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "ConnectionQuantity",
        "fieldName" : "connectionQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ConnectionRework",
        "fieldName" : "connectionRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ConnectionNotes",
        "fieldName" : "connectionNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ConnectionTimeInForm",
        "fieldName" : "connectionTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryPipeErection" : {
    "name" : "GetActivityHistoryPipeErection",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT pe.* \nFROM PipeErection pe\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT per.fk_OrgActivityId, per.ErectionBidID, per.ErectionSpool1, per.ErectionLengthSpool1, per.ErectionSpool2, per.ErectionLengthSpool2, per.ErectionSpool3, per.ErectionLengthSpool3, per.ErectionSpool4, per.ErectionLengthSpool4, per.ErectionSpool5, per.ErectionLengthSpool5, per.ErectionSpool6, per.ErectionLengthSpool6,\nper.ErectionOnCords, per.ErectionDrawingNumber, per.ErectionLineNumber, per.ErectionSheetNumber, per.ErectionTimeInForm, per.ErectionPipeSize, per.ErectionRework, per.ErectionNotes, per.ActivityType, per.Rev, per.TimeStamp\nFROM PipeErectionREV per\nWHERE per.fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT pe.* \nFROM PipeErection pe\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT per.fk_OrgActivityId, per.ErectionBidID, per.ErectionSpool1, per.ErectionLengthSpool1, per.ErectionSpool2, per.ErectionLengthSpool2, per.ErectionSpool3, per.ErectionLengthSpool3, per.ErectionSpool4, per.ErectionLengthSpool4, per.ErectionSpool5, per.ErectionLengthSpool5, per.ErectionSpool6, per.ErectionLengthSpool6,\nper.ErectionOnCords, per.ErectionDrawingNumber, per.ErectionLineNumber, per.ErectionSheetNumber, per.ErectionTimeInForm, per.ErectionPipeSize, per.ErectionRework, per.ErectionNotes, per.ActivityType, per.Rev, per.TimeStamp\nFROM PipeErectionREV per\nWHERE per.fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2698",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryPipeErectionResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionBidID",
        "fieldName" : "erectionBidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool1",
        "fieldName" : "erectionSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool1",
        "fieldName" : "erectionLengthSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool2",
        "fieldName" : "erectionSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool2",
        "fieldName" : "erectionLengthSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool3",
        "fieldName" : "erectionSpool3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool3",
        "fieldName" : "erectionLengthSpool3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool4",
        "fieldName" : "erectionSpool4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool4",
        "fieldName" : "erectionLengthSpool4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool5",
        "fieldName" : "erectionSpool5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool5",
        "fieldName" : "erectionLengthSpool5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionSpool6",
        "fieldName" : "erectionSpool6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLengthSpool6",
        "fieldName" : "erectionLengthSpool6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionOnCords",
        "fieldName" : "erectionOnCords",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ErectionDrawingNumber",
        "fieldName" : "erectionDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionLineNumber",
        "fieldName" : "erectionLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionSheetNumber",
        "fieldName" : "erectionSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ErectionTimeInForm",
        "fieldName" : "erectionTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ErectionPipeSize",
        "fieldName" : "erectionPipeSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "ErectionRework",
        "fieldName" : "erectionRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ErectionNotes",
        "fieldName" : "erectionNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryPipeFA" : {
    "name" : "GetActivityHistoryPipeFA",
    "description" : "Get the Activity history for the given ActivityID for a PipeFA Activity",
    "version" : "V2",
    "queryString" : "SELECT pfa.* \nFROM PipeFA pfa\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  pfar.fk_OrgActivityId,\npfar.FABidID, pfar.FAQuantity, pfar.FAPercentCompleted, pfar.FARework, pfar.FANotes,\npfar.ActivityType, pfar.FATimeInForm, pfar.Rev, pfar.TimeStamp\nFROM PipeFAREV pfar\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT pfa.* \nFROM PipeFA pfa\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  pfar.fk_OrgActivityId,\npfar.FABidID, pfar.FAQuantity, pfar.FAPercentCompleted, pfar.FARework, pfar.FANotes,\npfar.ActivityType, pfar.FATimeInForm, pfar.Rev, pfar.TimeStamp\nFROM PipeFAREV pfar\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2684",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryPipeFaResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FABidID",
        "fieldName" : "fabidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FAQuantity",
        "fieldName" : "faquantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "FAPercentCompleted",
        "fieldName" : "fapercentCompleted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryPipeMisc" : {
    "name" : "GetActivityHistoryPipeMisc",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT pm.* \nFROM PipeMisc pm\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  pmr.fk_OrgActivityId,\npmr.MiscDrawingNumber, pmr.MiscLineNumber, pmr.MiscSheetNumber, pmr.MiscTimeInForm, pmr.MiscQuantity, pmr.MiscRework, pmr.MiscNotes,\npmr.ActivityType, pmr.Rev, pmr.TimeStamp\nFROM PipeMiscREV pmr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT pm.* \nFROM PipeMisc pm\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  pmr.fk_OrgActivityId,\npmr.MiscDrawingNumber, pmr.MiscLineNumber, pmr.MiscSheetNumber, pmr.MiscTimeInForm, pmr.MiscQuantity, pmr.MiscRework, pmr.MiscNotes,\npmr.ActivityType, pmr.Rev, pmr.TimeStamp\nFROM PipeMiscREV pmr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1921",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryPipeMiscResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscDrawingNumber",
        "fieldName" : "miscDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscLineNumber",
        "fieldName" : "miscLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscSheetNumber",
        "fieldName" : "miscSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MiscTimeInForm",
        "fieldName" : "miscTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscQuantity",
        "fieldName" : "miscQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "MiscRework",
        "fieldName" : "miscRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "MiscNotes",
        "fieldName" : "miscNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryPipeTesting" : {
    "name" : "GetActivityHistoryPipeTesting",
    "description" : "Get the field activity history for testing activities BY RowID",
    "version" : "V1",
    "queryString" : "SELECT pt.* \nFROM PipeTesting pt\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT ptr.fk_OrgActivityId, ptr.TestingTestPackageNumber, ptr.TestingRework, ptr.TestingNotes, ptr.TestingTimeInForm, \nptr.ActivityType, ptr.Rev, ptr.TimeStamp\nFROM PipeTestingREV ptr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT pt.* \nFROM PipeTesting pt\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT ptr.fk_OrgActivityId, ptr.TestingTestPackageNumber, ptr.TestingRework, ptr.TestingNotes, ptr.TestingTimeInForm, \nptr.ActivityType, ptr.Rev, ptr.TimeStamp\nFROM PipeTestingREV ptr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2677",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryPipeTestingResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TestingTestPackageNumber",
        "fieldName" : "testingTestPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestingRework",
        "fieldName" : "testingRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TestingNotes",
        "fieldName" : "testingNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestingTimeInForm",
        "fieldName" : "testingTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryPipeWeld" : {
    "name" : "GetActivityHistoryPipeWeld",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT pw.* \nFROM PipeWeld pw\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  pwr.fk_OrgActivityId, \npwr.WeldSpool1, pwr.WeldSpool2, pwr.WeldDrawingNumber, pwr.WeldLineNumber, pwr.WeldSheetNumber, pwr.WeldTimeInForm, pwr.WeldLineSpec, pwr.WeldNumber, pwr.WeldStencil, pwr.WeldSize, pwr.WeldThickness, \npwr.WeldType, pwr.WeldPosition, pwr.WeldMaterial, pwr.WeldProcedure, pwr.WeldComplete, pwr.WeldShared, pwr.WeldPercentCompleted, pwr.WeldRework, pwr.WeldNotes, \npwr.ActivityType, pwr.Rev, pwr.TimeStamp\nFROM PipeWeldREV pwr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT pw.* \nFROM PipeWeld pw\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT  pwr.fk_OrgActivityId, \npwr.WeldSpool1, pwr.WeldSpool2, pwr.WeldDrawingNumber, pwr.WeldLineNumber, pwr.WeldSheetNumber, pwr.WeldTimeInForm, pwr.WeldLineSpec, pwr.WeldNumber, pwr.WeldStencil, pwr.WeldSize, pwr.WeldThickness, \npwr.WeldType, pwr.WeldPosition, pwr.WeldMaterial, pwr.WeldProcedure, pwr.WeldComplete, pwr.WeldShared, pwr.WeldPercentCompleted, pwr.WeldRework, pwr.WeldNotes, \npwr.ActivityType, pwr.Rev, pwr.TimeStamp\nFROM PipeWeldREV pwr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2691",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryPipeWeldResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "WeldSpool1",
        "fieldName" : "weldSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSpool2",
        "fieldName" : "weldSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldDrawingNumber",
        "fieldName" : "weldDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldLineNumber",
        "fieldName" : "weldLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSheetNumber",
        "fieldName" : "weldSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldTimeInForm",
        "fieldName" : "weldTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "WeldLineSpec",
        "fieldName" : "weldLineSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldNumber",
        "fieldName" : "weldNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldStencil",
        "fieldName" : "weldStencil",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSize",
        "fieldName" : "weldSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "WeldThickness",
        "fieldName" : "weldThickness",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldType",
        "fieldName" : "weldType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldPosition",
        "fieldName" : "weldPosition",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldMaterial",
        "fieldName" : "weldMaterial",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldProcedure",
        "fieldName" : "weldProcedure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldComplete",
        "fieldName" : "weldComplete",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "WeldShared",
        "fieldName" : "weldShared",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "WeldPercentCompleted",
        "fieldName" : "weldPercentCompleted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "WeldRework",
        "fieldName" : "weldRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "WeldNotes",
        "fieldName" : "weldNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistoryStatus" : {
    "name" : "GetActivityHistoryStatus",
    "description" : "Get the status change history for a given ActivityID",
    "version" : "V1",
    "queryString" : "SELECT sas.ActivityID, CONCAT(ats.Status, ' - ', IF(sas.LockField IS NOT NULL, 'Locked', COALESCE(sas.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, sas.TimeStamp\n\nFROM SubmissionActivityStatus sas\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nLEFT JOIN PSA.tblUserPSA u\n\tON u.ID = fk_LastModifiedBy\n    \nWHERE sas.ActivityID = :ActivityID\n\n\n\nUNION ALL\n\n\n\nSELECT sasr.*\nFROM (SELECT sasr.fk_ActivityID, CONCAT(ats.Status, ' - ', IF(sasr.LockField IS NOT NULL, 'Locked', COALESCE(sasr.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, sasr.TimeStamp\n\nFROM SubmissionActivityStatusREV sasr\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sasr.fk_ActivityStatus\nLEFT JOIN PSA.tblUserPSA u\n\tON u.ID = fk_LastModifiedBy\n\nWHERE sasr.fk_ActivityID = :ActivityID) sasr\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT sas.ActivityID, CONCAT(ats.Status, ' - ', IF(sas.LockField IS NOT NULL, 'Locked', COALESCE(sas.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, sas.TimeStamp\n\nFROM SubmissionActivityStatus sas\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\nLEFT JOIN PSA.tblUserPSA u\n\tON u.ID = fk_LastModifiedBy\n    \nWHERE sas.ActivityID = :ActivityID\n\n\n\nUNION ALL\n\n\n\nSELECT sasr.*\nFROM (SELECT sasr.fk_ActivityID, CONCAT(ats.Status, ' - ', IF(sasr.LockField IS NOT NULL, 'Locked', COALESCE(sasr.LockField,'Unlocked'))) AS Status, CONCAT(u.FirstName, ' ', u.LastName) AS LastModifiedBy, sasr.TimeStamp\n\nFROM SubmissionActivityStatusREV sasr\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sasr.fk_ActivityStatus\nLEFT JOIN PSA.tblUserPSA u\n\tON u.ID = fk_LastModifiedBy\n\nWHERE sasr.fk_ActivityID = :ActivityID) sasr\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2717",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistoryStatusResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "LastModifiedBy",
        "fieldName" : "lastModifiedBy",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelDemo" : {
    "name" : "GetActivityHistorySteelDemo",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stld.* \nFROM SteelDemo stld\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stldr.fk_OrgActivityId, stldr.DemoBidID, stldr.DemoPercentCompleted, stldr.DemoNotes, stldr.ActivityType, stldr.DemoTimeInForm, stldr.Rev, stldr.TimeStamp\nFROM SteelDemoREV stldr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stld.* \nFROM SteelDemo stld\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stldr.fk_OrgActivityId, stldr.DemoBidID, stldr.DemoPercentCompleted, stldr.DemoNotes, stldr.ActivityType, stldr.DemoTimeInForm, stldr.Rev, stldr.TimeStamp\nFROM SteelDemoREV stldr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "3120",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelDemoResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "DemoBidID",
        "fieldName" : "demoBidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "DemoPercentCompleted",
        "fieldName" : "demoPercentCompleted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "DemoNotes",
        "fieldName" : "demoNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DemoTimeInForm",
        "fieldName" : "demoTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelFA" : {
    "name" : "GetActivityHistorySteelFA",
    "description" : "Get the Activity change history for a given SteelFA activityID",
    "version" : "V2",
    "queryString" : "SELECT stlfa.* \nFROM SteelFA stlfa\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlfar.fk_OrgActivityId, stlfar.FASortGroup1, stlfar.FAPieceNumber, stlfar.FAQuantity, stlfar.FAPercentCompleted, stlfar.FARework, stlfar.FANotes, stlfar.ActivityType, stlfar.FATimeInForm, stlfar.Rev, stlfar.TimeStamp\nFROM SteelFAREV stlfar\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stlfa.* \nFROM SteelFA stlfa\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlfar.fk_OrgActivityId, stlfar.FASortGroup1, stlfar.FAPieceNumber, stlfar.FAQuantity, stlfar.FAPercentCompleted, stlfar.FARework, stlfar.FANotes, stlfar.ActivityType, stlfar.FATimeInForm, stlfar.Rev, stlfar.TimeStamp\nFROM SteelFAREV stlfar\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "3118",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelFaResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FASortGroup1",
        "fieldName" : "fasortGroup1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAPieceNumber",
        "fieldName" : "fapieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAQuantity",
        "fieldName" : "faquantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "FAPercentCompleted",
        "fieldName" : "fapercentCompleted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FANotes",
        "fieldName" : "fanotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "FATimeInForm",
        "fieldName" : "fatimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetActivityHistorySteelMisc" : {
    "name" : "GetActivityHistorySteelMisc",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT stlm.* \nFROM SteelMisc stlm\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlmr.fk_OrgActivityId, stlmr.MiscBidID, stlmr.MiscPercentCompleted, stlmr.MiscRework, stlmr.MiscNotes, stlmr.ActivityType, stlmr.MiscTimeInForm, stlmr.Rev, stlmr.TimeStamp\nFROM SteelMiscREV stlmr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT stlm.* \nFROM SteelMisc stlm\nWHERE ActivityID = :ActivityID\n\nUNION ALL\n\nSELECT stlmr.fk_OrgActivityId, stlmr.MiscBidID, stlmr.MiscPercentCompleted, stlmr.MiscRework, stlmr.MiscNotes, stlmr.ActivityType, stlmr.MiscTimeInForm, stlmr.Rev, stlmr.TimeStamp\nFROM SteelMiscREV stlmr\nWHERE fk_OrgActivityId = :ActivityID\nORDER BY TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "648",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetActivityHistorySteelMiscResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscBidID",
        "fieldName" : "miscBidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscPercentCompleted",
        "fieldName" : "miscPercentCompleted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "MiscRework",
        "fieldName" : "miscRework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "MiscNotes",
        "fieldName" : "miscNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "MiscTimeInForm",
        "fieldName" : "miscTimeInForm",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesByTestPackageCivil" : {
    "name" : "GetBidActivityMatchesByTestPackageCivil",
    "description" : "Get Bid items with the supplied TestPackage",
    "version" : "V1",
    "queryString" : "SELECT ctd.UID, ctd.BidID, ctd.ProjectServicesRep, ctd.EWONumber, ctd.Scope, ctd.Phase, ctd.Stage, ctd.TestPackageNumber, ctd.WorkPackage, ctd.CostCode, ctd.P6ID, ctd.P6Description, ctd.AssignedContractor, \nctd.Area, ctd.Location, ctd.Structure, ctd.CU, ctd.Elevation, \nctd.SortGroup1, ctd.SortGroup2, ctd.SortGroup3, ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DrawingRev, ctd.DetailDrawingNumber, ctd.DetailRev, ctd.DetailName, ctd.Description, ctd.ActivityType, \nctd.ActivitySubType, ctd.System, ctd.Service, ctd.TakeOffQuantity, ctd.QuantityUnit, ctd.EstimatedHours, \nctd.WBS1, ctd.WBS2, ctd.WBS3, ctd.WBS4, ctd.WBS5, ctd.WBS6, ctd.WBS7, ctd.WBS8, ctd.WBS9, ctd.WBS10, \n\ncount(ctd.BidID) AS SellPunchCount,\nsum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,\nsum(COALESCE(ercs.InstalledSellPunch,0)) AS SellPunchInstalled,\n\nsum(COALESCE(ctd.EstimatedHours,0) * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent') * COALESCE(ercs.InstalledSellPunch,0)) AS EarnedSellPunchHours,\n\nctd.Rev, ctd.TimeStamp\n\nFROM CivilTrackerDetails ctd\n\nLEFT JOIN (SELECT sas.ActivityType, cs.SellTestPackageNumber, 1 AS InstalledSellPunch\n\t\t\tFROM CivilSellPackage cs \n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = cs.ActivityID AND sas.fk_ActivityStatus IN (5,12)) ercs\n\tON ercs.SellTestPackageNumber = ctd.TestPackageNumber \n    \nWHERE ctd.TestPackageNumber = :TestPackage\nAND ctd.ActivityType != \"Demo\"\nGROUP BY BidID\nORDER By ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DetailDrawingNumber, ctd.DetailName, ctd.Description",
    "countQueryString" : "select count(*) from (SELECT ctd.UID, ctd.BidID, ctd.ProjectServicesRep, ctd.EWONumber, ctd.Scope, ctd.Phase, ctd.Stage, ctd.TestPackageNumber, ctd.WorkPackage, ctd.CostCode, ctd.P6ID, ctd.P6Description, ctd.AssignedContractor, \nctd.Area, ctd.Location, ctd.Structure, ctd.CU, ctd.Elevation, \nctd.SortGroup1, ctd.SortGroup2, ctd.SortGroup3, ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DrawingRev, ctd.DetailDrawingNumber, ctd.DetailRev, ctd.DetailName, ctd.Description, ctd.ActivityType, \nctd.ActivitySubType, ctd.System, ctd.Service, ctd.TakeOffQuantity, ctd.QuantityUnit, ctd.EstimatedHours, \nctd.WBS1, ctd.WBS2, ctd.WBS3, ctd.WBS4, ctd.WBS5, ctd.WBS6, ctd.WBS7, ctd.WBS8, ctd.WBS9, ctd.WBS10, \n\ncount(ctd.BidID) AS SellPunchCount,\nsum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,\nsum(COALESCE(ercs.InstalledSellPunch,0)) AS SellPunchInstalled,\n\nsum(COALESCE(ctd.EstimatedHours,0) * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent') * COALESCE(ercs.InstalledSellPunch,0)) AS EarnedSellPunchHours,\n\nctd.Rev, ctd.TimeStamp\n\nFROM CivilTrackerDetails ctd\n\nLEFT JOIN (SELECT sas.ActivityType, cs.SellTestPackageNumber, 1 AS InstalledSellPunch\n\t\t\tFROM CivilSellPackage cs \n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = cs.ActivityID AND sas.fk_ActivityStatus IN (5,12)) ercs\n\tON ercs.SellTestPackageNumber = ctd.TestPackageNumber \n    \nWHERE ctd.TestPackageNumber = :TestPackage\nAND ctd.ActivityType != \"Demo\"\nGROUP BY BidID\nORDER By ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DetailDrawingNumber, ctd.DetailName, ctd.Description) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "7",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesByTestPackageCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "UID",
        "fieldName" : "uid",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ProjectServicesRep",
        "fieldName" : "projectServicesRep",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WorkPackage",
        "fieldName" : "workPackage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SortGroup1",
        "fieldName" : "sortGroup1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SortGroup2",
        "fieldName" : "sortGroup2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SortGroup3",
        "fieldName" : "sortGroup3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DrawingRev",
        "fieldName" : "drawingRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DetailDrawingNumber",
        "fieldName" : "detailDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailRev",
        "fieldName" : "detailRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DetailName",
        "fieldName" : "detailName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivitySubType",
        "fieldName" : "activitySubType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SellPunchCount",
        "fieldName" : "sellPunchCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      }, {
        "name" : "SellPunchHours",
        "fieldName" : "sellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellPunchInstalled",
        "fieldName" : "sellPunchInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "EarnedSellPunchHours",
        "fieldName" : "earnedSellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesByTestPackagePipe" : {
    "name" : "GetBidActivityMatchesByTestPackagePipe",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT ptd.UID, ptd.BidID, ptd.ProjectServicesRep, ptd.Scope, ptd.Phase, ptd.Stage, ptd.TestPackageNumber, ptd.WorkPackage, ptd.CostCode, ptd.P6ID, ptd.P6Description, ptd.AssignedContractor, \nptd.Area, ptd.Location, ptd.Structure, ptd.CU, ptd.Elevation, ptd.LineNumber, ptd.EngDrawingNumber, ptd.SheetNumber, ptd.DrawingRev, ptd.Description, ptd.ActivityType, ptd.ActivitySubType, ptd.ClientMaterialSpec, ptd.PerformanceMaterialSpec, ptd.Size, ptd.System, ptd.Service, ptd.ComponentNumber, ptd.TakeOffQuantity, ptd.QuantityUnit, ptd.EstimatedHours, \nptd.WBS1, ptd.WBS2, ptd.WBS3, ptd.WBS4, ptd.WBS5, ptd.WBS6, ptd.WBS7, ptd.WBS8, ptd.WBS9, ptd.WBS10, ptd.Rev, ptd.TimeStamp,\n\nert.RFTInstalled,\nert.HydroInstalled,\nert.CTOInstalled,\n\nIF(ptd.ActivityType != 'D', (ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeTestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeRFTHoursPercent')),0) AS RFTHours,\nIF(ptd.ActivityType != 'D', (ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeTestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeHydroHoursPercent')),0) AS HydroHours,\nIF(ptd.ActivityType != 'D', (ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeTestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeCTOHoursPercent')),0) AS CTOHours,\n\nert.EarnedRFTHours AS EarnedRFTHours,\nert.EarnedHydroHours AS EarnedHydroHours,\nert.EarnedCTOHours AS EarnedCTOHours\n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT ptd.UID,\nCOALESCE(pteR.InstalledRFT, 0) AS RFTInstalled,\nCOALESCE(pteH.InstalledHydro, 0) AS HydroInstalled,\nCOALESCE(pteC.InstalledCTO, 0) AS CTOInstalled,\n\nCOALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeTestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * pteR.InstalledRFT, 0) AS EarnedRFTHours,\nCOALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeTestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeHydroHoursPercent') * pteH.InstalledHydro, 0) AS EarnedHydroHours,\nCOALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeTestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeCTOHoursPercent') * pteC.InstalledCTO, 0) AS EarnedCTOHours\n\n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT pte.ActivityType, pte.TestingTestPackageNumber, 1 AS InstalledRFT\n\t\t\tFROM PipeTesting pte\n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON pte.ActivityID = sas.ActivityID AND sas.fk_ActivityStatus IN (5,12)) pteR\n\tON pteR.TestingTestPackageNumber = ptd.TestPackageNumber AND pteR.ActivityType = 41 \n    \nLEFT JOIN (SELECT pte.ActivityType, pte.TestingTestPackageNumber, 1 AS InstalledHydro\n\t\t\tFROM PipeTesting pte\n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = pte.ActivityID AND sas.fk_ActivityStatus IN (5,12)) pteH\n\tON pteH.TestingTestPackageNumber = ptd.TestPackageNumber AND pteH.ActivityType = 42 \n    \nLEFT JOIN (SELECT pte.ActivityType, pte.TestingTestPackageNumber, 1 AS InstalledCTO\n\t\t\tFROM PipeTesting pte\n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = pte.ActivityID AND sas.fk_ActivityStatus IN (5,12)) pteC\n\tON pteC.TestingTestPackageNumber = ptd.TestPackageNumber AND pteC.ActivityType = 43 \n\nWHERE ptd.TestPackageNumber = :TestPackage\nAND ptd.ActivityType != \"D\"\n) ert\n\tON ert.UID = ptd.UID\n    \nWHERE ptd.TestPackageNumber = :TestPackage\nAND ptd.ActivityType != \"D\"\nORDER BY ptd.EngDrawingNumber, ptd.SheetNumber",
    "countQueryString" : "select count(*) from (SELECT ptd.UID, ptd.BidID, ptd.ProjectServicesRep, ptd.Scope, ptd.Phase, ptd.Stage, ptd.TestPackageNumber, ptd.WorkPackage, ptd.CostCode, ptd.P6ID, ptd.P6Description, ptd.AssignedContractor, \nptd.Area, ptd.Location, ptd.Structure, ptd.CU, ptd.Elevation, ptd.LineNumber, ptd.EngDrawingNumber, ptd.SheetNumber, ptd.DrawingRev, ptd.Description, ptd.ActivityType, ptd.ActivitySubType, ptd.ClientMaterialSpec, ptd.PerformanceMaterialSpec, ptd.Size, ptd.System, ptd.Service, ptd.ComponentNumber, ptd.TakeOffQuantity, ptd.QuantityUnit, ptd.EstimatedHours, \nptd.WBS1, ptd.WBS2, ptd.WBS3, ptd.WBS4, ptd.WBS5, ptd.WBS6, ptd.WBS7, ptd.WBS8, ptd.WBS9, ptd.WBS10, ptd.Rev, ptd.TimeStamp,\n\nert.RFTInstalled,\nert.HydroInstalled,\nert.CTOInstalled,\n\nIF(ptd.ActivityType != 'D', (ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeTestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeRFTHoursPercent')),0) AS RFTHours,\nIF(ptd.ActivityType != 'D', (ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeTestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeHydroHoursPercent')),0) AS HydroHours,\nIF(ptd.ActivityType != 'D', (ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeTestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeCTOHoursPercent')),0) AS CTOHours,\n\nert.EarnedRFTHours AS EarnedRFTHours,\nert.EarnedHydroHours AS EarnedHydroHours,\nert.EarnedCTOHours AS EarnedCTOHours\n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT ptd.UID,\nCOALESCE(pteR.InstalledRFT, 0) AS RFTInstalled,\nCOALESCE(pteH.InstalledHydro, 0) AS HydroInstalled,\nCOALESCE(pteC.InstalledCTO, 0) AS CTOInstalled,\n\nCOALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeTestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * pteR.InstalledRFT, 0) AS EarnedRFTHours,\nCOALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeTestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeHydroHoursPercent') * pteH.InstalledHydro, 0) AS EarnedHydroHours,\nCOALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeTestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeCTOHoursPercent') * pteC.InstalledCTO, 0) AS EarnedCTOHours\n\n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT pte.ActivityType, pte.TestingTestPackageNumber, 1 AS InstalledRFT\n\t\t\tFROM PipeTesting pte\n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON pte.ActivityID = sas.ActivityID AND sas.fk_ActivityStatus IN (5,12)) pteR\n\tON pteR.TestingTestPackageNumber = ptd.TestPackageNumber AND pteR.ActivityType = 41 \n    \nLEFT JOIN (SELECT pte.ActivityType, pte.TestingTestPackageNumber, 1 AS InstalledHydro\n\t\t\tFROM PipeTesting pte\n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = pte.ActivityID AND sas.fk_ActivityStatus IN (5,12)) pteH\n\tON pteH.TestingTestPackageNumber = ptd.TestPackageNumber AND pteH.ActivityType = 42 \n    \nLEFT JOIN (SELECT pte.ActivityType, pte.TestingTestPackageNumber, 1 AS InstalledCTO\n\t\t\tFROM PipeTesting pte\n            JOIN SubmissionActivityStatus sas\n\t\t\t\tON sas.ActivityID = pte.ActivityID AND sas.fk_ActivityStatus IN (5,12)) pteC\n\tON pteC.TestingTestPackageNumber = ptd.TestPackageNumber AND pteC.ActivityType = 43 \n\nWHERE ptd.TestPackageNumber = :TestPackage\nAND ptd.ActivityType != \"D\"\n) ert\n\tON ert.UID = ptd.UID\n    \nWHERE ptd.TestPackageNumber = :TestPackage\nAND ptd.ActivityType != \"D\"\nORDER BY ptd.EngDrawingNumber, ptd.SheetNumber) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "7",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesByTestPackagePipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "UID",
        "fieldName" : "uid",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ProjectServicesRep",
        "fieldName" : "projectServicesRep",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WorkPackage",
        "fieldName" : "workPackage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "LineNumber",
        "fieldName" : "lineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DrawingRev",
        "fieldName" : "drawingRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivitySubType",
        "fieldName" : "activitySubType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientMaterialSpec",
        "fieldName" : "clientMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PerformanceMaterialSpec",
        "fieldName" : "performanceMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Size",
        "fieldName" : "size",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ComponentNumber",
        "fieldName" : "componentNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "RFTInstalled",
        "fieldName" : "rftinstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "HydroInstalled",
        "fieldName" : "hydroInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "CTOInstalled",
        "fieldName" : "ctoinstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "RFTHours",
        "fieldName" : "rfthours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HydroHours",
        "fieldName" : "hydroHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "CTOHours",
        "fieldName" : "ctohours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedRFTHours",
        "fieldName" : "earnedRfthours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedHydroHours",
        "fieldName" : "earnedHydroHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedCTOHours",
        "fieldName" : "earnedCtohours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesByTestPackageSteel" : {
    "name" : "GetBidActivityMatchesByTestPackageSteel",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "SELECT std.BidID, std.ProjectServicesRep, std.EWONumber, std.Scope, std.Phase, std.Stage, std.TestPackageNumber, std.WorkPackage, std.CostCode, std.P6ID, std.P6Description, std.Area, std.Location, std.Structure, std.CU, std.Elevation,   \nstd.SortGroup1, std.PieceMark, std.PieceMarkRev, std.Description, std.ActivityType, std.ClientMaterialSpec, std.PerformanceMaterialSpec, std.MaterialType, std.Length, std.Weight, std.System, std.Service,\nstd.TakeOffQuantity, std.WeldCount, std.SteelHours, std.WeldHours, \nstd.WBS1, std.WBS2, std.WBS3, std.WBS4, std.WBS5, std.WBS6, std.WBS7, std.WBS8, std.WBS9, std.WBS10,\n\n### Installed Quantities ###\nsum(COALESCE(stlsell.FAQuantity,0)) AS InstalledSell,\n\n### Remaining Quantities ###\n(COALESCE(std.TakeOffQuantity,0) - sum(COALESCE(stlsell.FAQuantity,0))) AS RemainingSell\n\nFROM (SELECT BidID, ProjectServicesRep, EWONumber, Scope, Phase, Stage, TestPackageNumber, WorkPackage, CostCode, P6ID, P6Description, Area, Location, Structure, CU, Elevation, SortGroup1,  PieceMark, PieceMarkRev, Description, ActivityType, ClientMaterialSpec, PerformanceMaterialSpec, MaterialType, Length, Weight, System, Service,\n\t\tsum(TakeOffQuantity) AS TakeOffQuantity, sum(WeldCount) AS WeldCount, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,\n        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\t\tFROM SteelTrackerDetails \n        WHERE TestPackageNumber = :TestPackage\n\t\tGROUP BY BidID) std\n\nLEFT JOIN SubmissionActivityStatus sas\n\tON sas.fk_BidIDAssigned = std.BidID AND sas.ActivityType = 65 AND sas.fk_ActivityStatus IN (5,12)\n    \nLEFT JOIN SteelFA stlsell\n\tON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n  \nGROUP BY BidID\nORDER BY std.SortGroup1, std.PieceMark",
    "countQueryString" : "select count(*) from (SELECT std.BidID, std.ProjectServicesRep, std.EWONumber, std.Scope, std.Phase, std.Stage, std.TestPackageNumber, std.WorkPackage, std.CostCode, std.P6ID, std.P6Description, std.Area, std.Location, std.Structure, std.CU, std.Elevation,   \nstd.SortGroup1, std.PieceMark, std.PieceMarkRev, std.Description, std.ActivityType, std.ClientMaterialSpec, std.PerformanceMaterialSpec, std.MaterialType, std.Length, std.Weight, std.System, std.Service,\nstd.TakeOffQuantity, std.WeldCount, std.SteelHours, std.WeldHours, \nstd.WBS1, std.WBS2, std.WBS3, std.WBS4, std.WBS5, std.WBS6, std.WBS7, std.WBS8, std.WBS9, std.WBS10,\n\n### Installed Quantities ###\nsum(COALESCE(stlsell.FAQuantity,0)) AS InstalledSell,\n\n### Remaining Quantities ###\n(COALESCE(std.TakeOffQuantity,0) - sum(COALESCE(stlsell.FAQuantity,0))) AS RemainingSell\n\nFROM (SELECT BidID, ProjectServicesRep, EWONumber, Scope, Phase, Stage, TestPackageNumber, WorkPackage, CostCode, P6ID, P6Description, Area, Location, Structure, CU, Elevation, SortGroup1,  PieceMark, PieceMarkRev, Description, ActivityType, ClientMaterialSpec, PerformanceMaterialSpec, MaterialType, Length, Weight, System, Service,\n\t\tsum(TakeOffQuantity) AS TakeOffQuantity, sum(WeldCount) AS WeldCount, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,\n        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n\t\tFROM SteelTrackerDetails \n        WHERE TestPackageNumber = :TestPackage\n\t\tGROUP BY BidID) std\n\nLEFT JOIN SubmissionActivityStatus sas\n\tON sas.fk_BidIDAssigned = std.BidID AND sas.ActivityType = 65 AND sas.fk_ActivityStatus IN (5,12)\n    \nLEFT JOIN SteelFA stlsell\n\tON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n  \nGROUP BY BidID\nORDER BY std.SortGroup1, std.PieceMark) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "7",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesByTestPackageSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ProjectServicesRep",
        "fieldName" : "projectServicesRep",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WorkPackage",
        "fieldName" : "workPackage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SortGroup1",
        "fieldName" : "sortGroup1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMark",
        "fieldName" : "pieceMark",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMarkRev",
        "fieldName" : "pieceMarkRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientMaterialSpec",
        "fieldName" : "clientMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PerformanceMaterialSpec",
        "fieldName" : "performanceMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MaterialType",
        "fieldName" : "materialType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Length",
        "fieldName" : "length",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "Weight",
        "fieldName" : "weight",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldCount",
        "fieldName" : "weldCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "SteelHours",
        "fieldName" : "steelHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldHours",
        "fieldName" : "weldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "InstalledSell",
        "fieldName" : "installedSell",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "RemainingSell",
        "fieldName" : "remainingSell",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesCivil" : {
    "name" : "GetBidActivityMatchesCivil",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM CivilTrackerDetails\nWHERE BidID = :BidID\nGROUP BY BidID",
    "countQueryString" : "select count(*) from (SELECT *\nFROM CivilTrackerDetails\nWHERE BidID = :BidID\nGROUP BY BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "UID",
        "fieldName" : "uid",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ProjectServicesRep",
        "fieldName" : "projectServicesRep",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WorkPackage",
        "fieldName" : "workPackage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SortGroup1",
        "fieldName" : "sortGroup1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SortGroup2",
        "fieldName" : "sortGroup2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SortGroup3",
        "fieldName" : "sortGroup3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DrawingRev",
        "fieldName" : "drawingRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DetailDrawingNumber",
        "fieldName" : "detailDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailRev",
        "fieldName" : "detailRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DetailName",
        "fieldName" : "detailName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivitySubType",
        "fieldName" : "activitySubType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesEquip" : {
    "name" : "GetBidActivityMatchesEquip",
    "description" : "Get all Equip Tracker Details that math the given FA",
    "version" : "V2",
    "queryString" : "SELECT *\nFROM EquipTrackerDetails\nWHERE BidID = :BidID",
    "countQueryString" : "select count(*) from (SELECT *\nFROM EquipTrackerDetails\nWHERE BidID = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "3",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesEquipResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "UID",
        "fieldName" : "uid",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ProjectServicesRep",
        "fieldName" : "projectServicesRep",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WorkPackage",
        "fieldName" : "workPackage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DrawingRev",
        "fieldName" : "drawingRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ComponentNumber",
        "fieldName" : "componentNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EquipmentType",
        "fieldName" : "equipmentType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientMaterialSpec",
        "fieldName" : "clientMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PerformanceMaterialSpec",
        "fieldName" : "performanceMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesPipe" : {
    "name" : "GetBidActivityMatchesPipe",
    "description" : "Get the Bid Activities that match the input parameters.",
    "version" : "V1",
    "queryString" : "SELECT ptd.*,\n\n(COALESCE(ptd.TakeOffQuantity,0)\n-COALESCE(er.InstalledFootage,0)\n-COALESCE(er.InstalledBoltUps,0)\n-COALESCE(er.InstalledWelds,0)\n-COALESCE(er.InstalledCuts,0)\n-COALESCE(er.InstalledTrim,0)\n-COALESCE(er.InstalledSupports,0)\n-COALESCE(er.InstalledMisc,0)\n-COALESCE(er.InstalledDemo,0)) AS RemainingQuantity\n\n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT  ptd.BidID,\n\t###Installed Quantities Calculations ###\n\t\tsum(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0)) AS InstalledFootage,\n\t\tsum(COALESCE(pcb.ConnectionQuantity,0) + COALESCE(pmcb.MiscQuantity,0)) AS InstalledBoltUps, \n\t\tsum(COALESCE(pw.WeldPercentCompleted * pw.WeldPercentCompleted,0) + COALESCE(pmw.MiscQuantity,0)) AS InstalledWelds,\n\t\tsum(COALESCE(pcs.ConnectionQuantity,0) + COALESCE(pmcs.MiscQuantity,0)) AS InstalledScrewJoints,\n\t\tsum(COALESCE(pco.ConnectionQuantity,0) + COALESCE(pmco.MiscQuantity,0)) AS InstalledOtherConnections,\n\t\tsum(COALESCE(pcut.FAQuantity * pcut.FAPercentCompleted,0) + COALESCE(pmcut.MiscQuantity,0)) AS InstalledCuts,\n\t\tsum(COALESCE(pt.FAQuantity * pt.FAPercentCompleted,0) + COALESCE(pmt.MiscQuantity,0)) AS InstalledTrim,\n\t\tsum(COALESCE(psu.FAQuantity * psu.FAPercentCompleted,0) + COALESCE(pmsu.MiscQuantity,0)) AS InstalledSupports,\n\t\tsum(COALESCE(pd.FAQuantity * pd.FAPercentCompleted,0) + COALESCE(pmd.MiscQuantity,0)) AS InstalledDemo,\n\t\tsum(COALESCE(pm.FAQuantity * pm.FAPercentCompleted,0) + COALESCE(pmm.MiscQuantity,0)) AS InstalledMisc\n\n\n\t\tFROM SubmissionActivityStatus sas\n\t\tJOIN PSA.REF_ActivityTypes at\n\t\t\tON at.ID = sas.ActivityType\n\t\t\t\n\t\tLEFT JOIN PipeErection pe\n\t\t\tON pe.ActivityID = sas.ActivityID AND pe.ErectionRework = 0\n\t\tLEFT JOIN PipeConnection pcb\n\t\t\tON pcb.ActivityID = sas.ActivityID AND sas.ActivityType = 21 AND pcb.ConnectionRework = 0\n\t\tLEFT JOIN PipeWeld pw\n\t\t\tON pw.ActivityID = sas.ActivityID AND sas.ActivityType = 22  AND  pw.WeldRework = 0\n\t\tLEFT JOIN PipeConnection pcs\n\t\t\tON pcs.ActivityID = sas.ActivityID AND sas.ActivityType = 24 AND pcs.ConnectionRework = 0\t \n\t\tLEFT JOIN PipeConnection pco\n\t\t\tON pco.ActivityID = sas.ActivityID AND sas.ActivityType = 25 AND pco.ConnectionRework = 0\t \n\t\tLEFT JOIN PipeFA pcut\n\t\t\tON pcut.ActivityID = sas.ActivityID AND sas.ActivityType = 23 AND pcut.FARework = 0\t\t\t\n\t\tLEFT JOIN PipeFA pt\n\t\t\tON pt.ActivityID = sas.ActivityID AND sas.ActivityType IN (31,32,33,39) AND pt.FARework = 0\t\t\t\n\t\tLEFT JOIN PipeFA psu\n\t\t\tON psu.ActivityID = sas.ActivityID AND sas.ActivityType = 38 AND psu.FARework = 0\t\t\t\n\t\tLEFT JOIN PipeFA pd\n\t\t\tON pd.ActivityID = sas.ActivityID AND sas.ActivityType IN (51,52,53,59)\t\t\n\t\tLEFT JOIN PipeFA pm\n\t\t\tON pm.ActivityID = sas.ActivityID AND sas.ActivityType = 90 AND pm.FARework = 0\t\t\t\n\t\tLEFT JOIN PipeTrackerDetails ptd\n\t\t\tON ptd.BidID = sas.fk_BidIDAssigned\n\t\t\t\n\t/* #### Begining of Misc activities assigned joins #### */\t\n\t\tLEFT JOIN PipeMisc pme\n\t\t\tON pme.ActivityID = sas.ActivityID AND ptd.ActivitySubType = \"PE\" AND pme.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmcb\n\t\t\tON pmcb.ActivityID = sas.ActivityID AND ptd.ActivitySubType = \"BU\" AND pmcb.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmw\n\t\t\tON pmw.ActivityID = sas.ActivityID AND ptd.ActivitySubType = \"W\" AND pmw.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmcs\n\t\t\tON pmcs.ActivityID = sas.ActivityID AND ptd.ActivitySubType = \"SCREW\" AND pmcs.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmco\n\t\t\tON pmco.ActivityID = sas.ActivityID AND ptd.ActivityType = \"C\" AND ptd.ActivitySubType = \"Other\" AND pmco.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmcut\n\t\t\tON pmcut.ActivityID = sas.ActivityID AND ptd.ActivityType = \"C\" AND ptd.ActivitySubType = \"CUT\" AND pmcut.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmt\n\t\t\tON pmt.ActivityID = sas.ActivityID AND ptd.ActivityType = \"T\" AND pmt.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmsu\n\t\t\tON pmsu.ActivityID = sas.ActivityID AND ptd.ActivitySubType = \"S\" AND pmsu.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmd\n\t\t\tON pmd.ActivityID = sas.ActivityID  AND ptd.ActivityType = \"D\" AND pmd.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmm\n\t\t\tON pmm.ActivityID = sas.ActivityID  AND ptd.ActivityType = \"MISC\" AND pmm.MiscRework = 0\n\n\t\tWHERE fk_ActivityStatus IN (5,12)\n\t\tGROUP BY ptd.BidID) er\n\tON er.BidID = ptd.BidID\nWHERE ptd.BidID = :BidID\nOR\n(LineNumber LIKE :LineNumber\nAND EngDrawingNumber LIKE :DrawingNumber\nAND SheetNumber LIKE :SheetNumber\nAND ActivityType LIKE :ActivityType\nAND ActivitySubType LIKE :ActivitySubType\n)",
    "countQueryString" : "select count(*) from (SELECT ptd.*,\n\n(COALESCE(ptd.TakeOffQuantity,0)\n-COALESCE(er.InstalledFootage,0)\n-COALESCE(er.InstalledBoltUps,0)\n-COALESCE(er.InstalledWelds,0)\n-COALESCE(er.InstalledCuts,0)\n-COALESCE(er.InstalledTrim,0)\n-COALESCE(er.InstalledSupports,0)\n-COALESCE(er.InstalledMisc,0)\n-COALESCE(er.InstalledDemo,0)) AS RemainingQuantity\n\n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT  ptd.BidID,\n\t###Installed Quantities Calculations ###\n\t\tsum(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0)) AS InstalledFootage,\n\t\tsum(COALESCE(pcb.ConnectionQuantity,0) + COALESCE(pmcb.MiscQuantity,0)) AS InstalledBoltUps, \n\t\tsum(COALESCE(pw.WeldPercentCompleted * pw.WeldPercentCompleted,0) + COALESCE(pmw.MiscQuantity,0)) AS InstalledWelds,\n\t\tsum(COALESCE(pcs.ConnectionQuantity,0) + COALESCE(pmcs.MiscQuantity,0)) AS InstalledScrewJoints,\n\t\tsum(COALESCE(pco.ConnectionQuantity,0) + COALESCE(pmco.MiscQuantity,0)) AS InstalledOtherConnections,\n\t\tsum(COALESCE(pcut.FAQuantity * pcut.FAPercentCompleted,0) + COALESCE(pmcut.MiscQuantity,0)) AS InstalledCuts,\n\t\tsum(COALESCE(pt.FAQuantity * pt.FAPercentCompleted,0) + COALESCE(pmt.MiscQuantity,0)) AS InstalledTrim,\n\t\tsum(COALESCE(psu.FAQuantity * psu.FAPercentCompleted,0) + COALESCE(pmsu.MiscQuantity,0)) AS InstalledSupports,\n\t\tsum(COALESCE(pd.FAQuantity * pd.FAPercentCompleted,0) + COALESCE(pmd.MiscQuantity,0)) AS InstalledDemo,\n\t\tsum(COALESCE(pm.FAQuantity * pm.FAPercentCompleted,0) + COALESCE(pmm.MiscQuantity,0)) AS InstalledMisc\n\n\n\t\tFROM SubmissionActivityStatus sas\n\t\tJOIN PSA.REF_ActivityTypes at\n\t\t\tON at.ID = sas.ActivityType\n\t\t\t\n\t\tLEFT JOIN PipeErection pe\n\t\t\tON pe.ActivityID = sas.ActivityID AND pe.ErectionRework = 0\n\t\tLEFT JOIN PipeConnection pcb\n\t\t\tON pcb.ActivityID = sas.ActivityID AND sas.ActivityType = 21 AND pcb.ConnectionRework = 0\n\t\tLEFT JOIN PipeWeld pw\n\t\t\tON pw.ActivityID = sas.ActivityID AND sas.ActivityType = 22  AND  pw.WeldRework = 0\n\t\tLEFT JOIN PipeConnection pcs\n\t\t\tON pcs.ActivityID = sas.ActivityID AND sas.ActivityType = 24 AND pcs.ConnectionRework = 0\t \n\t\tLEFT JOIN PipeConnection pco\n\t\t\tON pco.ActivityID = sas.ActivityID AND sas.ActivityType = 25 AND pco.ConnectionRework = 0\t \n\t\tLEFT JOIN PipeFA pcut\n\t\t\tON pcut.ActivityID = sas.ActivityID AND sas.ActivityType = 23 AND pcut.FARework = 0\t\t\t\n\t\tLEFT JOIN PipeFA pt\n\t\t\tON pt.ActivityID = sas.ActivityID AND sas.ActivityType IN (31,32,33,39) AND pt.FARework = 0\t\t\t\n\t\tLEFT JOIN PipeFA psu\n\t\t\tON psu.ActivityID = sas.ActivityID AND sas.ActivityType = 38 AND psu.FARework = 0\t\t\t\n\t\tLEFT JOIN PipeFA pd\n\t\t\tON pd.ActivityID = sas.ActivityID AND sas.ActivityType IN (51,52,53,59)\t\t\n\t\tLEFT JOIN PipeFA pm\n\t\t\tON pm.ActivityID = sas.ActivityID AND sas.ActivityType = 90 AND pm.FARework = 0\t\t\t\n\t\tLEFT JOIN PipeTrackerDetails ptd\n\t\t\tON ptd.BidID = sas.fk_BidIDAssigned\n\t\t\t\n\t/* #### Begining of Misc activities assigned joins #### */\t\n\t\tLEFT JOIN PipeMisc pme\n\t\t\tON pme.ActivityID = sas.ActivityID AND ptd.ActivitySubType = \"PE\" AND pme.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmcb\n\t\t\tON pmcb.ActivityID = sas.ActivityID AND ptd.ActivitySubType = \"BU\" AND pmcb.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmw\n\t\t\tON pmw.ActivityID = sas.ActivityID AND ptd.ActivitySubType = \"W\" AND pmw.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmcs\n\t\t\tON pmcs.ActivityID = sas.ActivityID AND ptd.ActivitySubType = \"SCREW\" AND pmcs.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmco\n\t\t\tON pmco.ActivityID = sas.ActivityID AND ptd.ActivityType = \"C\" AND ptd.ActivitySubType = \"Other\" AND pmco.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmcut\n\t\t\tON pmcut.ActivityID = sas.ActivityID AND ptd.ActivityType = \"C\" AND ptd.ActivitySubType = \"CUT\" AND pmcut.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmt\n\t\t\tON pmt.ActivityID = sas.ActivityID AND ptd.ActivityType = \"T\" AND pmt.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmsu\n\t\t\tON pmsu.ActivityID = sas.ActivityID AND ptd.ActivitySubType = \"S\" AND pmsu.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmd\n\t\t\tON pmd.ActivityID = sas.ActivityID  AND ptd.ActivityType = \"D\" AND pmd.MiscRework = 0\n\t\tLEFT JOIN PipeMisc pmm\n\t\t\tON pmm.ActivityID = sas.ActivityID  AND ptd.ActivityType = \"MISC\" AND pmm.MiscRework = 0\n\n\t\tWHERE fk_ActivityStatus IN (5,12)\n\t\tGROUP BY ptd.BidID) er\n\tON er.BidID = ptd.BidID\nWHERE ptd.BidID = :BidID\nOR\n(LineNumber LIKE :LineNumber\nAND EngDrawingNumber LIKE :DrawingNumber\nAND SheetNumber LIKE :SheetNumber\nAND ActivityType LIKE :ActivityType\nAND ActivitySubType LIKE :ActivitySubType\n)) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : null,
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ActivityType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ActivitySubType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesPipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "UID",
        "fieldName" : "uid",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ProjectServicesRep",
        "fieldName" : "projectServicesRep",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WorkPackage",
        "fieldName" : "workPackage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "LineNumber",
        "fieldName" : "lineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DrawingRev",
        "fieldName" : "drawingRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivitySubType",
        "fieldName" : "activitySubType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientMaterialSpec",
        "fieldName" : "clientMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PerformanceMaterialSpec",
        "fieldName" : "performanceMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Size",
        "fieldName" : "size",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ComponentNumber",
        "fieldName" : "componentNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "RemainingQuantity",
        "fieldName" : "remainingQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityMatchesSteel" : {
    "name" : "GetBidActivityMatchesSteel",
    "description" : "above",
    "version" : "V1",
    "queryString" : "SELECT std.*\nFROM SteelTrackerDetails std\nWHERE (std.BidID = :BidID AND ActivityType != 'E')\nOR \n(std.SortGroup1 LIKE :SortGroup1\nAND std.PieceMark LIKE :PieceMark\nAND std.ActivityType = 'E')\nORDER BY std.SortGroup1, std.PieceMark",
    "countQueryString" : "select count(*) from (SELECT std.*\nFROM SteelTrackerDetails std\nWHERE (std.BidID = :BidID AND ActivityType != 'E')\nOR \n(std.SortGroup1 LIKE :SortGroup1\nAND std.PieceMark LIKE :PieceMark\nAND std.ActivityType = 'E')\nORDER BY std.SortGroup1, std.PieceMark) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : null,
      "required" : false
    }, {
      "name" : "SortGroup1",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "PieceMark",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityMatchesSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "UID",
        "fieldName" : "uid",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ProjectServicesRep",
        "fieldName" : "projectServicesRep",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EWONumber",
        "fieldName" : "ewonumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Scope",
        "fieldName" : "scope",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Phase",
        "fieldName" : "phase",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Stage",
        "fieldName" : "stage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WorkPackage",
        "fieldName" : "workPackage",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CostCode",
        "fieldName" : "costCode",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6ID",
        "fieldName" : "p6id",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "P6Description",
        "fieldName" : "p6description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "AssignedContractor",
        "fieldName" : "assignedContractor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Location",
        "fieldName" : "location",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Structure",
        "fieldName" : "structure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CU",
        "fieldName" : "cu",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Elevation",
        "fieldName" : "elevation",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SortGroup1",
        "fieldName" : "sortGroup1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMark",
        "fieldName" : "pieceMark",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMarkRev",
        "fieldName" : "pieceMarkRev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ClientMaterialSpec",
        "fieldName" : "clientMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PerformanceMaterialSpec",
        "fieldName" : "performanceMaterialSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "MaterialType",
        "fieldName" : "materialType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Length",
        "fieldName" : "length",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "Weight",
        "fieldName" : "weight",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "System",
        "fieldName" : "system",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Service",
        "fieldName" : "service",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "WeldCount",
        "fieldName" : "weldCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "SteelHours",
        "fieldName" : "steelHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldHours",
        "fieldName" : "weldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WBS1",
        "fieldName" : "wbs1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS2",
        "fieldName" : "wbs2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS3",
        "fieldName" : "wbs3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS4",
        "fieldName" : "wbs4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS5",
        "fieldName" : "wbs5",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS6",
        "fieldName" : "wbs6",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS7",
        "fieldName" : "wbs7",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS8",
        "fieldName" : "wbs8",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS9",
        "fieldName" : "wbs9",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WBS10",
        "fieldName" : "wbs10",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rev",
        "fieldName" : "rev",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityQuantitesEquip" : {
    "name" : "GetBidActivityQuantitesEquip",
    "description" : "name",
    "version" : "V2",
    "queryString" : "SELECT etd.BidID, etd.TakeOffQuantity, etd.QuantityUnit,\netd.EstimatedHours AS FAHours,\nCOALESCE(er.InstalledPercent,0) AS InstalledPercent\n\nFROM EquipTrackerDetails etd\nLEFT JOIN (SELECT sas.fk_BidIDAssigned AS BidID,\n\t\t\tsum(efa.FAPercentCompleted) AS InstalledPercent\n            FROM SubmissionActivityStatus sas\n            JOIN EquipFA efa\n\t\t\t\tON efa.ActivityID = sas.ActivityID\n\t\t\tWHERE sas.fk_BidIDAssigned = :BidID\n            AND sas.fk_ActivityStatus IN(5,12)\n            GROUP BY sas.fk_BidIDAssigned\n\t\t\t)er\n\tON er.BidID = etd.BidID\n\nWHERE etd.BidID = :BidID",
    "countQueryString" : "select count(*) from (SELECT etd.BidID, etd.TakeOffQuantity, etd.QuantityUnit,\netd.EstimatedHours AS FAHours,\nCOALESCE(er.InstalledPercent,0) AS InstalledPercent\n\nFROM EquipTrackerDetails etd\nLEFT JOIN (SELECT sas.fk_BidIDAssigned AS BidID,\n\t\t\tsum(efa.FAPercentCompleted) AS InstalledPercent\n            FROM SubmissionActivityStatus sas\n            JOIN EquipFA efa\n\t\t\t\tON efa.ActivityID = sas.ActivityID\n\t\t\tWHERE sas.fk_BidIDAssigned = :BidID\n            AND sas.fk_ActivityStatus IN(5,12)\n            GROUP BY sas.fk_BidIDAssigned\n\t\t\t)er\n\tON er.BidID = etd.BidID\n\nWHERE etd.BidID = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityQuantitesEquipResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAHours",
        "fieldName" : "fahours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledPercent",
        "fieldName" : "installedPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityQuantitiesCivil" : {
    "name" : "GetBidActivityQuantitiesCivil",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT ctd.BidID, ctd.TakeOffQuantity, ctd.QuantityUnit,\n(COALESCE(ctd.EstimatedHours, 0) * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent')) AS FAHours,\nCOALESCE(er.InstalledQuantity,0) AS InstalledQuantity,\nCOALESCE(er.InstalledPercent,0) AS InstalledPercent\n\nFROM CivilTrackerDetails ctd\nLEFT JOIN (SELECT ctd.BidID,\n        SUM(COALESCE(IF(sas.ActivityType IN (70),\n\t\t/* TRUE */ \n\t\tCOALESCE(cfa.FAPercentCompleted,0)  * ctd.TakeOffQuantity, \n\t\t/* FALSE */\n\t\tcfa.FAQuantity\n\t\t),0)) AS InstalledQuantity,\n\t\tSUM(COALESCE(cfa.FAPercentCompleted,0)) AS InstalledPercent\n        \n\t\tFROM SubmissionActivityStatus sas\n\t\tJOIN CivilTrackerDetails ctd\n\t\t    ON ctd.BidID = sas.fk_BidIDAssigned\n\t\tJOIN CivilFA cfa\n\t\t\tON cfa.ActivityID = sas.ActivityID AND cfa.FARework = 0\n\t\tWHERE sas.fk_BidIDAssigned = :BidID\n\t\tAND sas.fk_ActivityStatus IN(5,12)\n        GROUP BY ctd.BidID\n        )er\n\tON er.BidID = ctd.BidID\nWHERE ctd.BidID = :BidID",
    "countQueryString" : "select count(*) from (SELECT ctd.BidID, ctd.TakeOffQuantity, ctd.QuantityUnit,\n(COALESCE(ctd.EstimatedHours, 0) * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent')) AS FAHours,\nCOALESCE(er.InstalledQuantity,0) AS InstalledQuantity,\nCOALESCE(er.InstalledPercent,0) AS InstalledPercent\n\nFROM CivilTrackerDetails ctd\nLEFT JOIN (SELECT ctd.BidID,\n        SUM(COALESCE(IF(sas.ActivityType IN (70),\n\t\t/* TRUE */ \n\t\tCOALESCE(cfa.FAPercentCompleted,0)  * ctd.TakeOffQuantity, \n\t\t/* FALSE */\n\t\tcfa.FAQuantity\n\t\t),0)) AS InstalledQuantity,\n\t\tSUM(COALESCE(cfa.FAPercentCompleted,0)) AS InstalledPercent\n        \n\t\tFROM SubmissionActivityStatus sas\n\t\tJOIN CivilTrackerDetails ctd\n\t\t    ON ctd.BidID = sas.fk_BidIDAssigned\n\t\tJOIN CivilFA cfa\n\t\t\tON cfa.ActivityID = sas.ActivityID AND cfa.FARework = 0\n\t\tWHERE sas.fk_BidIDAssigned = :BidID\n\t\tAND sas.fk_ActivityStatus IN(5,12)\n        GROUP BY ctd.BidID\n        )er\n\tON er.BidID = ctd.BidID\nWHERE ctd.BidID = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityQuantitiesCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FAHours",
        "fieldName" : "fahours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledQuantity",
        "fieldName" : "installedQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledPercent",
        "fieldName" : "installedPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityQuantitiesPipe" : {
    "name" : "GetBidActivityQuantitiesPipe",
    "description" : "Gets the Bid estimate Quantity of a specified BidID",
    "version" : "V1",
    "queryString" : "SELECT ptd.TakeOffQuantity, \nptd.QuantityUnit, \n\nIF(ptd.ActivityType = 'D', \n/*TURE*/\nptd.EstimatedHours, \n/*FALSE*/\nCOALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeMechHoursPercent'),0) \n)AS EstimatedHours\n\nFROM PipeTrackerDetails ptd\nWHERE BidID = :BidID",
    "countQueryString" : "select count(*) from (SELECT ptd.TakeOffQuantity, \nptd.QuantityUnit, \n\nIF(ptd.ActivityType = 'D', \n/*TURE*/\nptd.EstimatedHours, \n/*FALSE*/\nCOALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'PipeMechHoursPercent'),0) \n)AS EstimatedHours\n\nFROM PipeTrackerDetails ptd\nWHERE BidID = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityQuantitiesPipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "TakeOffQuantity",
        "fieldName" : "takeOffQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "QuantityUnit",
        "fieldName" : "quantityUnit",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EstimatedHours",
        "fieldName" : "estimatedHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidActivityQuantitiesSteel" : {
    "name" : "GetBidActivityQuantitiesSteel",
    "description" : "Get Steel Quantities for Activity Assign Dialog",
    "version" : "V1",
    "queryString" : "SELECT std.BidID,\n### Quantities ###\n(std.TakeOffQuantity) AS SteelQuantity,\n(std.WeldCount) AS WeldQuantity,  \n\n### Hours ###\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent'),0)) AS ShakeHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent'),0)) AS ErectHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent'),0)) AS BoltoutHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent'),0)) AS ImpHours,\n(COALESCE(std.WeldHours,0)) AS WeldHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent'),0)) AS SellHours,\n(COALESCE(IF(std.ActivityType = 'D', std.SteelHours, 0),0)) AS DemoHours,\n(COALESCE(IF(std.ActivityType = 'MISC', std.SteelHours, 0),0)) AS MiscHours,\n\n### Installed Quantities ###\nsum(COALESCE(er.InstalledShake,0)) AS InstalledShake,\nsum(COALESCE(er.InstalledErect,0)) AS InstalledErect,\nsum(COALESCE(er.InstalledBoltout,0)) AS InstalledBoltout,\nsum(COALESCE(er.InstalledImp,0)) AS InstalledImp,\nsum(COALESCE(er.InstalledWeld,0)) AS InstalledWeld,\nsum(COALESCE(er.InstalledSell,0)) AS InstalledSell,\nsum(COALESCE(er.InstalledDemo * std.TakeOffQuantity,0)) AS InstalledDemo,\nsum(COALESCE(er.InstalledMisc * std.TakeOffQuantity,0)) AS InstalledMisc\n\nFROM SteelTrackerDetails std\n\nLEFT JOIN(SELECT sas.fk_BidIDAssigned AS BidID,\n\t\tCOALESCE(stls.FAQuantity,0) AS InstalledShake,\n\t\tCOALESCE(stle.FAQuantity * stle.FAPercentCompleted,0) AS InstalledErect,\n\t\tCOALESCE(stlb.FAQuantity * stlb.FAPercentCompleted,0) AS InstalledBoltout,\n\t\tCOALESCE(stli.FAQuantity * stli.FAPercentCompleted,0) AS InstalledImp,\n\t\tCOALESCE(stlw.FAQuantity * stlw.FAPercentCompleted,0) AS InstalledWeld,\n\t\tCOALESCE(stlsell.FAQuantity * stlsell.FAPercentCompleted,0) AS InstalledSell,\n\t\tCOALESCE(stld.DemoPercentCompleted,0) AS InstalledDemo,\n\t\tCOALESCE(stlm.MiscPercentCompleted,0) AS InstalledMisc\n\n\t\tFROM SubmissionActivityStatus sas\n        \n    \tLEFT JOIN SteelFA stls\n    \t\tON stls.ActivityID = sas.ActivityID AND sas.ActivityType = 61 AND stls.FARework = 0\n    \tLEFT JOIN SteelFA stle\n    \t\tON stle.ActivityID = sas.ActivityID AND sas.ActivityType = 62 AND stle.FARework = 0\n    \tLEFT JOIN SteelFA stlb\n    \t\tON stlb.ActivityID = sas.ActivityID AND sas.ActivityType = 63 AND stlb.FARework = 0\n    \tLEFT JOIN SteelFA stli\n    \t\tON stli.ActivityID = sas.ActivityID AND sas.ActivityType = 64 AND stli.FARework = 0\n    \tLEFT JOIN SteelFA stlw\n    \t\tON stlw.ActivityID = sas.ActivityID AND sas.ActivityType = 68 AND stlw.FARework = 0\n    \tLEFT JOIN SteelFA stlsell\n    \t\tON stlsell.ActivityID = sas.ActivityID AND sas.ActivityType = 65 AND stlsell.FARework = 0\n    \tLEFT JOIN SteelDemo stld\n    \t\tON stld.ActivityID = sas.ActivityID\n    \tLEFT JOIN SteelMisc stlm\n    \t\tON stlm.ActivityID = sas.ActivityID AND stlm.MiscRework = 0\n\t\t\n        WHERE sas.ActivityType IN (60,61,62,63,64,65,66,67,68,96)\n        AND sas.fk_ActivityStatus IN (5,12)\n\t\t) er\n\tON er.BidID = std.BidID\nWHERE std.BidID = :BidID\nGROUP BY BidID",
    "countQueryString" : "select count(*) from (SELECT std.BidID,\n### Quantities ###\n(std.TakeOffQuantity) AS SteelQuantity,\n(std.WeldCount) AS WeldQuantity,  \n\n### Hours ###\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent'),0)) AS ShakeHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent'),0)) AS ErectHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent'),0)) AS BoltoutHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent'),0)) AS ImpHours,\n(COALESCE(std.WeldHours,0)) AS WeldHours,\n(COALESCE(std.SteelHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent'),0)) AS SellHours,\n(COALESCE(IF(std.ActivityType = 'D', std.SteelHours, 0),0)) AS DemoHours,\n(COALESCE(IF(std.ActivityType = 'MISC', std.SteelHours, 0),0)) AS MiscHours,\n\n### Installed Quantities ###\nsum(COALESCE(er.InstalledShake,0)) AS InstalledShake,\nsum(COALESCE(er.InstalledErect,0)) AS InstalledErect,\nsum(COALESCE(er.InstalledBoltout,0)) AS InstalledBoltout,\nsum(COALESCE(er.InstalledImp,0)) AS InstalledImp,\nsum(COALESCE(er.InstalledWeld,0)) AS InstalledWeld,\nsum(COALESCE(er.InstalledSell,0)) AS InstalledSell,\nsum(COALESCE(er.InstalledDemo * std.TakeOffQuantity,0)) AS InstalledDemo,\nsum(COALESCE(er.InstalledMisc * std.TakeOffQuantity,0)) AS InstalledMisc\n\nFROM SteelTrackerDetails std\n\nLEFT JOIN(SELECT sas.fk_BidIDAssigned AS BidID,\n\t\tCOALESCE(stls.FAQuantity,0) AS InstalledShake,\n\t\tCOALESCE(stle.FAQuantity * stle.FAPercentCompleted,0) AS InstalledErect,\n\t\tCOALESCE(stlb.FAQuantity * stlb.FAPercentCompleted,0) AS InstalledBoltout,\n\t\tCOALESCE(stli.FAQuantity * stli.FAPercentCompleted,0) AS InstalledImp,\n\t\tCOALESCE(stlw.FAQuantity * stlw.FAPercentCompleted,0) AS InstalledWeld,\n\t\tCOALESCE(stlsell.FAQuantity * stlsell.FAPercentCompleted,0) AS InstalledSell,\n\t\tCOALESCE(stld.DemoPercentCompleted,0) AS InstalledDemo,\n\t\tCOALESCE(stlm.MiscPercentCompleted,0) AS InstalledMisc\n\n\t\tFROM SubmissionActivityStatus sas\n        \n    \tLEFT JOIN SteelFA stls\n    \t\tON stls.ActivityID = sas.ActivityID AND sas.ActivityType = 61 AND stls.FARework = 0\n    \tLEFT JOIN SteelFA stle\n    \t\tON stle.ActivityID = sas.ActivityID AND sas.ActivityType = 62 AND stle.FARework = 0\n    \tLEFT JOIN SteelFA stlb\n    \t\tON stlb.ActivityID = sas.ActivityID AND sas.ActivityType = 63 AND stlb.FARework = 0\n    \tLEFT JOIN SteelFA stli\n    \t\tON stli.ActivityID = sas.ActivityID AND sas.ActivityType = 64 AND stli.FARework = 0\n    \tLEFT JOIN SteelFA stlw\n    \t\tON stlw.ActivityID = sas.ActivityID AND sas.ActivityType = 68 AND stlw.FARework = 0\n    \tLEFT JOIN SteelFA stlsell\n    \t\tON stlsell.ActivityID = sas.ActivityID AND sas.ActivityType = 65 AND stlsell.FARework = 0\n    \tLEFT JOIN SteelDemo stld\n    \t\tON stld.ActivityID = sas.ActivityID\n    \tLEFT JOIN SteelMisc stlm\n    \t\tON stlm.ActivityID = sas.ActivityID AND stlm.MiscRework = 0\n\t\t\n        WHERE sas.ActivityType IN (60,61,62,63,64,65,66,67,68,96)\n        AND sas.fk_ActivityStatus IN (5,12)\n\t\t) er\n\tON er.BidID = std.BidID\nWHERE std.BidID = :BidID\nGROUP BY BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "10",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidActivityQuantitiesSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "SteelQuantity",
        "fieldName" : "steelQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "WeldQuantity",
        "fieldName" : "weldQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ShakeHours",
        "fieldName" : "shakeHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ErectHours",
        "fieldName" : "erectHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "BoltoutHours",
        "fieldName" : "boltoutHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ImpHours",
        "fieldName" : "impHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldHours",
        "fieldName" : "weldHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellHours",
        "fieldName" : "sellHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "DemoHours",
        "fieldName" : "demoHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "MiscHours",
        "fieldName" : "miscHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledShake",
        "fieldName" : "installedShake",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "InstalledErect",
        "fieldName" : "installedErect",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledBoltout",
        "fieldName" : "installedBoltout",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledImp",
        "fieldName" : "installedImp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledWeld",
        "fieldName" : "installedWeld",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledSell",
        "fieldName" : "installedSell",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledDemo",
        "fieldName" : "installedDemo",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "InstalledMisc",
        "fieldName" : "installedMisc",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistoryCivil" : {
    "name" : "GetBidWorkHistoryCivil",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\n### Quantities Installed ###\nCOALESCE(cfa.FAQuantity,0) AS Quantity,\n\n(COALESCE(cfa.FAPercentCompleted,0)  * 100) AS PercentClaimed,\n\nCOALESCE(cfa.FANotes, '') AS Notes,\ncfa.FARework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n        \n\n#### Assigned Activities Joins #####    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID\nJOIN CivilTrackerDetails ctd\n\tON ctd.BidID = sas.fk_BidIDAssigned\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID",
    "countQueryString" : "select count(*) from (SELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\n### Quantities Installed ###\nCOALESCE(cfa.FAQuantity,0) AS Quantity,\n\n(COALESCE(cfa.FAPercentCompleted,0)  * 100) AS PercentClaimed,\n\nCOALESCE(cfa.FANotes, '') AS Notes,\ncfa.FARework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n        \n\n#### Assigned Activities Joins #####    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID\nJOIN CivilTrackerDetails ctd\n\tON ctd.BidID = sas.fk_BidIDAssigned\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1513",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistoryCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "PercentClaimed",
        "fieldName" : "percentClaimed",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "FARework",
        "fieldName" : "farework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistoryEquip" : {
    "name" : "GetBidWorkHistoryEquip",
    "description" : "name",
    "version" : "V2",
    "queryString" : "SELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\n### Quantities Installed ###\nsum(COALESCE(efa.FAQuantity,0)) AS Quantity,\n\n(COALESCE(efa.FAPercentCompleted,0) * 100) AS PercentClaimed,\n\nCOALESCE(efa.FANotes, '') AS Notes,\nefa.FARework AS Rework\n\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n        \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2 \n\n#### Assigned Activities Joins #####    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID\n\nLEFT JOIN EquipTrackerDetails etd\n\tON etd.BidID = sas.fk_BidIDAssigned\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID",
    "countQueryString" : "select count(*) from (SELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\n### Quantities Installed ###\nsum(COALESCE(efa.FAQuantity,0)) AS Quantity,\n\n(COALESCE(efa.FAPercentCompleted,0) * 100) AS PercentClaimed,\n\nCOALESCE(efa.FANotes, '') AS Notes,\nefa.FARework AS Rework\n\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n        \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2 \n\n#### Assigned Activities Joins #####    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID\n\nLEFT JOIN EquipTrackerDetails etd\n\tON etd.BidID = sas.fk_BidIDAssigned\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistoryEquipResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "PercentClaimed",
        "fieldName" : "percentClaimed",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistoryPipe" : {
    "name" : "GetBidWorkHistoryPipe",
    "description" : "Get all activities assigned/ earning hours against bid ID",
    "version" : "V1",
    "queryString" : "SELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \n \n(COALESCE(pe.ErectionLengthSpool1, 0) + \nCOALESCE(pe.ErectionLengthSpool2, 0) + \nCOALESCE(pe.ErectionLengthSpool3, 0) + \nCOALESCE(pe.ErectionLengthSpool4, 0) + \nCOALESCE(pe.ErectionLengthSpool5, 0) + \nCOALESCE(pe.ErectionLengthSpool6, 0)\n) AS Quantity,\npe.ErectionNotes AS Notes,\npe.ErectionRework AS Rework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####     \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PipeErection pe\n\tON pe.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = 7\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.SubmissionID, sas.ActivityID, at.ActivityType,  \n \npc.ConnectionQuantity AS Quantity,\npc.ConnectionNotes AS Notes,\npc.ConnectionRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n \n #### Assigned Activities Joins ##### \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PipeConnection pc\n\tON pc.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = 7\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.SubmissionID, sas.ActivityID, at.ActivityType,  \n \nCOALESCE(pw.WeldPercentCompleted,0) AS Quantity,\npw.WeldNotes AS Notes,\npw.WeldRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n    \n#### Assigned Activities Joins ##### \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = 7\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\n\nUNION ALL\n\n\nSELECT sas.SubmissionID, sas.ActivityID, at.ActivityType,  \n \n(fa.FAQuantity * fa.FAPercentCompleted) AS Quantity,\nfa.FANotes AS Notes,  \nfa.FARework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType   \nJOIN PipeFA fa\n\tON fa.ActivityID = sas.ActivityID \n\t\nWHERE sas.fk_BidIDAssigned = 7\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \n \n1 AS Quantity,\npt.TestingNotes AS Notes,\npt.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime \n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType     \nJOIN PipeTesting pt\n\tON pt.ActivityID = sas.ActivityID AND sas.ActivityType = 41\nJOIN PipeTrackerDetails ptd\n\tON ptd.TestPackageNumber = pt.TestingTestPackageNumber & ptd.BidID = :BidID\n    \nWHERE sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\n\n\nUNION ALL\n\n\nSELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \n \n1 AS Quantity,\npt.TestingNotes AS Notes,\npt.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime \n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType     \nJOIN PipeTesting pt\n\tON pt.ActivityID = sas.ActivityID AND sas.ActivityType = 42\nJOIN PipeTrackerDetails ptd\n\tON ptd.TestPackageNumber = pt.TestingTestPackageNumber & ptd.BidID = :BidID\n    \nWHERE sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \n \n1 AS Quantity,\npt.TestingNotes AS Notes,\npt.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime \n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType     \nJOIN PipeTesting pt\n\tON pt.ActivityID = sas.ActivityID AND sas.ActivityType = 43\nJOIN PipeTrackerDetails ptd\n\tON ptd.TestPackageNumber = pt.TestingTestPackageNumber & ptd.BidID = :BidID\n    \nWHERE sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID",
    "countQueryString" : "select count(*) from (SELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \n \n(COALESCE(pe.ErectionLengthSpool1, 0) + \nCOALESCE(pe.ErectionLengthSpool2, 0) + \nCOALESCE(pe.ErectionLengthSpool3, 0) + \nCOALESCE(pe.ErectionLengthSpool4, 0) + \nCOALESCE(pe.ErectionLengthSpool5, 0) + \nCOALESCE(pe.ErectionLengthSpool6, 0)\n) AS Quantity,\npe.ErectionNotes AS Notes,\npe.ErectionRework AS Rework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####     \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PipeErection pe\n\tON pe.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = 7\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.SubmissionID, sas.ActivityID, at.ActivityType,  \n \npc.ConnectionQuantity AS Quantity,\npc.ConnectionNotes AS Notes,\npc.ConnectionRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n \n #### Assigned Activities Joins ##### \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PipeConnection pc\n\tON pc.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = 7\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.SubmissionID, sas.ActivityID, at.ActivityType,  \n \nCOALESCE(pw.WeldPercentCompleted,0) AS Quantity,\npw.WeldNotes AS Notes,\npw.WeldRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n    \n#### Assigned Activities Joins ##### \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID\n\t\nWHERE sas.fk_BidIDAssigned = 7\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\n\nUNION ALL\n\n\nSELECT sas.SubmissionID, sas.ActivityID, at.ActivityType,  \n \n(fa.FAQuantity * fa.FAPercentCompleted) AS Quantity,\nfa.FANotes AS Notes,  \nfa.FARework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nleft JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nleft JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType   \nJOIN PipeFA fa\n\tON fa.ActivityID = sas.ActivityID \n\t\nWHERE sas.fk_BidIDAssigned = 7\nAND sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \n \n1 AS Quantity,\npt.TestingNotes AS Notes,\npt.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime \n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType     \nJOIN PipeTesting pt\n\tON pt.ActivityID = sas.ActivityID AND sas.ActivityType = 41\nJOIN PipeTrackerDetails ptd\n\tON ptd.TestPackageNumber = pt.TestingTestPackageNumber & ptd.BidID = :BidID\n    \nWHERE sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\n\n\nUNION ALL\n\n\nSELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \n \n1 AS Quantity,\npt.TestingNotes AS Notes,\npt.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime \n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType     \nJOIN PipeTesting pt\n\tON pt.ActivityID = sas.ActivityID AND sas.ActivityType = 42\nJOIN PipeTrackerDetails ptd\n\tON ptd.TestPackageNumber = pt.TestingTestPackageNumber & ptd.BidID = :BidID\n    \nWHERE sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID\n\n\nUNION ALL\n\n\nSELECT sas.SubmissionID, sas.ActivityID, at.ActivityType, \n \n1 AS Quantity,\npt.TestingNotes AS Notes,\npt.TestingRework,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, max(sasr.TimeStamp) AS ReviewedTime \n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n    \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType     \nJOIN PipeTesting pt\n\tON pt.ActivityID = sas.ActivityID AND sas.ActivityType = 43\nJOIN PipeTrackerDetails ptd\n\tON ptd.TestPackageNumber = pt.TestingTestPackageNumber & ptd.BidID = :BidID\n    \nWHERE sas.fk_ActivityStatus IN (5,12)\n\nGROUP BY sas.ActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistoryPipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistorySteel" : {
    "name" : "GetBidWorkHistorySteel",
    "description" : "Get all Field activities assigned to the given BidID, Grouped by Submission ID",
    "version" : "V1",
    "queryString" : "SELECT sas.SubmissionID, \n\nsum(COALESCE(stls.FAQuantity,0)) AS ShakeQuantity,\nsum(COALESCE(stle.FAQuantity,0)) AS ErectQuantity,\nsum(COALESCE(stle.FAPercentCompleted,0)) AS ErectPercent,\nsum(COALESCE(stlb.FAQuantity,0)) AS BoltoutQuantity,\nsum(COALESCE(stlb.FAPercentCompleted,0)) AS BoltoutPercent,\nsum(COALESCE(stli.FAQuantity,0)) AS ImpQuantity,\nsum(COALESCE(stli.FAPercentCompleted,0)) AS ImpPercent,\nsum(COALESCE(stlw.FAQuantity,0)) AS WeldQuantity,\nsum(COALESCE(stlw.FAPercentCompleted,0)) AS WeldPercent,\nsum(COALESCE(stlsell.FAQuantity,0)) AS SellQuantity,\nsum(COALESCE(stld.DemoPercentCompleted * std.TakeOffQuantity,0)) AS DemoQuantity,\nsum(COALESCE(stlm.MiscPercentCompleted * std.TakeOffQuantity,0)) AS MiscQuantity,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n        \n#### Assigned Activities Joins #####    \nLEFT JOIN SteelFA stls\n\tON stls.ActivityID = sas.ActivityID\nLEFT JOIN SteelFA stle\n\tON stle.ActivityID = sas.ActivityID\nLEFT JOIN SteelFA stlb\n\tON stlb.ActivityID = sas.ActivityID\nLEFT JOIN SteelFA stli\n\tON stli.ActivityID = sas.ActivityID\nLEFT JOIN SteelFA stlw\n\tON stlw.ActivityID = sas.ActivityID\nLEFT JOIN SteelFA stlsell\n\tON stlsell.ActivityID = sas.ActivityID\nLEFT JOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nLEFT JOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\n\nLEFT JOIN SteelTrackerDetails std\n    ON std.BidID = sas.fk_BidIDAssigned\n\n\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.ActivityType IN (61,62,63,64,65,67,68,96)\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.SubmissionID",
    "countQueryString" : "select count(*) from (SELECT sas.SubmissionID, \n\nsum(COALESCE(stls.FAQuantity,0)) AS ShakeQuantity,\nsum(COALESCE(stle.FAQuantity,0)) AS ErectQuantity,\nsum(COALESCE(stle.FAPercentCompleted,0)) AS ErectPercent,\nsum(COALESCE(stlb.FAQuantity,0)) AS BoltoutQuantity,\nsum(COALESCE(stlb.FAPercentCompleted,0)) AS BoltoutPercent,\nsum(COALESCE(stli.FAQuantity,0)) AS ImpQuantity,\nsum(COALESCE(stli.FAPercentCompleted,0)) AS ImpPercent,\nsum(COALESCE(stlw.FAQuantity,0)) AS WeldQuantity,\nsum(COALESCE(stlw.FAPercentCompleted,0)) AS WeldPercent,\nsum(COALESCE(stlsell.FAQuantity,0)) AS SellQuantity,\nsum(COALESCE(stld.DemoPercentCompleted * std.TakeOffQuantity,0)) AS DemoQuantity,\nsum(COALESCE(stlm.MiscPercentCompleted * std.TakeOffQuantity,0)) AS MiscQuantity,\n\nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n        \n#### Assigned Activities Joins #####    \nLEFT JOIN SteelFA stls\n\tON stls.ActivityID = sas.ActivityID\nLEFT JOIN SteelFA stle\n\tON stle.ActivityID = sas.ActivityID\nLEFT JOIN SteelFA stlb\n\tON stlb.ActivityID = sas.ActivityID\nLEFT JOIN SteelFA stli\n\tON stli.ActivityID = sas.ActivityID\nLEFT JOIN SteelFA stlw\n\tON stlw.ActivityID = sas.ActivityID\nLEFT JOIN SteelFA stlsell\n\tON stlsell.ActivityID = sas.ActivityID\nLEFT JOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nLEFT JOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\n\nLEFT JOIN SteelTrackerDetails std\n    ON std.BidID = sas.fk_BidIDAssigned\n\n\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.ActivityType IN (61,62,63,64,65,67,68,96)\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.SubmissionID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistorySteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ShakeQuantity",
        "fieldName" : "shakeQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ErectQuantity",
        "fieldName" : "erectQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ErectPercent",
        "fieldName" : "erectPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "BoltoutQuantity",
        "fieldName" : "boltoutQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "BoltoutPercent",
        "fieldName" : "boltoutPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ImpQuantity",
        "fieldName" : "impQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ImpPercent",
        "fieldName" : "impPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldQuantity",
        "fieldName" : "weldQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "WeldPercent",
        "fieldName" : "weldPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellQuantity",
        "fieldName" : "sellQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "DemoQuantity",
        "fieldName" : "demoQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "MiscQuantity",
        "fieldName" : "miscQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetBidWorkHistorySteelExpanded" : {
    "name" : "GetBidWorkHistorySteelExpanded",
    "description" : "Gets the Bid Work History, with each Field activity having its own row.  Of the given SubID",
    "version" : "V1",
    "queryString" : "SELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\nat.ActivityType AS ActivityTypeName,\nCOALESCE(stlfa.FAQuantity,0) AS Quantity, \n1.00 AS Percent,\nstlfa.FANotes AS Notes,\nstlfa.FARework AS Rework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n        \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID AND stlfa.ActivityType = 61\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID,  \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlfa.FAQuantity,0) AS ErectQuantity,\nCOALESCE(stlfa.FAPercentCompleted,0) AS ErectPercent,\nstlfa.FANotes,\nstlfa.FARework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID AND stlfa.ActivityType = 62\n\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlfa.FAQuantity,0) AS BoltoutQuantity,\nCOALESCE(stlfa.FAPercentCompleted,0) AS BoltoutPercent, \nstlfa.FANotes,\nstlfa.FARework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID AND stlfa.ActivityType = 63\n \n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlfa.FAQuantity,0) AS ImpQuantity,\nCOALESCE(stlfa.FAPercentCompleted,0) AS ImpPercent, \nstlfa.FANotes,\nstlfa.FARework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID AND stlfa.ActivityType = 64\n \n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID,  \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlfa.FAQuantity,0) AS WeldQuantity,\nCOALESCE(stlfa.FAPercentCompleted,0) AS WeldPercent,\nstlfa.FANotes,\nstlfa.FARework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID AND stlfa.ActivityType = 68\n \nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlfa.FAQuantity,0) AS SellQuantity, \n1.00 AS Percent, \nstlfa.FANotes,\nstlfa.FARework\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n \n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType   \nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID AND stlfa.ActivityType = 65\n \n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(std.TakeOffQuantity,0) AS DemoQuantity, \nCOALESCE(stld.DemoPercentCompleted,0) AS Percent, \nstld.DemoNotes,\n0 AS Rework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nJOIN SteelTrackerDetails std\n    ON std.BidID = stld.DemoBidID\n \nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID,  \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(std.TakeOffQuantity,0) AS MiscQuantity, \nCOALESCE(stlm.MiscPercentCompleted,0) AS Percent,\nstlm.MiscNotes,\nstlm.MiscRework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\nJOIN SteelTrackerDetails std\n    ON std.BidID = stlm.MiscBidID\n    \nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID",
    "countQueryString" : "select count(*) from (SELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\nat.ActivityType AS ActivityTypeName,\nCOALESCE(stlfa.FAQuantity,0) AS Quantity, \n1.00 AS Percent,\nstlfa.FANotes AS Notes,\nstlfa.FARework AS Rework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n        \nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID AND stlfa.ActivityType = 61\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID,  \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlfa.FAQuantity,0) AS ErectQuantity,\nCOALESCE(stlfa.FAPercentCompleted,0) AS ErectPercent,\nstlfa.FANotes,\nstlfa.FARework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID AND stlfa.ActivityType = 62\n\n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlfa.FAQuantity,0) AS BoltoutQuantity,\nCOALESCE(stlfa.FAPercentCompleted,0) AS BoltoutPercent, \nstlfa.FANotes,\nstlfa.FARework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID AND stlfa.ActivityType = 63\n \n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\n\nUNION\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlfa.FAQuantity,0) AS ImpQuantity,\nCOALESCE(stlfa.FAPercentCompleted,0) AS ImpPercent, \nstlfa.FANotes,\nstlfa.FARework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID AND stlfa.ActivityType = 64\n \n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID,  \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlfa.FAQuantity,0) AS WeldQuantity,\nCOALESCE(stlfa.FAPercentCompleted,0) AS WeldPercent,\nstlfa.FANotes,\nstlfa.FARework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID AND stlfa.ActivityType = 68\n \nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(stlfa.FAQuantity,0) AS SellQuantity, \n1.00 AS Percent, \nstlfa.FANotes,\nstlfa.FARework\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n \n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType   \nJOIN SteelFA stlfa\n\tON stlfa.ActivityID = sas.ActivityID AND stlfa.ActivityType = 65\n \n\nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID, \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(std.TakeOffQuantity,0) AS DemoQuantity, \nCOALESCE(stld.DemoPercentCompleted,0) AS Percent, \nstld.DemoNotes,\n0 AS Rework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nJOIN SteelTrackerDetails std\n    ON std.BidID = stld.DemoBidID\n \nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID\n\n\nUNION\n\n\n\nSELECT sas.SubmissionID, sas.ActivityID,  \nCONCAT(u1.FirstName, ' ', u1.LastName)AS Foreman, \nCONCAT(u2.FirstName, ' ', u2.LastName)AS Supervisor, \nsd.CompleteTime, \nmax(sasr.TimeStamp) AS ReviewedTime,\n\nat.ActivityType,\nCOALESCE(std.TakeOffQuantity,0) AS MiscQuantity, \nCOALESCE(stlm.MiscPercentCompleted,0) AS Percent,\nstlm.MiscNotes,\nstlm.MiscRework\n\n\nFROM SubmissionActivityStatus sas\n\n####User Info Joins ####\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nLEFT JOIN PSA.tblUserPSA u1\n\t\tON u1.ID = tc.Foreman OR u1.ID = tcr.Foreman\nLEFT JOIN PSA.tblUserPSA u2\n\t\tON u2.ID = tc.Superintendent OR u2.ID = tcr.Superintendent\n\nLEFT JOIN SubmissionActivityStatusREV sasr\n\tON sasr.fk_ActivityID = sas.ActivityID AND sasr.fk_ActivityStatus = 2\n\n#### Assigned Activities Joins #####  \nLEFT JOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\nJOIN SteelTrackerDetails std\n    ON std.BidID = stlm.MiscBidID\n    \nWHERE sas.fk_BidIDAssigned = :BidID\nAND sas.SubmissionID = :SubmissionID\nAND sas.fk_ActivityStatus IN (5,12)\nGROUP BY sas.ActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "10",
      "required" : false
    }, {
      "name" : "SubmissionID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "713",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetBidWorkHistorySteelExpandedResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SubmissionID",
        "fieldName" : "submissionId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "Foreman",
        "fieldName" : "foreman",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Supervisor",
        "fieldName" : "supervisor",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReviewedTime",
        "fieldName" : "reviewedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Quantity",
        "fieldName" : "quantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Percent",
        "fieldName" : "percent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      } ]
    }
  },
  "GetDrawingByTestPackageCivil" : {
    "name" : "GetDrawingByTestPackageCivil",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT DISTINCT ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DetailDrawingNumber\nFROM CivilTrackerDetails ctd\nWHERE ctd.TestPackageNumber = :TestPackage\nORDER BY ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DetailDrawingNumber",
    "countQueryString" : "select count(*) from (SELECT DISTINCT ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DetailDrawingNumber\nFROM CivilTrackerDetails ctd\nWHERE ctd.TestPackageNumber = :TestPackage\nORDER BY ctd.EngDrawingNumber, ctd.SheetNumber, ctd.DetailDrawingNumber) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "7",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetDrawingByTestPackageCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DetailDrawingNumber",
        "fieldName" : "detailDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetDrawingByTestPackageSteel" : {
    "name" : "GetDrawingByTestPackageSteel",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT DISTINCT std.Area, std.PieceMark, std.Description\nFROM SteelTrackerDetails std\nWHERE std.TestPackageNumber = :TestPackage\nORDER BY std.Area, std.PieceMark",
    "countQueryString" : "select count(*) from (SELECT DISTINCT std.Area, std.PieceMark, std.Description\nFROM SteelTrackerDetails std\nWHERE std.TestPackageNumber = :TestPackage\nORDER BY std.Area, std.PieceMark) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetDrawingByTestPackageSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Area",
        "fieldName" : "area",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceMark",
        "fieldName" : "pieceMark",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetDrawingsByTestPackagePipe" : {
    "name" : "GetDrawingsByTestPackagePipe",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT DISTINCT ptd.EngDrawingNumber, ptd.SheetNumber, ptd.LineNumber\nFROM PipeTrackerDetails ptd\nWHERE ptd.TestPackageNumber = :TestPackage\nORDER BY ptd.EngDrawingNumber, ptd.SheetNumber",
    "countQueryString" : "select count(*) from (SELECT DISTINCT ptd.EngDrawingNumber, ptd.SheetNumber, ptd.LineNumber\nFROM PipeTrackerDetails ptd\nWHERE ptd.TestPackageNumber = :TestPackage\nORDER BY ptd.EngDrawingNumber, ptd.SheetNumber) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "7",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetDrawingsByTestPackagePipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "LineNumber",
        "fieldName" : "lineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetNoteCount" : {
    "name" : "GetNoteCount",
    "description" : "Gets the number of notes BY PSAActivityID",
    "version" : "V1",
    "queryString" : "SELECT count(sasn.ID) AS NoteCount\nFROM SASNotes sasn\nWHERE sasn.ActivityID = :ActivityID",
    "countQueryString" : "select count(*) from (SELECT count(sasn.ID) AS NoteCount\nFROM SASNotes sasn\nWHERE sasn.ActivityID = :ActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "666",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetNoteCountResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "NoteCount",
        "fieldName" : "noteCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      } ]
    }
  },
  "GetNotesByActivityID" : {
    "name" : "GetNotesByActivityID",
    "description" : "Gets all notes tied to a specified ID",
    "version" : "V1",
    "queryString" : "SELECT sasn.Notes, sasn.TimeStamp, u.Email\nFROM SASNotes sasn\nJOIN PSA.tblUserPSA u\n\tON u.ID = sasn.UserID\nWHERE sasn.ActivityID IN :ActivityID",
    "countQueryString" : "select count(*) from (SELECT sasn.Notes, sasn.TimeStamp, u.Email\nFROM SASNotes sasn\nJOIN PSA.tblUserPSA u\n\tON u.ID = sasn.UserID\nWHERE sasn.ActivityID IN :ActivityID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : true,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : [ "666", "58671" ],
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetNotesByActivityIdResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "Email",
        "fieldName" : "email",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetPSRecentActivities" : {
    "name" : "GetPSRecentActivities",
    "description" : "Gets the recent activities modified by a given user in PS review",
    "version" : "V1",
    "queryString" : "SELECT sas.ActivityID, at.ActivityType, ats.Status, sas.TimeStamp\n\nFROM SubmissionActivityStatus sas\nJOIN PSA.REF_ActivityTypes at\n\ton at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats \n\ton ats.ID = sas.fk_ActivityStatus\n\nWHERE sas.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW()\nAND sas.fk_ActivityStatus IN (5,6,13)\nAND sas.fk_LastModifiedBy = :UserID\nORDER BY sas.TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT sas.ActivityID, at.ActivityType, ats.Status, sas.TimeStamp\n\nFROM SubmissionActivityStatus sas\nJOIN PSA.REF_ActivityTypes at\n\ton at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats \n\ton ats.ID = sas.fk_ActivityStatus\n\nWHERE sas.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW()\nAND sas.fk_ActivityStatus IN (5,6,13)\nAND sas.fk_LastModifiedBy = :UserID\nORDER BY sas.TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "UserID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetPsrecentActivitiesResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantitiesTestPackageCivil" : {
    "name" : "GetQuantitiesTestPackageCivil",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT ctd.BidID, ctd.TestPackageNumber, \n\n#### Count ####\ncount(ctd.BidID) AS SellPunchCount,\n\n#### Hours ####\nsum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,\n\n#### Installed Count ####\nsum(COALESCE(ers.InstalledSellPunch,0)) AS SellPunchInstalled,\n\n#### Earned Hours ####\nsum(IF(ers.InstalledSellPunch = 1, \n/*TRUE*/\n(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')),\n/*FALSE*/\n0\n)) AS EarnedSellPunchHours,\n\n#### Loose Hours ####\nsum(\n(COALESCE(ctd.EstimatedHours,0) * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent') / COALESCE(ctd.TakeOffQuantity,0)) \n*\n(COALESCE(ctd.TakeOffQuantity,0) - COALESCE(EarnedFAHours,0))\n) AS LooseHours\n\nFROM CivilTrackerDetails ctd\n\nLEFT JOIN (SELECT min(ctd.UID) AS UID,\n### Hours Earned ###\nIF(sum(COALESCE(IF(sas.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), COALESCE(cfa.FAQuantity,0)),0)) /*Nested IF convertes % to Quantity*/\n\t> ctd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ctd.EstimatedHours*', CivilHoursPercent, ',\n    /*FALSE*/ sum(COALESCE((ctd.EstimatedHours*', CivilHoursPercent, '/ctd.TakeOffQuantity*(COALESCE(IF(sas.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), cfa.FAQuantity),0))), 0))\n    ) AS EarnedFAHours\n\n### SS Joins ###\nFROM SubmissionActivityStatus sas\n\tJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN CivilFA cfa\n\t\tON cfa.ActivityID = sas.ActivityID AND cfa.FARework = 0\n\n\tLEFT JOIN CivilMisc cfm\n\t\tON cfm.ActivityID = sas.ActivityID AND cfm.MiscRework = 0\n \n    LEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours\n\t\t\t\tFROM`CivilTrackerDetails`\n\t\t\t\tGROUP BY BidID) ctd\n\t\tON ctd.BidID = sas.fk_BidIDAssigned\n        \nWHERE fk_ActivityStatus IN (5,12)\nAND sas.ActivityType IN (70,71,97)\nGROUP BY ctd.BidID) er\n\t\tON er.UID = ctd.UID\n\n\n ##### Earned Sell HOURS #####       \nLEFT JOIN (SELECT min(ctd.UID) AS UID, cs.InstalledSellPunch\n\t\t\tFROM CivilTrackerDetails ctd\n\t\t\tLEFT JOIN (SELECT sas.ActivityType, cs.SellTestPackageNumber, 1 AS InstalledSellPunch\n\t\t\t\t\t\tFROM CivilSellPackage cs \n\t\t\t\t\t\tINNER JOIN SubmissionActivityStatus sas\n\t\t\t\t\t\t\tON sas.ActivityID = cs.ActivityID AND sas.fk_ActivityStatus IN (5,12)) cs\n\tON cs.SellTestPackageNumber = ctd.TestPackageNumber AND ctd.ActivityType != \"Demo\"\nGROUP BY ctd.BidID) ers\n\tOn ers.UID = ctd.UID\n\nWHERE ctd.TestPackageNumber = :TestPackage",
    "countQueryString" : "select count(*) from (SELECT ctd.BidID, ctd.TestPackageNumber, \n\n#### Count ####\ncount(ctd.BidID) AS SellPunchCount,\n\n#### Hours ####\nsum(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')) AS SellPunchHours,\n\n#### Installed Count ####\nsum(COALESCE(ers.InstalledSellPunch,0)) AS SellPunchInstalled,\n\n#### Earned Hours ####\nsum(IF(ers.InstalledSellPunch = 1, \n/*TRUE*/\n(ctd.EstimatedHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilSellPunchHoursPercent')),\n/*FALSE*/\n0\n)) AS EarnedSellPunchHours,\n\n#### Loose Hours ####\nsum(\n(COALESCE(ctd.EstimatedHours,0) * (SELECT Value1 FROM SETTINGS WHERE Label = 'CivilWorkHoursPercent') / COALESCE(ctd.TakeOffQuantity,0)) \n*\n(COALESCE(ctd.TakeOffQuantity,0) - COALESCE(EarnedFAHours,0))\n) AS LooseHours\n\nFROM CivilTrackerDetails ctd\n\nLEFT JOIN (SELECT min(ctd.UID) AS UID,\n### Hours Earned ###\nIF(sum(COALESCE(IF(sas.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), COALESCE(cfa.FAQuantity,0)),0)) /*Nested IF convertes % to Quantity*/\n\t> ctd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ctd.EstimatedHours*', CivilHoursPercent, ',\n    /*FALSE*/ sum(COALESCE((ctd.EstimatedHours*', CivilHoursPercent, '/ctd.TakeOffQuantity*(COALESCE(IF(sas.ActivityType IN (70,97), ((COALESCE(cfa.FAPercentComplete,0) + COALESCE(cfm.MiscPercentComplete,0)) * ctd.TakeOffQuantity), cfa.FAQuantity),0))), 0))\n    ) AS EarnedFAHours\n\n### SS Joins ###\nFROM SubmissionActivityStatus sas\n\tJOIN PSA.REF_ActivityTypes at\n\t\tON at.ID = sas.ActivityType\n        \n\tLEFT JOIN CivilFA cfa\n\t\tON cfa.ActivityID = sas.ActivityID AND cfa.FARework = 0\n\n\tLEFT JOIN CivilMisc cfm\n\t\tON cfm.ActivityID = sas.ActivityID AND cfm.MiscRework = 0\n \n    LEFT JOIN (SELECT min(UID) AS UID, BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(EstimatedHours) AS EstimatedHours\n\t\t\t\tFROM`CivilTrackerDetails`\n\t\t\t\tGROUP BY BidID) ctd\n\t\tON ctd.BidID = sas.fk_BidIDAssigned\n        \nWHERE fk_ActivityStatus IN (5,12)\nAND sas.ActivityType IN (70,71,97)\nGROUP BY ctd.BidID) er\n\t\tON er.UID = ctd.UID\n\n\n ##### Earned Sell HOURS #####       \nLEFT JOIN (SELECT min(ctd.UID) AS UID, cs.InstalledSellPunch\n\t\t\tFROM CivilTrackerDetails ctd\n\t\t\tLEFT JOIN (SELECT sas.ActivityType, cs.SellTestPackageNumber, 1 AS InstalledSellPunch\n\t\t\t\t\t\tFROM CivilSellPackage cs \n\t\t\t\t\t\tINNER JOIN SubmissionActivityStatus sas\n\t\t\t\t\t\t\tON sas.ActivityID = cs.ActivityID AND sas.fk_ActivityStatus IN (5,12)) cs\n\tON cs.SellTestPackageNumber = ctd.TestPackageNumber AND ctd.ActivityType != \"Demo\"\nGROUP BY ctd.BidID) ers\n\tOn ers.UID = ctd.UID\n\nWHERE ctd.TestPackageNumber = :TestPackage) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantitiesTestPackageCivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SellPunchCount",
        "fieldName" : "sellPunchCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      }, {
        "name" : "SellPunchHours",
        "fieldName" : "sellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellPunchInstalled",
        "fieldName" : "sellPunchInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "EarnedSellPunchHours",
        "fieldName" : "earnedSellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "LooseHours",
        "fieldName" : "looseHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantitiesTestPackagePipe" : {
    "name" : "GetQuantitiesTestPackagePipe",
    "description" : "Get testing quantities",
    "version" : "V1",
    "queryString" : "SELECT ptd.TestPackageNumber, \n\ncount(ptd.BidID) AS ItemsTotal, \n\nTRUNCATE(sum(ste.ReadyForTestingHours),6) AS ReadyForTestingHours,\nTRUNCATE(sum(ste.HydroHours),6) AS HydroHours,\nTRUNCATE(sum(ste.ClientTurnoverHours),6) AS ClientTurnoverHours,\n\nSUM(ert.ReadyForTestingInstalled) AS ReadyForTestingInstalled, \nSUM(ert.HydroInstalled) AS HydroInstalled, \nSUM(ert.ClientTurnoverInstalled) AS ClientTurnoverInstalled,\n\nTRUNCATE(sum(ert.EarnedReadyForTestingHours),6) AS EarnedReadyForTestingHours, \nTRUNCATE(sum(ert.EarnedHydroHours),6) AS EarnedHydroHours, \nTRUNCATE(sum(ert.EarnedClientTurnoverHours),6) AS EarnedClientTurnoverHours,\n\nTRUNCATE(sum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity *(ptd.TakeOffQuantity \n- (COALESCE(er.InstalledFootage,0) \n  + COALESCE(er.InstalledBoltUps,0)\n  + COALESCE(er.InstalledWelds,0)\n  + COALESCE(er.InstalledCuts,0)\n  + COALESCE(er.InstalledTrim,0)\n  + COALESCE(er.InstalledSupports,0)\n  + COALESCE(er.InstalledMisc,0)\n  + COALESCE(er.InstalledDemo,0))))),6) AS LooseHours\n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT min(ptd.ID) AS ID,\n    \nIF( sum(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0)) \n\t> ptd.TakeOffQuantity, /*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0))),0))\n    ) AS EarnedErectionHours,\n\nIF(sum(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0))), 0))\n    ) AS EarnedBoltUpHours,\n\nIF(sum(COALESCE(pw.WeldPercentCompleted * .01,0) + COALESCE(pmw.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pw.WeldPercentCompleted * .01,0) + COALESCE(pmw.MiscQuantity,0))),0))\n    ) AS EarnedWeldHours,\n\nIF(sum(COALESCE(pcut.WeldPercentCompleted * .01,0) + COALESCE(pmc.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pcut.WeldPercentCompleted * .01,0) + COALESCE(pmc.MiscQuantity,0))),0))\n    ) AS EarnedCutHours,\n    \nIF(sum(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0))),0))\n    ) AS EarnedTrimHours,\n    \nIF(sum(COALESCE((psu.SupportPercentCompleted * .01 * psu.SupportQuantity),0) + COALESCE(pmpsu.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE((psu.SupportPercentCompleted * .01 * psu.SupportQuantity),0) + COALESCE(pmpsu.MiscQuantity,0))),0))\n    ) AS EarnedSupportHours,\n    \nIF(sum(COALESCE(IF(ptd.PipingActivityType = 'MISC' AND ptd.ECT != 'D', pm.MiscQuantity,0),0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*COALESCE(IF(ptd.PipingActivityType = 'MISC' AND ptd.ECT != 'D', pm.MiscQuantity,0),0)),0))\n    ) AS EarnedMiscHours,\n    \nIF(sum(COALESCE(pd.DemoQuantity,0) + COALESCE(pmd.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours,\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours/ptd.TakeOffQuantity*(COALESCE(pd.DemoQuantity,0) + COALESCE(pmd.MiscQuantity,0))),0))\n    ) AS EarnedDemoHours,\n    \n\nsum(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0)) AS InstalledFootage,\nsum(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0)) AS InstalledBoltUps, \nsum(COALESCE(pw.WeldPercentCompleted * .01,0) + COALESCE(pmw.MiscQuantity,0)) AS InstalledWelds,\nsum(COALESCE(pcut.WeldPercentCompleted * .01,0) + COALESCE(pmc.MiscQuantity,0)) AS InstalledCuts,\nsum(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0)) AS InstalledTrim,\nsum(COALESCE((psu.SupportPercentCompleted * .01 * psu.SupportQuantity),0) + COALESCE(pmpsu.MiscQuantity,0)) AS InstalledSupports,\nsum(COALESCE(pm.MiscQuantity,0)) AS InstalledMisc,\nsum(COALESCE(pd.DemoQuantity,0) + COALESCE(pmd.MiscQuantity,0)) AS InstalledDemo\n\nFROM `Job1112`.SubmissionActivityStatus sas\n\t\t\tJOIN PSA.REF_ActivityTypes at\n\t\t\t\tON at.ID = sas.ActivityType\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeErection pe\n\t\t\t\tON pe.ActivityID = sas.ActivityID AND pe.ErectionRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeBoltUp pb\n\t\t\t\tON pb.ActivityID = sas.ActivityID AND pb.BoltUpRework = 0\n\t\t \n\t\t\tLEFT JOIN `Job1112`.PipeWeld pw\n\t\t\t\tON pw.ActivityID = sas.ActivityID AND sas.ActivityType = 22 AND  pw.WeldRework = 0\n\t\t \n\t\t\tLEFT JOIN `Job1112`.PipeWeld pcut\n\t\t\t\tON pcut.ActivityID = sas.ActivityID AND sas.ActivityType = 23 AND pcut.WeldRework = 0\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeTrim pt\n\t\t\t\tON pt.ActivityID = sas.ActivityID AND pt.TrimRework = 0\n\t\t\t\n            LEFT JOIN `Job1112`.PipeSupports psu\n\t\t\t\tON psu.ActivityID = sas.ActivityID AND psu.SupportRework = 0\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeDemo pd\n\t\t\t\tON pd.ActivityID = sas.ActivityID\n\t\t\t\n\t\t\tLEFT JOIN `Job1112`.`PipeTrackerDetails` ptd\n\t\t\t\tON ptd.BidID = sas.fk_BidIDAssigned\n\n\t\t/* #### Begining of Misc activities assigned joins #### */\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pm\n\t\t\t\tON pm.ActivityID = sas.ActivityID AND ptd.ECT != \"D\" AND ptd.PipingActivityType = \"MISC\"  AND pm.MiscRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pme\n\t\t\t\tON pme.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"PE\" AND pme.MiscRework = 0\n\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmb\n\t\t\t\tON pmb.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"BU\" AND pmb.MiscRework = 0\n\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmw\n\t\t\t\tON pmw.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"W\" AND pmw.MiscRework = 0\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmc\n\t\t\t\tON pmc.ActivityID = sas.ActivityID AND ptd.ECT != \"D\" AND ptd.PipingActivityType = \"CUT\" AND pmc.MiscRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmt\n\t\t\t\tON pmt.ActivityID = sas.ActivityID AND ptd.ECT = \"T\" AND ptd.PipingActivityType IN (\"V\",\"Plug\",\"HpLp\",\"Other\",\"Blind\") AND pmt.MiscRework = 0\n\t\t\t   \n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmpsu\n\t\t\t\tON pmpsu.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"S\" AND pmpsu.MiscRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmd\n\t\t\t\tON pmd.ActivityID = sas.ActivityID AND ptd.ECT = \"D\" AND pmd.MiscRework = 0\n        \n\n        \nWHERE fk_ActivityStatus IN (5,12)\nGROUP BY ptd.BidID) er\n\t\tON er.ID = ptd.ID\n\nLEFT JOIN (SELECT min(ptd.ID) AS ID,\nsum(COALESCE(steR.InstalledReadyForTesting, 0)) AS ReadyForTestingInstalled,\nsum(COALESCE(steH.InstalledHydro, 0)) AS HydroInstalled,\nsum(COALESCE(steC.InstalledClientTurnover, 0)) AS ClientTurnoverInstalled,\n\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * steR.InstalledReadyForTesting, 0)) AS EarnedReadyForTestingHours,\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') * steH.InstalledHydro, 0)) AS EarnedHydroHours,\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') * steC.InstalledClientTurnover, 0)) AS EarnedClientTurnoverHours\n\nFROM `Job1112`.`PipeTrackerDetails` ptd\n\n\t\tLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledReadyForTesting\n\t\t\t\t\tFROM `Job1112`.PipeTesting ste\n\t\t\t\t\tJOIN `Job1112`.SubmissionActivityStatus sas\n\t\t\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 41 AND sas.fk_ActivityStatus IN (5,12) AND ste.TestingRework = 0) steR\n\t\t\tON steR.TestingTestPackageNumber = ptd.TestPackageNumber AND steR.ActivityType = 41 AND ptd.ECT != \"D\"\n\t\t\t\n\t\tLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledHydro\n\t\t\t\t\tFROM `Job1112`.PipeTesting ste\n\t\t\t\t\tJOIN `Job1112`.SubmissionActivityStatus sas\n\t\t\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 42 AND sas.fk_ActivityStatus IN (5,12) AND ste.TestingRework = 0) steH\n\t\t\tON steH.TestingTestPackageNumber = ptd.TestPackageNumber AND steH.ActivityType = 42 AND ptd.ECT != \"D\"\n\t\t\t\n\t\tLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledClientTurnover\n\t\t\t\t\tFROM `Job1112`.PipeTesting ste\n\t\t\t\t\tJOIN `Job1112`.SubmissionActivityStatus sas\n\t\t\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 43 AND sas.fk_ActivityStatus IN (5,12) AND ste.TestingRework = 0) steC\n\t\t\tON steC.TestingTestPackageNumber = ptd.TestPackageNumber AND steC.ActivityType = 43 AND ptd.ECT != \"D\"\n\n\t\tGROUP BY ptd.BidID) ert\n\tON ert.ID = ptd.ID\n    \nLEFT JOIN (SELECT ptd.ID,\n\t\t\tCOALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent'),0) AS TestingHours,\n            COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent')),0) AS ReadyForTestingHours,\n            COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent')),0) AS HydroHours,\n            COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent')),0) AS ClientTurnoverHours\n\t\t\tFROM PipeTrackerDetails ptd\n\t\t\tWHERE ptd.ECT != 'D') ste\n\tON ste.ID = ptd.ID\n  \n    \nWHERE ptd.TestPackageNumber = :TestPackage\nGROUP BY ptd.TestPackageNumber",
    "countQueryString" : "select count(*) from (SELECT ptd.TestPackageNumber, \n\ncount(ptd.BidID) AS ItemsTotal, \n\nTRUNCATE(sum(ste.ReadyForTestingHours),6) AS ReadyForTestingHours,\nTRUNCATE(sum(ste.HydroHours),6) AS HydroHours,\nTRUNCATE(sum(ste.ClientTurnoverHours),6) AS ClientTurnoverHours,\n\nSUM(ert.ReadyForTestingInstalled) AS ReadyForTestingInstalled, \nSUM(ert.HydroInstalled) AS HydroInstalled, \nSUM(ert.ClientTurnoverInstalled) AS ClientTurnoverInstalled,\n\nTRUNCATE(sum(ert.EarnedReadyForTestingHours),6) AS EarnedReadyForTestingHours, \nTRUNCATE(sum(ert.EarnedHydroHours),6) AS EarnedHydroHours, \nTRUNCATE(sum(ert.EarnedClientTurnoverHours),6) AS EarnedClientTurnoverHours,\n\nTRUNCATE(sum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity *(ptd.TakeOffQuantity \n- (COALESCE(er.InstalledFootage,0) \n  + COALESCE(er.InstalledBoltUps,0)\n  + COALESCE(er.InstalledWelds,0)\n  + COALESCE(er.InstalledCuts,0)\n  + COALESCE(er.InstalledTrim,0)\n  + COALESCE(er.InstalledSupports,0)\n  + COALESCE(er.InstalledMisc,0)\n  + COALESCE(er.InstalledDemo,0))))),6) AS LooseHours\n\nFROM PipeTrackerDetails ptd\n\nLEFT JOIN (SELECT min(ptd.ID) AS ID,\n    \nIF( sum(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0)) \n\t> ptd.TakeOffQuantity, /*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0))),0))\n    ) AS EarnedErectionHours,\n\nIF(sum(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0))), 0))\n    ) AS EarnedBoltUpHours,\n\nIF(sum(COALESCE(pw.WeldPercentCompleted * .01,0) + COALESCE(pmw.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pw.WeldPercentCompleted * .01,0) + COALESCE(pmw.MiscQuantity,0))),0))\n    ) AS EarnedWeldHours,\n\nIF(sum(COALESCE(pcut.WeldPercentCompleted * .01,0) + COALESCE(pmc.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pcut.WeldPercentCompleted * .01,0) + COALESCE(pmc.MiscQuantity,0))),0))\n    ) AS EarnedCutHours,\n    \nIF(sum(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0))),0))\n    ) AS EarnedTrimHours,\n    \nIF(sum(COALESCE((psu.SupportPercentCompleted * .01 * psu.SupportQuantity),0) + COALESCE(pmpsu.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*(COALESCE((psu.SupportPercentCompleted * .01 * psu.SupportQuantity),0) + COALESCE(pmpsu.MiscQuantity,0))),0))\n    ) AS EarnedSupportHours,\n    \nIF(sum(COALESCE(IF(ptd.PipingActivityType = 'MISC' AND ptd.ECT != 'D', pm.MiscQuantity,0),0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent'),\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'MechHoursPercent')/ptd.TakeOffQuantity*COALESCE(IF(ptd.PipingActivityType = 'MISC' AND ptd.ECT != 'D', pm.MiscQuantity,0),0)),0))\n    ) AS EarnedMiscHours,\n    \nIF(sum(COALESCE(pd.DemoQuantity,0) + COALESCE(pmd.MiscQuantity,0))\n\t> ptd.TakeOffQuantity,/*Is Installed Greater then TakeOff*/\n    /*TRUE*/ ptd.EstimatedHours,\n    /*FALSE*/ sum(COALESCE((ptd.EstimatedHours/ptd.TakeOffQuantity*(COALESCE(pd.DemoQuantity,0) + COALESCE(pmd.MiscQuantity,0))),0))\n    ) AS EarnedDemoHours,\n    \n\nsum(COALESCE(pe.ErectionLengthSpool1,0) + COALESCE(pe.ErectionLengthSpool2,0) + COALESCE(pe.ErectionLengthSpool3,0) + COALESCE(pe.ErectionLengthSpool4,0) + COALESCE(pe.ErectionLengthSpool5,0) + COALESCE(pe.ErectionLengthSpool6,0) + COALESCE(pme.MiscQuantity,0)) AS InstalledFootage,\nsum(COALESCE(pb.BoltUpQuantity,0) + COALESCE(pmb.MiscQuantity,0)) AS InstalledBoltUps, \nsum(COALESCE(pw.WeldPercentCompleted * .01,0) + COALESCE(pmw.MiscQuantity,0)) AS InstalledWelds,\nsum(COALESCE(pcut.WeldPercentCompleted * .01,0) + COALESCE(pmc.MiscQuantity,0)) AS InstalledCuts,\nsum(COALESCE(pt.TrimQuantity,0) + COALESCE(pmt.MiscQuantity,0)) AS InstalledTrim,\nsum(COALESCE((psu.SupportPercentCompleted * .01 * psu.SupportQuantity),0) + COALESCE(pmpsu.MiscQuantity,0)) AS InstalledSupports,\nsum(COALESCE(pm.MiscQuantity,0)) AS InstalledMisc,\nsum(COALESCE(pd.DemoQuantity,0) + COALESCE(pmd.MiscQuantity,0)) AS InstalledDemo\n\nFROM `Job1112`.SubmissionActivityStatus sas\n\t\t\tJOIN PSA.REF_ActivityTypes at\n\t\t\t\tON at.ID = sas.ActivityType\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeErection pe\n\t\t\t\tON pe.ActivityID = sas.ActivityID AND pe.ErectionRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeBoltUp pb\n\t\t\t\tON pb.ActivityID = sas.ActivityID AND pb.BoltUpRework = 0\n\t\t \n\t\t\tLEFT JOIN `Job1112`.PipeWeld pw\n\t\t\t\tON pw.ActivityID = sas.ActivityID AND sas.ActivityType = 22 AND  pw.WeldRework = 0\n\t\t \n\t\t\tLEFT JOIN `Job1112`.PipeWeld pcut\n\t\t\t\tON pcut.ActivityID = sas.ActivityID AND sas.ActivityType = 23 AND pcut.WeldRework = 0\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeTrim pt\n\t\t\t\tON pt.ActivityID = sas.ActivityID AND pt.TrimRework = 0\n\t\t\t\n            LEFT JOIN `Job1112`.PipeSupports psu\n\t\t\t\tON psu.ActivityID = sas.ActivityID AND psu.SupportRework = 0\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeDemo pd\n\t\t\t\tON pd.ActivityID = sas.ActivityID\n\t\t\t\n\t\t\tLEFT JOIN `Job1112`.`PipeTrackerDetails` ptd\n\t\t\t\tON ptd.BidID = sas.fk_BidIDAssigned\n\n\t\t/* #### Begining of Misc activities assigned joins #### */\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pm\n\t\t\t\tON pm.ActivityID = sas.ActivityID AND ptd.ECT != \"D\" AND ptd.PipingActivityType = \"MISC\"  AND pm.MiscRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pme\n\t\t\t\tON pme.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"PE\" AND pme.MiscRework = 0\n\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmb\n\t\t\t\tON pmb.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"BU\" AND pmb.MiscRework = 0\n\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmw\n\t\t\t\tON pmw.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"W\" AND pmw.MiscRework = 0\n\t\t\t\t\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmc\n\t\t\t\tON pmc.ActivityID = sas.ActivityID AND ptd.ECT != \"D\" AND ptd.PipingActivityType = \"CUT\" AND pmc.MiscRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmt\n\t\t\t\tON pmt.ActivityID = sas.ActivityID AND ptd.ECT = \"T\" AND ptd.PipingActivityType IN (\"V\",\"Plug\",\"HpLp\",\"Other\",\"Blind\") AND pmt.MiscRework = 0\n\t\t\t   \n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmpsu\n\t\t\t\tON pmpsu.ActivityID = sas.ActivityID AND ptd.PipingActivityType = \"S\" AND pmpsu.MiscRework = 0\n\n\t\t\tLEFT JOIN `Job1112`.PipeMisc pmd\n\t\t\t\tON pmd.ActivityID = sas.ActivityID AND ptd.ECT = \"D\" AND pmd.MiscRework = 0\n        \n\n        \nWHERE fk_ActivityStatus IN (5,12)\nGROUP BY ptd.BidID) er\n\t\tON er.ID = ptd.ID\n\nLEFT JOIN (SELECT min(ptd.ID) AS ID,\nsum(COALESCE(steR.InstalledReadyForTesting, 0)) AS ReadyForTestingInstalled,\nsum(COALESCE(steH.InstalledHydro, 0)) AS HydroInstalled,\nsum(COALESCE(steC.InstalledClientTurnover, 0)) AS ClientTurnoverInstalled,\n\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent') * steR.InstalledReadyForTesting, 0)) AS EarnedReadyForTestingHours,\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent') * steH.InstalledHydro, 0)) AS EarnedHydroHours,\nsum(COALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent') * steC.InstalledClientTurnover, 0)) AS EarnedClientTurnoverHours\n\nFROM `Job1112`.`PipeTrackerDetails` ptd\n\n\t\tLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledReadyForTesting\n\t\t\t\t\tFROM `Job1112`.PipeTesting ste\n\t\t\t\t\tJOIN `Job1112`.SubmissionActivityStatus sas\n\t\t\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 41 AND sas.fk_ActivityStatus IN (5,12) AND ste.TestingRework = 0) steR\n\t\t\tON steR.TestingTestPackageNumber = ptd.TestPackageNumber AND steR.ActivityType = 41 AND ptd.ECT != \"D\"\n\t\t\t\n\t\tLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledHydro\n\t\t\t\t\tFROM `Job1112`.PipeTesting ste\n\t\t\t\t\tJOIN `Job1112`.SubmissionActivityStatus sas\n\t\t\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 42 AND sas.fk_ActivityStatus IN (5,12) AND ste.TestingRework = 0) steH\n\t\t\tON steH.TestingTestPackageNumber = ptd.TestPackageNumber AND steH.ActivityType = 42 AND ptd.ECT != \"D\"\n\t\t\t\n\t\tLEFT JOIN (SELECT ste.ActivityType, ste.TestingTestPackageNumber, 1 AS InstalledClientTurnover\n\t\t\t\t\tFROM `Job1112`.PipeTesting ste\n\t\t\t\t\tJOIN `Job1112`.SubmissionActivityStatus sas\n\t\t\t\t\t\tON sas.ActivityID = ste.ActivityID AND sas.ActivityType = 43 AND sas.fk_ActivityStatus IN (5,12) AND ste.TestingRework = 0) steC\n\t\t\tON steC.TestingTestPackageNumber = ptd.TestPackageNumber AND steC.ActivityType = 43 AND ptd.ECT != \"D\"\n\n\t\tGROUP BY ptd.BidID) ert\n\tON ert.ID = ptd.ID\n    \nLEFT JOIN (SELECT ptd.ID,\n\t\t\tCOALESCE(ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent'),0) AS TestingHours,\n            COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'CompleteForTestPercent')),0) AS ReadyForTestingHours,\n            COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'HydroHoursPercent')),0) AS HydroHours,\n            COALESCE((ptd.EstimatedHours*(SELECT Value1 FROM SETTINGS WHERE Label = 'TestingHoursPercent')*(SELECT Value1 FROM SETTINGS WHERE Label = 'ClientTurnoverPercent')),0) AS ClientTurnoverHours\n\t\t\tFROM PipeTrackerDetails ptd\n\t\t\tWHERE ptd.ECT != 'D') ste\n\tON ste.ID = ptd.ID\n  \n    \nWHERE ptd.TestPackageNumber = :TestPackage\nGROUP BY ptd.TestPackageNumber) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantitiesTestPackagePipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ItemsTotal",
        "fieldName" : "itemsTotal",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      }, {
        "name" : "ReadyForTestingHours",
        "fieldName" : "readyForTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "HydroHours",
        "fieldName" : "hydroHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ClientTurnoverHours",
        "fieldName" : "clientTurnoverHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ReadyForTestingInstalled",
        "fieldName" : "readyForTestingInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "HydroInstalled",
        "fieldName" : "hydroInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ClientTurnoverInstalled",
        "fieldName" : "clientTurnoverInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "EarnedReadyForTestingHours",
        "fieldName" : "earnedReadyForTestingHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedHydroHours",
        "fieldName" : "earnedHydroHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "EarnedClientTurnoverHours",
        "fieldName" : "earnedClientTurnoverHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "LooseHours",
        "fieldName" : "looseHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantitiesTestPackageSteel" : {
    "name" : "GetQuantitiesTestPackageSteel",
    "description" : "Name",
    "version" : "V1",
    "queryString" : "SELECT std.BidID, std.TestPackageNumber,\n\n### Count ####\ncount(std.BidID) AS SellPunchCount,\n\n### Hours ####\nCONVERT(sum(std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')), DECIMAL(16,6)) AS SellPunchHours,\n\n### Installed Count ###\nsum(COALESCE(er.InstalledSell,0)) AS InstalledSell,\n\n### Earned Hours ###\nCONVERT(sum(er.EarnedSellHours), DECIMAL(16,6)) AS EarnedSellPunchHours,\n\n### Loose Hours ###\nCONVERT(sum(\n(\nIF(std.ActivityType = \"E\"\n,/*TRUE*/\n(std.SteelHours * (1-(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')))\n,/*FALSE*/\nstd.SteelHours)\n) \n- COALESCE(er.EarnedFAHours,0)\n), DECIMAL(16,6)) AS LooseHours\n\nFROM (SELECT BidID, TestPackageNumber, ActivityType, \n                                sum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,\n        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n                                FROM SteelTrackerDetails \n                                GROUP BY BidID) std\n        \nLEFT JOIN SubmissionActivityStatus sas\n                ON sas.fk_BidIDAssigned = std.BidID AND sas.ActivityType = 65 AND sas.fk_ActivityStatus IN (5,12)\n        \n### Earned/Installed Columns ###\nLEFT JOIN (SELECT BidID, \n\n### Installed Quantities ###\nsum(COALESCE(stlsell.FASellQuantity,0)) AS InstalledSell,\n\n### Earned Hour Quantities ###\nsum(IF((COALESCE(stlsell.FASellQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelSell stlsell\n                                                ON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 65\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelSell stlsell\n                                                ON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 65\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity) * stlsell.FASellQuantity,0))\n)) AS EarnedSellHours,\n\n(\nsum(IF((COALESCE(stls.FAShakeQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelShake stls\n                                                ON stls.ActivityID = sas.ActivityID AND stls.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 61\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n((SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelShake stls\n                                                ON stls.ActivityID = sas.ActivityID AND stls.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 61\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity) * stls.FAShakeQuantity,0))\n)) \n+\nsum(IF((COALESCE(stle.FAErectQuantity,0) * COALESCE(stle.FAErectPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelErect stle\n                                                ON stle.ActivityID = sas.ActivityID AND stle.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 62\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelErect stle \n                                                ON stle.ActivityID = sas.ActivityID AND stle.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 62\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity) * (stle.FAErectQuantity * stle.FAErectPercent),0))\n)) \n+\nsum(IF((COALESCE(stlb.FABoltOutQuantity,0) * COALESCE(stlb.FABoltOutPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelBoltOut stlb\n                                                ON stlb.ActivityID = sas.ActivityID AND stlb.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 63\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelBoltOut stlb\n                                                ON stlb.ActivityID = sas.ActivityID AND stlb.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 63\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity) * (stlb.FABoltOutQuantity * stlb.FABoltOutPercent),0))\n)) \n+\nsum(IF((COALESCE(stli.FAImpQuantity,0) * COALESCE(stli.FAImpPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelImp stli\n                                                ON stli.ActivityID = sas.ActivityID AND stli.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 64\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelImp stli\n                                                ON stli.ActivityID = sas.ActivityID AND stli.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 64\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity) * (stli.FAImpQuantity * stli.FAImpPercent),0))\n)) \n+\nsum(IF((COALESCE(stlw.FAWeldQuantity,0) * COALESCE(stlw.FAWeldPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelWeld stlw\n                                                ON stlw.ActivityID = sas.ActivityID AND stlw.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 68\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.WeldCount,/*Is New + cumlitive quantity greater then WeldCount*/\n/*TRUE*/ \nGREATEST((COALESCE(std.WeldCount,0) - \n(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelWeld stlw\n                                                ON stlw.ActivityID = sas.ActivityID AND stlw.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 68\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.WeldHours / std.WeldCount),\n/*FALSE*/\n(COALESCE((std.WeldHours / std.WeldCount) * (stlw.FAWeldQuantity * stlw.FAWeldPercent),0))\n)) \n+\nsum(IF((COALESCE(stld.DemoQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(DemoQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelDemo stld\n                                                ON stld.ActivityID = sas.ActivityID \n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 67\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(DemoQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelDemo stld\n                                                ON stld.ActivityID = sas.ActivityID\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 67\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.DemoHours / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.DemoHours / std.TakeOffQuantity) * stld.DemoQuantity ,0))\n)) \n+\nsum(IF((COALESCE(stlm.MiscQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelMisc stlm\n                                                ON stlm.ActivityID = sas.ActivityID AND stlm.MiscRework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 96\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelMisc stlm\n                                                ON stlm.ActivityID = sas.ActivityID AND stlm.MiscRework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 96\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.MiscHours / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.MiscHours / std.TakeOffQuantity) * stlm.MiscQuantity ,0))\n))\n) AS EarnedFAHours\n\n\nFROM SubmissionActivityStatus sas\n        \nJOIN (SELECT BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours, sum(WeldCount) AS WeldCount, \n                                IF(ActivityType = \"D\", sum(SteelHours), 0) AS DemoHours,\n                                IF(ActivityType = \"Misc\", sum(SteelHours), 0) AS MiscHours\n                                FROM SteelTrackerDetails \n                                GROUP BY BidID) std\n                ON std.BidID = sas.fk_BidIDAssigned\n\nLEFT JOIN SteelShake stls\n                ON stls.ActivityID = sas.ActivityID AND stls.FARework = 0\n\nLEFT JOIN SteelErect stle\n                ON stle.ActivityID = sas.ActivityID AND stle.FARework = 0\n\nLEFT JOIN SteelBoltOut stlb\n                ON stlb.ActivityID = sas.ActivityID AND stlb.FARework = 0\n\nLEFT JOIN SteelImp stli\n                ON stli.ActivityID = sas.ActivityID AND stli.FARework = 0\n    \nLEFT JOIN SteelWeld stlw\n                ON stlw.ActivityID = sas.ActivityID AND stlw.FARework = 0\n\nLEFT JOIN SteelSell stlsell\n                ON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n\nLEFT JOIN SteelDemo stld\n                ON stld.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelMisc stlm\n                ON stlm.ActivityID = sas.ActivityID AND stlm.MiscRework = 0\n\nWHERE sas.fk_ActivityStatus IN (5,12)\nAND sas.ActivityType IN (60,61,62,63,64,65,66,67,68,69,96) \nGROUP BY std.BidID\n) er\n                ON er.BidID = std.BidID\n  \nWHERE std.TestPackageNumber = :TestPackage",
    "countQueryString" : "select count(*) from (SELECT std.BidID, std.TestPackageNumber,\n\n### Count ####\ncount(std.BidID) AS SellPunchCount,\n\n### Hours ####\nCONVERT(sum(std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')), DECIMAL(16,6)) AS SellPunchHours,\n\n### Installed Count ###\nsum(COALESCE(er.InstalledSell,0)) AS InstalledSell,\n\n### Earned Hours ###\nCONVERT(sum(er.EarnedSellHours), DECIMAL(16,6)) AS EarnedSellPunchHours,\n\n### Loose Hours ###\nCONVERT(sum(\n(\nIF(std.ActivityType = \"E\"\n,/*TRUE*/\n(std.SteelHours * (1-(SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent')))\n,/*FALSE*/\nstd.SteelHours)\n) \n- COALESCE(er.EarnedFAHours,0)\n), DECIMAL(16,6)) AS LooseHours\n\nFROM (SELECT BidID, TestPackageNumber, ActivityType, \n                                sum(WeldCount) AS WeldCount, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours,\n        WBS1, WBS2, WBS3, WBS4, WBS5, WBS6, WBS7, WBS8, WBS9, WBS10\n                                FROM SteelTrackerDetails \n                                GROUP BY BidID) std\n        \nLEFT JOIN SubmissionActivityStatus sas\n                ON sas.fk_BidIDAssigned = std.BidID AND sas.ActivityType = 65 AND sas.fk_ActivityStatus IN (5,12)\n        \n### Earned/Installed Columns ###\nLEFT JOIN (SELECT BidID, \n\n### Installed Quantities ###\nsum(COALESCE(stlsell.FASellQuantity,0)) AS InstalledSell,\n\n### Earned Hour Quantities ###\nsum(IF((COALESCE(stlsell.FASellQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelSell stlsell\n                                                ON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 65\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FASellQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelSell stlsell\n                                                ON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 65\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelSellHoursPercent') / std.TakeOffQuantity) * stlsell.FASellQuantity,0))\n)) AS EarnedSellHours,\n\n(\nsum(IF((COALESCE(stls.FAShakeQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelShake stls\n                                                ON stls.ActivityID = sas.ActivityID AND stls.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 61\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n((SELECT COALESCE(sum(COALESCE(FAShakeQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelShake stls\n                                                ON stls.ActivityID = sas.ActivityID AND stls.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 61\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelShakeHoursPercent') / std.TakeOffQuantity) * stls.FAShakeQuantity,0))\n)) \n+\nsum(IF((COALESCE(stle.FAErectQuantity,0) * COALESCE(stle.FAErectPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelErect stle\n                                                ON stle.ActivityID = sas.ActivityID AND stle.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 62\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FAErectQuantity,0) * COALESCE(FAErectPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelErect stle \n                                                ON stle.ActivityID = sas.ActivityID AND stle.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 62\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelErectHoursPercent') / std.TakeOffQuantity) * (stle.FAErectQuantity * stle.FAErectPercent),0))\n)) \n+\nsum(IF((COALESCE(stlb.FABoltOutQuantity,0) * COALESCE(stlb.FABoltOutPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelBoltOut stlb\n                                                ON stlb.ActivityID = sas.ActivityID AND stlb.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 63\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FABoltOutQuantity,0) * COALESCE(FABoltOutPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelBoltOut stlb\n                                                ON stlb.ActivityID = sas.ActivityID AND stlb.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 63\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelBoltoutHoursPercent') / std.TakeOffQuantity) * (stlb.FABoltOutQuantity * stlb.FABoltOutPercent),0))\n)) \n+\nsum(IF((COALESCE(stli.FAImpQuantity,0) * COALESCE(stli.FAImpPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelImp stli\n                                                ON stli.ActivityID = sas.ActivityID AND stli.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 64\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(FAImpQuantity,0) * COALESCE(FAImpPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelImp stli\n                                                ON stli.ActivityID = sas.ActivityID AND stli.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 64\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.SteelHours * (SELECT Value1 FROM SETTINGS WHERE Label = 'SteelImpHoursPercent') / std.TakeOffQuantity) * (stli.FAImpQuantity * stli.FAImpPercent),0))\n)) \n+\nsum(IF((COALESCE(stlw.FAWeldQuantity,0) * COALESCE(stlw.FAWeldPercent,0) + \n(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelWeld stlw\n                                                ON stlw.ActivityID = sas.ActivityID AND stlw.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 68\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.WeldCount,/*Is New + cumlitive quantity greater then WeldCount*/\n/*TRUE*/ \nGREATEST((COALESCE(std.WeldCount,0) - \n(SELECT COALESCE(sum(COALESCE(FAWeldQuantity,0) * COALESCE(FAWeldPercent,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelWeld stlw\n                                                ON stlw.ActivityID = sas.ActivityID AND stlw.FARework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 68\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.WeldHours / std.WeldCount),\n/*FALSE*/\n(COALESCE((std.WeldHours / std.WeldCount) * (stlw.FAWeldQuantity * stlw.FAWeldPercent),0))\n)) \n+\nsum(IF((COALESCE(stld.DemoQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(DemoQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelDemo stld\n                                                ON stld.ActivityID = sas.ActivityID \n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 67\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(DemoQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelDemo stld\n                                                ON stld.ActivityID = sas.ActivityID\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 67\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.DemoHours / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.DemoHours / std.TakeOffQuantity) * stld.DemoQuantity ,0))\n)) \n+\nsum(IF((COALESCE(stlm.MiscQuantity,0) + \n(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelMisc stlm\n                                                ON stlm.ActivityID = sas.ActivityID AND stlm.MiscRework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 96\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID)\n) > std.TakeOffQuantity,/*Is New + cumlitive quantity greater then TakeOff*/\n/*TRUE*/ \nGREATEST((COALESCE(std.TakeOffQuantity,0) - \n(SELECT COALESCE(sum(COALESCE(MiscQuantity,0)),0) AS CQuantity\n                FROM SubmissionActivityStatus sas\n                                LEFT JOIN SteelMisc stlm\n                                                ON stlm.ActivityID = sas.ActivityID AND stlm.MiscRework = 0\n                WHERE sas.fk_ActivityStatus IN (5,12)\n                AND sas.ActivityType = 96\n                AND sas.ActivityID < sas.ActivityID\n                AND sas.fk_BidIDAssigned = std.BidID))\n,0) * (std.MiscHours / std.TakeOffQuantity),\n/*FALSE*/\n(COALESCE((std.MiscHours / std.TakeOffQuantity) * stlm.MiscQuantity ,0))\n))\n) AS EarnedFAHours\n\n\nFROM SubmissionActivityStatus sas\n        \nJOIN (SELECT BidID, sum(TakeOffQuantity) AS TakeOffQuantity, sum(SteelHours) AS SteelHours, sum(WeldHours) AS WeldHours, sum(WeldCount) AS WeldCount, \n                                IF(ActivityType = \"D\", sum(SteelHours), 0) AS DemoHours,\n                                IF(ActivityType = \"Misc\", sum(SteelHours), 0) AS MiscHours\n                                FROM SteelTrackerDetails \n                                GROUP BY BidID) std\n                ON std.BidID = sas.fk_BidIDAssigned\n\nLEFT JOIN SteelShake stls\n                ON stls.ActivityID = sas.ActivityID AND stls.FARework = 0\n\nLEFT JOIN SteelErect stle\n                ON stle.ActivityID = sas.ActivityID AND stle.FARework = 0\n\nLEFT JOIN SteelBoltOut stlb\n                ON stlb.ActivityID = sas.ActivityID AND stlb.FARework = 0\n\nLEFT JOIN SteelImp stli\n                ON stli.ActivityID = sas.ActivityID AND stli.FARework = 0\n    \nLEFT JOIN SteelWeld stlw\n                ON stlw.ActivityID = sas.ActivityID AND stlw.FARework = 0\n\nLEFT JOIN SteelSell stlsell\n                ON stlsell.ActivityID = sas.ActivityID AND stlsell.FARework = 0\n\nLEFT JOIN SteelDemo stld\n                ON stld.ActivityID = sas.ActivityID\n    \nLEFT JOIN SteelMisc stlm\n                ON stlm.ActivityID = sas.ActivityID AND stlm.MiscRework = 0\n\nWHERE sas.fk_ActivityStatus IN (5,12)\nAND sas.ActivityType IN (60,61,62,63,64,65,66,67,68,69,96) \nGROUP BY std.BidID\n) er\n                ON er.BidID = std.BidID\n  \nWHERE std.TestPackageNumber = :TestPackage) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : "1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantitiesTestPackageSteelResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "BidID",
        "fieldName" : "bidId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "TestPackageNumber",
        "fieldName" : "testPackageNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SellPunchCount",
        "fieldName" : "sellPunchCount",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      }, {
        "name" : "SellPunchHours",
        "fieldName" : "sellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "InstalledSell",
        "fieldName" : "installedSell",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "EarnedSellPunchHours",
        "fieldName" : "earnedSellPunchHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "LooseHours",
        "fieldName" : "looseHours",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityBoltUpInstalled" : {
    "name" : "GetQuantityBoltUpInstalled",
    "description" : "Gets the Quantity of units installed BY BidID",
    "version" : "V1",
    "queryString" : "SELECT SUM(COALESCE(pcb.ConnectionQuantity,0) + COALESCE(pmb.MiscQuantity,0)) AS Total\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PipeConnection pcb\n\tON pcb.ActivityID = sas.ActivityID AND pcb.ConnectionRework = 0\nLEFT JOIN PipeMisc pm\n\tON pm.ActivityID = sas.ActivityID AND pm.MiscRework = 0\n\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\n    \nLEFT JOIN PipeMisc pmb\n\tON pmb.ActivityID = sas.ActivityID AND ptd.ActivitySubType = \"BU\" AND pmb.MiscRework = 0\n\nWHERE sas.ActivityType IN (21, 91)\nAND sas.fk_ActivityStatus IN (5,12) \nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT SUM(COALESCE(pcb.ConnectionQuantity,0) + COALESCE(pmb.MiscQuantity,0)) AS Total\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PipeConnection pcb\n\tON pcb.ActivityID = sas.ActivityID AND pcb.ConnectionRework = 0\nLEFT JOIN PipeMisc pm\n\tON pm.ActivityID = sas.ActivityID AND pm.MiscRework = 0\n\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\n    \nLEFT JOIN PipeMisc pmb\n\tON pmb.ActivityID = sas.ActivityID AND ptd.ActivitySubType = \"BU\" AND pmb.MiscRework = 0\n\nWHERE sas.ActivityType IN (21, 91)\nAND sas.fk_ActivityStatus IN (5,12) \nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "3",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityBoltUpInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityCutPrepInstalled" : {
    "name" : "GetQuantityCutPrepInstalled",
    "description" : "Get Cut/Prep installed Quantity BY BidId",
    "version" : "V1",
    "queryString" : "SELECT SUM(COALESCE(pcut.FAQuantity * pcut.FAPercentCompleted,0) + COALESCE(pmc.MiscQuantity,0)) AS Total\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PipeFA pcut\n\tON pcut.ActivityID = sas.ActivityID AND pcut.FARework = 0\n    \nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\n        \nLEFT JOIN PipeMisc pmc\n\tON pmc.ActivityID = sas.ActivityID AND ptd.ActivityType = \"C\" AND ptd.ActivitySubType = \"CUT\" AND pmc.MiscRework = 0\n\nWHERE sas.ActivityType IN (23, 91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT SUM(COALESCE(pcut.FAQuantity * pcut.FAPercentCompleted,0) + COALESCE(pmc.MiscQuantity,0)) AS Total\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PipeFA pcut\n\tON pcut.ActivityID = sas.ActivityID AND pcut.FARework = 0\n    \nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\n        \nLEFT JOIN PipeMisc pmc\n\tON pmc.ActivityID = sas.ActivityID AND ptd.ActivityType = \"C\" AND ptd.ActivitySubType = \"CUT\" AND pmc.MiscRework = 0\n\nWHERE sas.ActivityType IN (23, 91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "3",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityCutPrepInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityDemoRemoved" : {
    "name" : "GetQuantityDemoRemoved",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT SUM(COALESCE(pd.FAQuantity * pd.FAPercentCompleted, 0) + COALESCE(pmd.MiscQuantity,0)) AS Total\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PipeFA pd\n\tON pd.ActivityID = sas.ActivityID\n\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\t\n\t\nLEFT JOIN PipeMisc pmd\n\t\tON pmd.ActivityID = sas.ActivityID AND ptd.ActivityType = \"D\" AND pmd.MiscRework = 0\n\nWHERE sas.ActivityType IN (51,52,53,59,91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT SUM(COALESCE(pd.FAQuantity * pd.FAPercentCompleted, 0) + COALESCE(pmd.MiscQuantity,0)) AS Total\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PipeFA pd\n\tON pd.ActivityID = sas.ActivityID\n\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\t\n\t\nLEFT JOIN PipeMisc pmd\n\t\tON pmd.ActivityID = sas.ActivityID AND ptd.ActivityType = \"D\" AND pmd.MiscRework = 0\n\nWHERE sas.ActivityType IN (51,52,53,59,91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityDemoRemovedResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityLFInstalledByActivityID" : {
    "name" : "GetQuantityLFInstalledByActivityID",
    "description" : "Gets the Total footage of a given Erection Activity",
    "version" : "V1",
    "queryString" : "SELECT COALESCE(e.ErectionLengthSpool1,0) + COALESCE(e.ErectionLengthSpool2,0) + COALESCE(e.ErectionLengthSpool3,0) + COALESCE(e.ErectionLengthSpool4,0) + COALESCE(e.ErectionLengthSpool5,0) + COALESCE(e.ErectionLengthSpool6,0) AS Total\n\nFROM PipeErection e\nWHERE ActivityID = :ActivityId",
    "countQueryString" : "select count(*) from (SELECT COALESCE(e.ErectionLengthSpool1,0) + COALESCE(e.ErectionLengthSpool2,0) + COALESCE(e.ErectionLengthSpool3,0) + COALESCE(e.ErectionLengthSpool4,0) + COALESCE(e.ErectionLengthSpool5,0) + COALESCE(e.ErectionLengthSpool6,0) AS Total\n\nFROM PipeErection e\nWHERE ActivityID = :ActivityId) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ActivityId",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "666",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityLfinstalledByActivityIdResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityLFInstalledByBidID" : {
    "name" : "GetQuantityLFInstalledByBidID",
    "description" : "Gets the Total footage installed by all PSA activities assigned to a BidID BY BidID",
    "version" : "V1",
    "queryString" : "SELECT SUM(\nCOALESCE(pe.ErectionLengthSpool1,0) + \nCOALESCE(pe.ErectionLengthSpool2,0) + \nCOALESCE(pe.ErectionLengthSpool3,0) + \nCOALESCE(pe.ErectionLengthSpool4,0) + \nCOALESCE(pe.ErectionLengthSpool5,0) + \nCOALESCE(pe.ErectionLengthSpool6,0) +\nCOALESCE(pme.MiscQuantity,0)\n) AS Total \n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PipeErection pe\n\tON pe.ActivityID = sas.ActivityID AND pe.ErectionRework = 0\n\t\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\n\t\nLEFT JOIN PipeMisc pme\n\tON pme.ActivityID = sas.ActivityID AND ptd.ActivityType = \"PE\" AND pme.MiscRework = 0\n\nWHERE sas.ActivityType IN (11, 91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT SUM(\nCOALESCE(pe.ErectionLengthSpool1,0) + \nCOALESCE(pe.ErectionLengthSpool2,0) + \nCOALESCE(pe.ErectionLengthSpool3,0) + \nCOALESCE(pe.ErectionLengthSpool4,0) + \nCOALESCE(pe.ErectionLengthSpool5,0) + \nCOALESCE(pe.ErectionLengthSpool6,0) +\nCOALESCE(pme.MiscQuantity,0)\n) AS Total \n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PipeErection pe\n\tON pe.ActivityID = sas.ActivityID AND pe.ErectionRework = 0\n\t\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\n\t\nLEFT JOIN PipeMisc pme\n\tON pme.ActivityID = sas.ActivityID AND ptd.ActivityType = \"PE\" AND pme.MiscRework = 0\n\nWHERE sas.ActivityType IN (11, 91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "84",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityLfinstalledByBidIdResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityMiscInstalled" : {
    "name" : "GetQuantityMiscInstalled",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "SELECT SUM(COALESCE(pfa.FAQuantity + pfa.FAPercentCompleted) + COALESCE(pm.MiscQuantity,0)) AS Total\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PipeFA pfa\n    ON pfa.ActivityID = sas.ActivityID AND pfa.FARework = 0\n\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\n\nLEFT JOIN PipeMisc pm\n\tON pm.ActivityID = sas.ActivityID AND ptd.ActivityType = \"MISC\" AND pm.MiscRework = 0\n\nWHERE sas.ActivityType IN (90,91) \nAND sas.fk_ActivityStatus IN (5,12) \nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT SUM(COALESCE(pfa.FAQuantity + pfa.FAPercentCompleted) + COALESCE(pm.MiscQuantity,0)) AS Total\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PipeFA pfa\n    ON pfa.ActivityID = sas.ActivityID AND pfa.FARework = 0\n\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\n\nLEFT JOIN PipeMisc pm\n\tON pm.ActivityID = sas.ActivityID AND ptd.ActivityType = \"MISC\" AND pm.MiscRework = 0\n\nWHERE sas.ActivityType IN (90,91) \nAND sas.fk_ActivityStatus IN (5,12) \nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityMiscInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantitySupportsInstalled" : {
    "name" : "GetQuantitySupportsInstalled",
    "description" : "Get the number of Supports installed BY BidID",
    "version" : "V1",
    "queryString" : "SELECT sum(COALESCE(fa.FAQuantity * fa.FAPercentCompleted,0) + COALESCE(pmpsu.MiscQuantity,0)) AS Total\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PipeFA fa\n\tON fa.ActivityID = sas.ActivityID AND fa.FARework = 0\n\t\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\n\t\nLEFT JOIN PipeMisc pmpsu\n\tON pmpsu.ActivityID = sas.ActivityID AND ptd.ActivityType = \"S\" AND pmpsu.MiscRework = 0\n\nWHERE sas.ActivityType IN (38, 91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT sum(COALESCE(fa.FAQuantity * fa.FAPercentCompleted,0) + COALESCE(pmpsu.MiscQuantity,0)) AS Total\n\nFROM SubmissionActivityStatus sas\nLEFT JOIN PipeFA fa\n\tON fa.ActivityID = sas.ActivityID AND fa.FARework = 0\n\t\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\n\t\nLEFT JOIN PipeMisc pmpsu\n\tON pmpsu.ActivityID = sas.ActivityID AND ptd.ActivityType = \"S\" AND pmpsu.MiscRework = 0\n\nWHERE sas.ActivityType IN (38, 91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantitySupportsInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityTrimInstalled" : {
    "name" : "GetQuantityTrimInstalled",
    "description" : "Get the sum of all Trim activities installed BY Bid ID",
    "version" : "V1",
    "queryString" : "SELECT SUM(COALESCE(fa.FAQuantity * fa.FAPercentCompleted,0) + COALESCE(pmt.MiscQuantity,0)) AS Total\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\n\nLEFT JOIN PipeFA fa\n\tON fa.ActivityID = sas.ActivityID AND fa.FARework = 0\n\t\nLEFT JOIN PipeMisc pmt\n\tON pmt.ActivityID = sas.ActivityID AND ptd.ActivityType = \"T\" AND pmt.MiscRework = 0\n\n\nWHERE sas.ActivityType IN (31,32,33,39,91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT SUM(COALESCE(fa.FAQuantity * fa.FAPercentCompleted,0) + COALESCE(pmt.MiscQuantity,0)) AS Total\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\n\nLEFT JOIN PipeFA fa\n\tON fa.ActivityID = sas.ActivityID AND fa.FARework = 0\n\t\nLEFT JOIN PipeMisc pmt\n\tON pmt.ActivityID = sas.ActivityID AND ptd.ActivityType = \"T\" AND pmt.MiscRework = 0\n\n\nWHERE sas.ActivityType IN (31,32,33,39,91)\nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityTrimInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetQuantityWeldInstalled" : {
    "name" : "GetQuantityWeldInstalled",
    "description" : "Get the number of Welds installed BY BidID",
    "version" : "V1",
    "queryString" : "SELECT SUM(COALESCE(pw.WeldPercentCompleted,0) + COALESCE(pmw.MiscQuantity,0)) AS Total\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\n\t\nLEFT JOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID AND  pw.WeldRework = 0\n\nLEFT JOIN PipeMisc pmw\n\tON pmw.ActivityID = sas.ActivityID AND ptd.ActivitySubType = \"W\" AND pmw.MiscRework = 0\n\nWHERE sas.ActivityType IN (22, 91) \nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID",
    "countQueryString" : "select count(*) from (SELECT SUM(COALESCE(pw.WeldPercentCompleted,0) + COALESCE(pmw.MiscQuantity,0)) AS Total\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PipeTrackerDetails ptd\n\tON ptd.BidID = sas.fk_BidIDAssigned\n\t\nLEFT JOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID AND  pw.WeldRework = 0\n\nLEFT JOIN PipeMisc pmw\n\tON pmw.ActivityID = sas.ActivityID AND ptd.ActivitySubType = \"W\" AND pmw.MiscRework = 0\n\nWHERE sas.ActivityType IN (22, 91) \nAND sas.fk_ActivityStatus IN (5,12)\nAND fk_BidIDAssigned = :BidID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "10",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetQuantityWeldInstalledResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Total",
        "fieldName" : "total",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPRCivil" : {
    "name" : "GetReportDPRCivil",
    "description" : "Name",
    "version" : "V2",
    "queryString" : "SELECT \nsas.ActivityID, sas.ActivityType AS ActivityTypeID, at.ActivityType AS ActivityTypeName,  \n\nctd.EngDrawingNumber, ctd.SheetNumber, ctd.DetailDrawingNumber, ctd.DetailName, ctd.Description,\n\nIF(sas.ActivityType = 70, CONCAT(cfa.FAPercentCompleted * 100,\"%\") , CONCAT(cfa.FAQuantity,\" yds\") ) AS QuantityInstalled,\n\nats.Status AS CurrentStatus,\ncfa.FARework AS Rework,\ncfa.FANotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\n\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n\nJOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID\nJOIN CivilTrackerDetails ctd\n\tON ctd.BidID = cfa.FABidID\n        \n\nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\n\nUNION\n\n\n\n\nSELECT \nsas.ActivityID, sas.ActivityType AS ActivityTypeID, at.ActivityType AS ActivityTypeName,  \n\n'N/A' AS EngDrawingNumber, 'N/A' AS SheetNumber, 'N/A' AS DetailDrawingNumber, 'N/A' AS DetailName, \nCONCAT('Test Package: ',csell.SellTestPackageNumber) AS Description,\n\n1 AS QuantityInstalled,\nats.Status AS CurrentStatus,\n0 AS Rework,\ncsell.SellNotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\n\nJOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n    \nJOIN CivilSellPackage csell\n\tON csell.ActivityID = sas.ActivityID\n\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day",
    "countQueryString" : "select count(*) from (SELECT \nsas.ActivityID, sas.ActivityType AS ActivityTypeID, at.ActivityType AS ActivityTypeName,  \n\nctd.EngDrawingNumber, ctd.SheetNumber, ctd.DetailDrawingNumber, ctd.DetailName, ctd.Description,\n\nIF(sas.ActivityType = 70, CONCAT(cfa.FAPercentCompleted * 100,\"%\") , CONCAT(cfa.FAQuantity,\" yds\") ) AS QuantityInstalled,\n\nats.Status AS CurrentStatus,\ncfa.FARework AS Rework,\ncfa.FANotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\n\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n\nJOIN CivilFA cfa\n\tON cfa.ActivityID = sas.ActivityID\nJOIN CivilTrackerDetails ctd\n\tON ctd.BidID = cfa.FABidID\n        \n\nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\n\nUNION\n\n\n\n\nSELECT \nsas.ActivityID, sas.ActivityType AS ActivityTypeID, at.ActivityType AS ActivityTypeName,  \n\n'N/A' AS EngDrawingNumber, 'N/A' AS SheetNumber, 'N/A' AS DetailDrawingNumber, 'N/A' AS DetailName, \nCONCAT('Test Package: ',csell.SellTestPackageNumber) AS Description,\n\n1 AS QuantityInstalled,\nats.Status AS CurrentStatus,\n0 AS Rework,\ncsell.SellNotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\n\nJOIN SubsDetails sd\n\tON sd.SubmissionId = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n    \nJOIN CivilSellPackage csell\n\tON csell.ActivityID = sas.ActivityID\n\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ForemanID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "SuperID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "ManagerID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2017-05-01",
      "required" : true
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2018-04-06",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprcivilResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeID",
        "fieldName" : "activityTypeId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "EngDrawingNumber",
        "fieldName" : "engDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailDrawingNumber",
        "fieldName" : "detailDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DetailName",
        "fieldName" : "detailName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityInstalled",
        "fieldName" : "quantityInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CurrentStatus",
        "fieldName" : "currentStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Long",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DateSubmitted",
        "fieldName" : "dateSubmitted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Date",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPREquip" : {
    "name" : "GetReportDPREquip",
    "description" : "name",
    "version" : "V2",
    "queryString" : "SELECT \nsas.ActivityID, sas.ActivityType AS ActivityTypeID, at.ActivityType AS ActivityTypeName,  \n\nefa.FATagNumber AS TagNumber, \nefa.FAActivitySelect AS Description,\nCONCAT(efa.FAPercentCompleted * 100,\"%\") AS QuantityInstalled,\nats.Status AS CurrentStatus,\nefa.FARework AS Rework,\nefa.FANotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\n\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n    \nJOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID \n        \n\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day",
    "countQueryString" : "select count(*) from (SELECT \nsas.ActivityID, sas.ActivityType AS ActivityTypeID, at.ActivityType AS ActivityTypeName,  \n\nefa.FATagNumber AS TagNumber, \nefa.FAActivitySelect AS Description,\nCONCAT(efa.FAPercentCompleted * 100,\"%\") AS QuantityInstalled,\nats.Status AS CurrentStatus,\nefa.FARework AS Rework,\nefa.FANotes AS Notes,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\n\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n    \nJOIN EquipFA efa\n\tON efa.ActivityID = sas.ActivityID \n        \n\nAND (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ForemanID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "SuperID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "ManagerID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2017-05-01",
      "required" : true
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2018-04-06",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprequipResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeID",
        "fieldName" : "activityTypeId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TagNumber",
        "fieldName" : "tagNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Description",
        "fieldName" : "description",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "QuantityInstalled",
        "fieldName" : "quantityInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "CurrentStatus",
        "fieldName" : "currentStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DateSubmitted",
        "fieldName" : "dateSubmitted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Date",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPRPipe" : {
    "name" : "GetReportDPRPipe",
    "description" : "Get the Daily Progress Report of given date range By Foreman",
    "version" : "V1",
    "queryString" : "SELECT \nsas.ActivityID, sas.ActivityType AS ActivityTypeID, at.ActivityType AS ActivityTypeName, \n\npe.ErectionDrawingNumber AS DrawingNumber, \npe.ErectionSheetNumber AS SheetNumber, \npe.ErectionSpool1 AS Spool1, \nIF(pe.ErectionSpool3 IS NULL OR pe.ErectionSpool3 = '', COALESCE(pe.ErectionSpool2, ''),  CONCAT(pe.ErectionSpool2, '...')) AS Spool2,\npe.ErectionPipeSize AS Size, \n(pe.ErectionLengthSpool1 + pe.ErectionLengthSpool2 + pe.ErectionLengthSpool3 + pe.ErectionLengthSpool4 + pe.ErectionLengthSpool5 + pe.ErectionLengthSpool6) AS QuantityInstalled,\nats.Status AS CurrentStatus,\npe.ErectionNotes AS Notes,\npe.ErectionRework AS Rework,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n        \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n    \nJOIN PipeErection pe\n\tON pe.ActivityID = sas.ActivityID\n        \nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID, sas.ActivityType AS ActivityTypeID, at.ActivityType AS ActivityTypeName, \n\npc.ConnectionDrawingNumber, \npc.ConnectionSheetNumber, \nCOALESCE(pc.ConnectionSpool1,'N/A'), \nCOALESCE(pc.ConnectionSpool2,'N/A'), \npc.ConnectionSize, \npc.ConnectionQuantity, \nats.Status,\npc.ConnectionNotes,\npc.ConnectionRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n        \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n    \nJOIN PipeConnection pc\n\tON pc.ActivityID = sas.ActivityID\n    \nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)      \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID, sas.ActivityType AS ActivityTypeID, at.ActivityType AS ActivityTypeName,\n \npw.WeldDrawingNumber, \npw.WeldSheetNumber, \npw.WeldSpool1, \npw.WeldSpool2, \npw.WeldSize, \npw.WeldPercentCompleted, \nats.Status,\npw.WeldNotes,\npw.WeldRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    \n    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n    \nJOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID AND pw.ActivityType = 22\n        \nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID, sas.ActivityType AS ActivityTypeID, at.ActivityType AS ActivityTypeName, \n\nptd.EngDrawingNumber, \nptd.SheetNumber, \n'N/A', \n'N/A', \nptd.Size, \n(pfa.FAQuantity * pfa.FAPercentCompleted), \nats.Status,\npfa.FANotes,\npfa.FARework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n    \nJOIN PipeFA pfa\n\tON pfa.ActivityID = sas.ActivityID\nJOIN PipeTrackerDetails ptd\n\tON ptd.BidID = pfa.FABidID\n    \nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)       \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day",
    "countQueryString" : "select count(*) from (SELECT \nsas.ActivityID, sas.ActivityType AS ActivityTypeID, at.ActivityType AS ActivityTypeName, \n\npe.ErectionDrawingNumber AS DrawingNumber, \npe.ErectionSheetNumber AS SheetNumber, \npe.ErectionSpool1 AS Spool1, \nIF(pe.ErectionSpool3 IS NULL OR pe.ErectionSpool3 = '', COALESCE(pe.ErectionSpool2, ''),  CONCAT(pe.ErectionSpool2, '...')) AS Spool2,\npe.ErectionPipeSize AS Size, \n(pe.ErectionLengthSpool1 + pe.ErectionLengthSpool2 + pe.ErectionLengthSpool3 + pe.ErectionLengthSpool4 + pe.ErectionLengthSpool5 + pe.ErectionLengthSpool6) AS QuantityInstalled,\nats.Status AS CurrentStatus,\npe.ErectionNotes AS Notes,\npe.ErectionRework AS Rework,\nDATE(sd.ReceivedTime) AS DateSubmitted\n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n        \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n    \nJOIN PipeErection pe\n\tON pe.ActivityID = sas.ActivityID\n        \nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)     \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID, sas.ActivityType AS ActivityTypeID, at.ActivityType AS ActivityTypeName, \n\npc.ConnectionDrawingNumber, \npc.ConnectionSheetNumber, \nCOALESCE(pc.ConnectionSpool1,'N/A'), \nCOALESCE(pc.ConnectionSpool2,'N/A'), \npc.ConnectionSize, \npc.ConnectionQuantity, \nats.Status,\npc.ConnectionNotes,\npc.ConnectionRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n        \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n    \nJOIN PipeConnection pc\n\tON pc.ActivityID = sas.ActivityID\n    \nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)      \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID, sas.ActivityType AS ActivityTypeID, at.ActivityType AS ActivityTypeName,\n \npw.WeldDrawingNumber, \npw.WeldSheetNumber, \npw.WeldSpool1, \npw.WeldSpool2, \npw.WeldSize, \npw.WeldPercentCompleted, \nats.Status,\npw.WeldNotes,\npw.WeldRework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    \n    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n    \nJOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID AND pw.ActivityType = 22\n        \nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)    \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day\n\n\n\nUNION\n\n\n\nSELECT\nsas.ActivityID, sas.ActivityType AS ActivityTypeID, at.ActivityType AS ActivityTypeName, \n\nptd.EngDrawingNumber, \nptd.SheetNumber, \n'N/A', \n'N/A', \nptd.Size, \n(pfa.FAQuantity * pfa.FAPercentCompleted), \nats.Status,\npfa.FANotes,\npfa.FARework,\nDATE(sd.ReceivedTime) \n\nFROM SubmissionActivityStatus sas\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    \nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n    \nJOIN PipeFA pfa\n\tON pfa.ActivityID = sas.ActivityID\nJOIN PipeTrackerDetails ptd\n\tON ptd.BidID = pfa.FABidID\n    \nWHERE (tc.Foreman LIKE :ForemanID OR tcr.Foreman LIKE :ForemanID)\nAND (tc.Superintendent LIKE :SuperID OR tcr.Superintendent LIKE :SuperID)\nAND (tc.AreaManager LIKE :ManagerID OR tc.SiteManager LIKE :ManagerID OR tc.ConstructionManager LIKE :ManagerID OR tc.ProjectManager LIKE :ManagerID OR\n\t tcr.AreaManager LIKE :ManagerID OR tcr.SiteManager LIKE :ManagerID OR tcr.ConstructionManager LIKE :ManagerID OR tcr.ProjectManager LIKE :ManagerID)       \nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate + INTERVAL 1 day) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "ForemanID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "SuperID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ManagerID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2017-05-01",
      "required" : false
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2018-04-06",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprpipeResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeID",
        "fieldName" : "activityTypeId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ActivityTypeName",
        "fieldName" : "activityTypeName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "DrawingNumber",
        "fieldName" : "drawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SheetNumber",
        "fieldName" : "sheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Spool1",
        "fieldName" : "spool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Spool2",
        "fieldName" : "spool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Size",
        "fieldName" : "size",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "QuantityInstalled",
        "fieldName" : "quantityInstalled",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Double",
          "list" : false
        }
      }, {
        "name" : "CurrentStatus",
        "fieldName" : "currentStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Notes",
        "fieldName" : "notes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Rework",
        "fieldName" : "rework",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DateSubmitted",
        "fieldName" : "dateSubmitted",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Date",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPRSteelCondensed" : {
    "name" : "GetReportDPRSteelCondensed",
    "description" : "Get Daily Progress Report (steel)  Input users, and date range",
    "version" : "V1",
    "queryString" : "SELECT SortGroup1, PieceNumber, \nsum(ShakeQuantity) AS ShakeQuantity, \nsum(ErectQuantity) AS ErectQuantity, \nsum(BoltoutQuantity) AS BoltoutQuantity, \nsum(ImpQuantity) AS ImpQuantity, \nsum(WeldQuantity) AS WeldQuantity, \nsum(SellQuantity) AS SellQuantity, \nsum(DemoQuantity) AS DemoQuantity, \nsum(MiscQuantity) AS MiscQuantity, \nReceivedTime \nFROM(SELECT  \nstls.FASortGroup1 AS SortGroup1, stls.FAPieceNumber AS PieceNumber, \nsum(COALESCE(stls.FAQuantity,0)) AS ShakeQuantity,\n0 AS ErectQuantity,\n0 AS BoltoutQuantity,\n0 AS ImpQuantity,\n0 AS WeldQuantity,\n0 AS SellQuantity,\n0 AS DemoQuantity,\n0 AS MiscQuantity,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelFA stls\n\tON stls.ActivityID = sas.ActivityID AND sas.ActivityID = 61\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstle.FASortGroup1 AS SortGroup1, stle.FAPieceNumber AS PieceNumber,\n0,\nTRUNCATE(sum(COALESCE(stle.FAQuantity * stle.FAPercentCompleted,0)),2),\n0,0,0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelFA stle\n\tON stle.ActivityID = sas.ActivityID AND sas.Activitytype = 62\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlb.FASortGroup1 AS SortGroup1, stlb.FAPieceNumber AS PieceNumber,\n0,0,\nTRUNCATE(sum(COALESCE(stlb.FAQuantity * stlb.FAPercentCompleted,0)),2),\n0,0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelFA stlb\n\tON stlb.ActivityID = sas.ActivityID AND sas.ActivityType = 63\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstli.FASortGroup1 AS SortGroup1, stli.FAPieceNumber AS PieceNumber,\n0,0,0,\nTRUNCATE(sum(COALESCE(stli.FAQuantity * stli.FAPercentCompleted,0)),2),\n0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelFA stli\n\tON stli.ActivityID = sas.ActivityID AND sas.ActivityType = 64\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlw.FASortGroup1 AS SortGroup1, stlw.FAPieceNumber AS PieceNumber,\n0,0,0,0,\nTRUNCATE(sum(COALESCE(stlw.FAQuantity * stlw.FAPercentCompleted,0)),2),\n0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelFA stlw\n\tON stlw.ActivityID = sas.ActivityID AND sas.ActivityType = 68\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlsell.FASortGroup1 AS SortGroup1, stlsell.FAPieceNumber AS PieceNumber,\n0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stlsell.FAQuantity,0)),2),\n0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelFA stlsell\n\tON stlsell.ActivityID = sas.ActivityID AND sas.ActivityType = 65\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstd.SortGroup1 AS SortGroup1, std.Description AS PieceNumber,\n0,0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stld.DemoPercentCompleted * std.TakeOffQuantity,0)),2),\n0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    \nJOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nJOIN SteelTrackerDetails std\n\tON std.BidID = stld.DemoBidID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstd.SortGroup1 AS SortGroup1, std.Description AS PieceNumber,\n0,0,0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stlm.MiscPercentCompleted * std.TakeOffQuantity,0)),2),\n\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    \nJOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\nJOIN SteelTrackerDetails std\n\tON std.BidID = stlm.MiscBidID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)\n) t\nGROUP BY t.SortGroup1, t.PieceNumber, Date(t.ReceivedTime)",
    "countQueryString" : "select count(*) from (SELECT SortGroup1, PieceNumber, \nsum(ShakeQuantity) AS ShakeQuantity, \nsum(ErectQuantity) AS ErectQuantity, \nsum(BoltoutQuantity) AS BoltoutQuantity, \nsum(ImpQuantity) AS ImpQuantity, \nsum(WeldQuantity) AS WeldQuantity, \nsum(SellQuantity) AS SellQuantity, \nsum(DemoQuantity) AS DemoQuantity, \nsum(MiscQuantity) AS MiscQuantity, \nReceivedTime \nFROM(SELECT  \nstls.FASortGroup1 AS SortGroup1, stls.FAPieceNumber AS PieceNumber, \nsum(COALESCE(stls.FAQuantity,0)) AS ShakeQuantity,\n0 AS ErectQuantity,\n0 AS BoltoutQuantity,\n0 AS ImpQuantity,\n0 AS WeldQuantity,\n0 AS SellQuantity,\n0 AS DemoQuantity,\n0 AS MiscQuantity,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelFA stls\n\tON stls.ActivityID = sas.ActivityID AND sas.ActivityID = 61\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstle.FASortGroup1 AS SortGroup1, stle.FAPieceNumber AS PieceNumber,\n0,\nTRUNCATE(sum(COALESCE(stle.FAQuantity * stle.FAPercentCompleted,0)),2),\n0,0,0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelFA stle\n\tON stle.ActivityID = sas.ActivityID AND sas.Activitytype = 62\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlb.FASortGroup1 AS SortGroup1, stlb.FAPieceNumber AS PieceNumber,\n0,0,\nTRUNCATE(sum(COALESCE(stlb.FAQuantity * stlb.FAPercentCompleted,0)),2),\n0,0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelFA stlb\n\tON stlb.ActivityID = sas.ActivityID AND sas.ActivityType = 63\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstli.FASortGroup1 AS SortGroup1, stli.FAPieceNumber AS PieceNumber,\n0,0,0,\nTRUNCATE(sum(COALESCE(stli.FAQuantity * stli.FAPercentCompleted,0)),2),\n0,0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelFA stli\n\tON stli.ActivityID = sas.ActivityID AND sas.ActivityType = 64\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlw.FASortGroup1 AS SortGroup1, stlw.FAPieceNumber AS PieceNumber,\n0,0,0,0,\nTRUNCATE(sum(COALESCE(stlw.FAQuantity * stlw.FAPercentCompleted,0)),2),\n0,0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelFA stlw\n\tON stlw.ActivityID = sas.ActivityID AND sas.ActivityType = 68\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstlsell.FASortGroup1 AS SortGroup1, stlsell.FAPieceNumber AS PieceNumber,\n0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stlsell.FAQuantity,0)),2),\n0,0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\nJOIN SteelFA stlsell\n\tON stlsell.ActivityID = sas.ActivityID AND sas.ActivityType = 65\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstd.SortGroup1 AS SortGroup1, std.Description AS PieceNumber,\n0,0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stld.DemoPercentCompleted * std.TakeOffQuantity,0)),2),\n0,\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    \nJOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nJOIN SteelTrackerDetails std\n\tON std.BidID = stld.DemoBidID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)   \n\n\n\nUNION \n\n\n\nSELECT  \nstd.SortGroup1 AS SortGroup1, std.Description AS PieceNumber,\n0,0,0,0,0,0,0,\nTRUNCATE(sum(COALESCE(stlm.MiscPercentCompleted * std.TakeOffQuantity,0)),2),\n\nsd.ReceivedTime\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n    \nJOIN SteelMisc stlm\n\tON stlm.ActivityID = sas.ActivityID\nJOIN SteelTrackerDetails std\n\tON std.BidID = stlm.MiscBidID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\n\nGROUP BY SortGroup1, PieceNumber, Date(sd.ReceivedTime)\n) t\nGROUP BY t.SortGroup1, t.PieceNumber, Date(t.ReceivedTime)) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "PM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "ConstM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "SiteM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "AreaM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "Super",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "GF",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "Foreman",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : true
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2017-05-01",
      "required" : true
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2018-04-06",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprsteelCondensedResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SortGroup1",
        "fieldName" : "sortGroup1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceNumber",
        "fieldName" : "pieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ShakeQuantity",
        "fieldName" : "shakeQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigInteger",
          "list" : false
        }
      }, {
        "name" : "ErectQuantity",
        "fieldName" : "erectQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "BoltoutQuantity",
        "fieldName" : "boltoutQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ImpQuantity",
        "fieldName" : "impQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "WeldQuantity",
        "fieldName" : "weldQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "SellQuantity",
        "fieldName" : "sellQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "DemoQuantity",
        "fieldName" : "demoQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "MiscQuantity",
        "fieldName" : "miscQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDPRSteelDetailed" : {
    "name" : "GetReportDPRSteelDetailed",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT  \n(IF(stls.FASortGroup1 IS NOT NULL, stls.FASortGroup1,\nIF(stle.FASortGroup1 IS NOT NULL, stle.FASortGroup1,\nIF(stlb.FASortGroup1 IS NOT NULL, stlb.FASortGroup1,\nIF(stli.FASortGroup1 IS NOT NULL, stli.FASortGroup1,\nIF(stlw.FASortGroup1 IS NOT NULL, stlw.FASortGroup1,\nIF(stlsell.FASortGroup1 IS NOT NULL, stlsell.FASortGroup1,\nIF(stlm.MiscSortGroup1 IS NOT NULL, stlm.MiscSortGroup1,0)\n))))))) AS SortGroup1,\n\n(IF(stls.FAPieceNumber IS NOT NULL, stls.FAPieceNumber,\nIF(stle.FAPieceNumber IS NOT NULL, stle.FAPieceNumber,\nIF(stlb.FAPieceNumber IS NOT NULL, stlb.FAPieceNumber,\nIF(stli.FAPieceNumber IS NOT NULL, stli.FAPieceNumber,\nIF(stlw.FAPieceNumber IS NOT NULL, stlw.FAPieceNumber,\nIF(stlsell.FAPieceNumber IS NOT NULL, stlsell.FAPieceNumber,\nIF(stlm.MiscPieceNumber IS NOT NULL, stlm.MiscPieceNumber,0)\n))))))) AS PieceNumber,\n\nCOALESCE(stls.FAQuantity,0) AS ShakeQuantity,\nCOALESCE(stle.FAQuantity,0) AS ErectQuantity,\nCONCAT(TRUNCATE(COALESCE(stle.FAPercentCompleted,0) * 100,0), '%') AS ErectPercent,\nCOALESCE(stlb.FAQuantity,0) AS BoltoutQuantity,\nCONCAT(TRUNCATE(COALESCE(stlb.FAPercentCompleted,0) * 100,0), '%') AS BoltoutPercent,\nCOALESCE(stli.FAQuantity,0) AS ImpQuantity,\nCONCAT(TRUNCATE(COALESCE(stli.FAPercentCompleted,0) * 100,0), '%') AS ImpPercent,\nCOALESCE(stlw.FAQuantity,0) AS WeldQuantity,\nCONCAT(TRUNCATE(COALESCE(stlw.FAPercentCompleted,0) * 100,0), '%') AS WeldPercent,\nCOALESCE(stlsell.FAQuantity,0) AS SellQuantity,\nCOALESCE(stld.DemoQuantity,0) AS DemoQuantity,\nCOALESCE(stlm.MiscQuantity,0) AS MiscQuantity,\nDATE(sd.ReceivedTime) AS ReceivedTime,\n(ats.Status) AS CurrentStatus\n\nFROM SubmissionActivityStatus sas\n\nJOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n\nLEFT JOIN SteelFA stls\n\tON stls.ActivityID = sas.ActivityID AND sas.ActivityType = 61\nLEFT JOIN SteelFA stle\n\tON stle.ActivityID = sas.ActivityID AND sas.ActivityType = 62\nLEFT JOIN SteelFA stlb\n\tON stlb.ActivityID = sas.ActivityID AND sas.ActivityType = 63\nLEFT JOIN SteelFA stli\n\tON stli.ActivityID = sas.ActivityID AND sas.ActivityType = 64\nLEFT JOIN SteelFA stlw\n\tON stlw.ActivityID = sas.ActivityID AND sas.ActivityType = 68\nLEFT JOIN SteelFA stlsell\n\tON stlsell.ActivityID = sas.ActivityID AND sas.ActivityType = 65\nLEFT JOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nLEFT JOIN SteelMisc stlm\n\tON  stlm.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sas.ActivityType IN (61,62,63,64,65,67,68,96)\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\nGROUP BY sas.ActivityID, Date(sd.ReceivedTime)",
    "countQueryString" : "select count(*) from (SELECT  \n(IF(stls.FASortGroup1 IS NOT NULL, stls.FASortGroup1,\nIF(stle.FASortGroup1 IS NOT NULL, stle.FASortGroup1,\nIF(stlb.FASortGroup1 IS NOT NULL, stlb.FASortGroup1,\nIF(stli.FASortGroup1 IS NOT NULL, stli.FASortGroup1,\nIF(stlw.FASortGroup1 IS NOT NULL, stlw.FASortGroup1,\nIF(stlsell.FASortGroup1 IS NOT NULL, stlsell.FASortGroup1,\nIF(stlm.MiscSortGroup1 IS NOT NULL, stlm.MiscSortGroup1,0)\n))))))) AS SortGroup1,\n\n(IF(stls.FAPieceNumber IS NOT NULL, stls.FAPieceNumber,\nIF(stle.FAPieceNumber IS NOT NULL, stle.FAPieceNumber,\nIF(stlb.FAPieceNumber IS NOT NULL, stlb.FAPieceNumber,\nIF(stli.FAPieceNumber IS NOT NULL, stli.FAPieceNumber,\nIF(stlw.FAPieceNumber IS NOT NULL, stlw.FAPieceNumber,\nIF(stlsell.FAPieceNumber IS NOT NULL, stlsell.FAPieceNumber,\nIF(stlm.MiscPieceNumber IS NOT NULL, stlm.MiscPieceNumber,0)\n))))))) AS PieceNumber,\n\nCOALESCE(stls.FAQuantity,0) AS ShakeQuantity,\nCOALESCE(stle.FAQuantity,0) AS ErectQuantity,\nCONCAT(TRUNCATE(COALESCE(stle.FAPercentCompleted,0) * 100,0), '%') AS ErectPercent,\nCOALESCE(stlb.FAQuantity,0) AS BoltoutQuantity,\nCONCAT(TRUNCATE(COALESCE(stlb.FAPercentCompleted,0) * 100,0), '%') AS BoltoutPercent,\nCOALESCE(stli.FAQuantity,0) AS ImpQuantity,\nCONCAT(TRUNCATE(COALESCE(stli.FAPercentCompleted,0) * 100,0), '%') AS ImpPercent,\nCOALESCE(stlw.FAQuantity,0) AS WeldQuantity,\nCONCAT(TRUNCATE(COALESCE(stlw.FAPercentCompleted,0) * 100,0), '%') AS WeldPercent,\nCOALESCE(stlsell.FAQuantity,0) AS SellQuantity,\nCOALESCE(stld.DemoQuantity,0) AS DemoQuantity,\nCOALESCE(stlm.MiscQuantity,0) AS MiscQuantity,\nDATE(sd.ReceivedTime) AS ReceivedTime,\n(ats.Status) AS CurrentStatus\n\nFROM SubmissionActivityStatus sas\n\nJOIN SubsDetails sd\n\tON sas.SubmissionID = sd.SubmissionId\nLEFT JOIN PSA.tblCrews tc\n\tON tc.ID = sd.CrewID AND tc.Rev = sd.CrewRev\nLEFT JOIN PSA.tblCrewsRev tcr\n\tON tcr.OrgID = sd.CrewID AND tcr.Rev = sd.CrewRev\n\nJOIN PSA.REF_ActivityTypes at\n\tON at.ID = sas.ActivityType\nJOIN PSA.REF_ActivityStatuses ats\n\tON ats.ID = sas.fk_ActivityStatus\n\nLEFT JOIN SteelFA stls\n\tON stls.ActivityID = sas.ActivityID AND sas.ActivityType = 61\nLEFT JOIN SteelFA stle\n\tON stle.ActivityID = sas.ActivityID AND sas.ActivityType = 62\nLEFT JOIN SteelFA stlb\n\tON stlb.ActivityID = sas.ActivityID AND sas.ActivityType = 63\nLEFT JOIN SteelFA stli\n\tON stli.ActivityID = sas.ActivityID AND sas.ActivityType = 64\nLEFT JOIN SteelFA stlw\n\tON stlw.ActivityID = sas.ActivityID AND sas.ActivityType = 68\nLEFT JOIN SteelFA stlsell\n\tON stlsell.ActivityID = sas.ActivityID AND sas.ActivityType = 65\nLEFT JOIN SteelDemo stld\n\tON stld.ActivityID = sas.ActivityID\nLEFT JOIN SteelMisc stlm\n\tON  stlm.ActivityID = sas.ActivityID\n\nWHERE ((\n\t(tc.ProjectManager LIKE :PM OR tc.ConstructionManager LIKE :ConstM OR tc.SiteManager LIKE :SiteM OR tc.AreaManager LIKE :AreaM) \n\tAND tc.Superintendent LIKE :Super \n\tAND (tc.GF LIKE :GF OR tc.Foreman LIKE :Foreman) \n    ) OR (\n\t(tcr.ProjectManager LIKE :PM OR tcr.ConstructionManager LIKE :ConstM OR tcr.SiteManager LIKE :SiteM OR tcr.AreaManager LIKE :AreaM) \n\tAND tcr.Superintendent LIKE :Super \n\tAND (tcr.GF LIKE :GF OR tcr.Foreman LIKE :Foreman)\n    ))\nAND sas.ActivityType IN (61,62,63,64,65,67,68,96)\nAND sd.ReceivedTime BETWEEN :StartDate AND :EndDate\nGROUP BY sas.ActivityID, Date(sd.ReceivedTime)) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "PM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "ConstM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "SiteM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "AreaM",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "Super",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "GF",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "Foreman",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "%",
      "required" : false
    }, {
      "name" : "StartDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2017-05-01",
      "required" : false
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2018-04-06",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDprsteelDetailedResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "SortGroup1",
        "fieldName" : "sortGroup1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "PieceNumber",
        "fieldName" : "pieceNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ShakeQuantity",
        "fieldName" : "shakeQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ErectQuantity",
        "fieldName" : "erectQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ErectPercent",
        "fieldName" : "erectPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "BoltoutQuantity",
        "fieldName" : "boltoutQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "BoltoutPercent",
        "fieldName" : "boltoutPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ImpQuantity",
        "fieldName" : "impQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ImpPercent",
        "fieldName" : "impPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldQuantity",
        "fieldName" : "weldQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "WeldPercent",
        "fieldName" : "weldPercent",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "SellQuantity",
        "fieldName" : "sellQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "DemoQuantity",
        "fieldName" : "demoQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "MiscQuantity",
        "fieldName" : "miscQuantity",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Short",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Date",
          "list" : false
        }
      }, {
        "name" : "CurrentStatus",
        "fieldName" : "currentStatus",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetReportDWRByDate" : {
    "name" : "GetReportDWRByDate",
    "description" : "Get Daily Weld Report BY Date Range",
    "version" : "V1",
    "queryString" : "SELECT sas.ActivityID AS FieldActivityID, \npw.WeldSpool1, pw.WeldSpool2, pw.WeldLineNumber, pw.WeldDrawingNumber, pw.WeldSheetNumber, pw.WeldNumber,\npw.WeldStencil, pw.WeldSize, pw.WeldThickness, pw.WeldMaterial, pw.WeldType, pw.WeldLineSpec, pw.WeldProcedure, pw.WeldNotes,\nsd.ReceivedTime\nFROM SubmissionActivityStatus sas\n\nJOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID\n\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\n    \nWHERE sd.ReceivedTime BETWEEN :BeginDate and :EndDate\n\nORDER BY sd.ReceivedTime",
    "countQueryString" : "select count(*) from (SELECT sas.ActivityID AS FieldActivityID, \npw.WeldSpool1, pw.WeldSpool2, pw.WeldLineNumber, pw.WeldDrawingNumber, pw.WeldSheetNumber, pw.WeldNumber,\npw.WeldStencil, pw.WeldSize, pw.WeldThickness, pw.WeldMaterial, pw.WeldType, pw.WeldLineSpec, pw.WeldProcedure, pw.WeldNotes,\nsd.ReceivedTime\nFROM SubmissionActivityStatus sas\n\nJOIN PipeWeld pw\n\tON pw.ActivityID = sas.ActivityID\n\nJOIN SubsDetails sd\n\tON sd.SubmissionID = sas.SubmissionID\n    \nWHERE sd.ReceivedTime BETWEEN :BeginDate and :EndDate\n\nORDER BY sd.ReceivedTime) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "BeginDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2017-05-01",
      "required" : true
    }, {
      "name" : "EndDate",
      "type" : "date",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2018-04-06",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetReportDwrbyDateResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "FieldActivityID",
        "fieldName" : "fieldActivityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "WeldSpool1",
        "fieldName" : "weldSpool1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSpool2",
        "fieldName" : "weldSpool2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldLineNumber",
        "fieldName" : "weldLineNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldDrawingNumber",
        "fieldName" : "weldDrawingNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSheetNumber",
        "fieldName" : "weldSheetNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldNumber",
        "fieldName" : "weldNumber",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldStencil",
        "fieldName" : "weldStencil",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldSize",
        "fieldName" : "weldSize",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "WeldThickness",
        "fieldName" : "weldThickness",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldMaterial",
        "fieldName" : "weldMaterial",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldType",
        "fieldName" : "weldType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldLineSpec",
        "fieldName" : "weldLineSpec",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldProcedure",
        "fieldName" : "weldProcedure",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "WeldNotes",
        "fieldName" : "weldNotes",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingCivilPunch" : {
    "name" : "GetSettingCivilPunch",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'CivilSellPunchHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'CivilSellPunchHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingCivilPunchResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingCivilWork" : {
    "name" : "GetSettingCivilWork",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'CivilWorkHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'CivilWorkHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingCivilWorkResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeCTOPercent" : {
    "name" : "GetSettingPipeCTOPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'PipeCTOHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'PipeCTOHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeCtopercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeHydroPercent" : {
    "name" : "GetSettingPipeHydroPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'PipeHydroHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'PipeHydroHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeHydroPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeMechPercent" : {
    "name" : "GetSettingPipeMechPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'PipeMechHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'PipeMechHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeMechPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeRFTPercent" : {
    "name" : "GetSettingPipeRFTPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'PipeRFTHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'PipeRFTHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeRftpercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingPipeTestingPercent" : {
    "name" : "GetSettingPipeTestingPercent",
    "description" : "Gets the Percent of Mech hours for testing",
    "version" : "V1",
    "queryString" : "SELECT *\nFROM SETTINGS\nWHERE Label = 'PipeTestingHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT *\nFROM SETTINGS\nWHERE Label = 'PipeTestingHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingPipeTestingPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingProductivityIntervals" : {
    "name" : "GetSettingProductivityIntervals",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT \ns1.Value1 AS Interval1, \ns2.Value1 AS Interval2, \ns3.Value1 AS Interval3, \ns4.Value1 AS Interval4\n\nFROM SETTINGS s1\n\nJOIN SETTINGS s2\n\tON s2.Label = 'ProductivityInterval2'\nJOIN SETTINGS s3\n\tON s3.Label = 'ProductivityInterval3'\nJOIN SETTINGS s4\n\tON s4.Label = 'ProductivityInterval4'\n\nWHERE s1.Label = 'ProductivityInterval1'",
    "countQueryString" : "select count(*) from (SELECT \ns1.Value1 AS Interval1, \ns2.Value1 AS Interval2, \ns3.Value1 AS Interval3, \ns4.Value1 AS Interval4\n\nFROM SETTINGS s1\n\nJOIN SETTINGS s2\n\tON s2.Label = 'ProductivityInterval2'\nJOIN SETTINGS s3\n\tON s3.Label = 'ProductivityInterval3'\nJOIN SETTINGS s4\n\tON s4.Label = 'ProductivityInterval4'\n\nWHERE s1.Label = 'ProductivityInterval1') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingProductivityIntervalsResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Interval1",
        "fieldName" : "interval1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Interval2",
        "fieldName" : "interval2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Interval3",
        "fieldName" : "interval3",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      }, {
        "name" : "Interval4",
        "fieldName" : "interval4",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Float",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelBoltoutPercent" : {
    "name" : "GetSettingSteelBoltoutPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelBoltoutHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelBoltoutHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelBoltoutPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelErectPercent" : {
    "name" : "GetSettingSteelErectPercent",
    "description" : "SteelErectHoursPercent",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelErectHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelErectHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelErectPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelImpPercent" : {
    "name" : "GetSettingSteelImpPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelImpHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelImpHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelImpPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelSellPercent" : {
    "name" : "GetSettingSteelSellPercent",
    "description" : "GetSettingSteelSellPercent",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelSellHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelSellHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelSellPercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSettingSteelShakePercent" : {
    "name" : "GetSettingSteelShakePercent",
    "description" : "SteelShakeHoursPercent",
    "version" : "V1",
    "queryString" : "SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelShakeHoursPercent'",
    "countQueryString" : "select count(*) from (SELECT * \nFROM SETTINGS\nWHERE Label = 'SteelShakeHoursPercent') wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSettingSteelShakePercentResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "Label",
        "fieldName" : "label",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Value1",
        "fieldName" : "value1",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.math.BigDecimal",
          "list" : false
        }
      }, {
        "name" : "Value2",
        "fieldName" : "value2",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSubDetailsSuper" : {
    "name" : "GetSubDetailsSuper",
    "description" : "Return condensed listing of Submission Details info",
    "version" : "V2",
    "queryString" : "SELECT u.FullName, u.Email, sd.StartTime, sd.CompleteTime, sd.ReceivedTime, ssig.SignatureData \nFROM SubsDetails sd\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\nLEFT JOIN SubsSignatures ssig\n\tOn ssig.SubmissionID = sd.SubmissionID\nWHERE sd.SubmissionID = :SubmissionID",
    "countQueryString" : "select count(*) from (SELECT u.FullName, u.Email, sd.StartTime, sd.CompleteTime, sd.ReceivedTime, ssig.SignatureData \nFROM SubsDetails sd\nJOIN PSA.tblUserPSA u\n\tON u.ID = sd.UserID\nLEFT JOIN SubsSignatures ssig\n\tOn ssig.SubmissionID = sd.SubmissionID\nWHERE sd.SubmissionID = :SubmissionID) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "SubmissionID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "466",
      "required" : true
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSubDetailsSuperResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "FullName",
        "fieldName" : "fullName",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Email",
        "fieldName" : "email",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "StartTime",
        "fieldName" : "startTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "CompleteTime",
        "fieldName" : "completeTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "ReceivedTime",
        "fieldName" : "receivedTime",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      }, {
        "name" : "SignatureData",
        "fieldName" : "signatureData",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      } ]
    }
  },
  "GetSuperRecentActivites" : {
    "name" : "GetSuperRecentActivites",
    "description" : "Get recent activites modified by a given user super review page",
    "version" : "V1",
    "queryString" : "SELECT sas.ActivityID, at.ActivityType, ats.Status, sas.TimeStamp\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\ton at.ID = sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats \n\ton ats.ID = sas.fk_ActivityStatus\n\nWHERE sas.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW() \nAND sas.ActivityType <> 0\nAND sas.fk_ActivityStatus NOT IN (1,4,6,8,10) \nAND sas.fk_LastModifiedBy IN (:UserID , :SelectedSuper)\nORDER BY sas.TimeStamp DESC",
    "countQueryString" : "select count(*) from (SELECT sas.ActivityID, at.ActivityType, ats.Status, sas.TimeStamp\n\nFROM SubmissionActivityStatus sas\n\nLEFT JOIN PSA.REF_ActivityTypes at\n\ton at.ID = sas.ActivityType\nLEFT JOIN PSA.REF_ActivityStatuses ats \n\ton ats.ID = sas.fk_ActivityStatus\n\nWHERE sas.TimeStamp BETWEEN now() - INTERVAL 2 DAY AND NOW() \nAND sas.ActivityType <> 0\nAND sas.fk_ActivityStatus NOT IN (1,4,6,8,10) \nAND sas.fk_LastModifiedBy IN (:UserID , :SelectedSuper)\nORDER BY sas.TimeStamp DESC) wmTempTable",
    "nativeSql" : true,
    "fetchCount" : true,
    "type" : "SELECT",
    "parameters" : [ {
      "name" : "UserID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SelectedSuper",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "46",
      "required" : false
    } ],
    "request" : {
      "wrapped" : false,
      "typeRef" : null,
      "method" : "GET"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "com.psabackoffice.job1111.models.query.GetSuperRecentActivitesResponse",
      "returns" : "CUSTOM",
      "responseType" : "PAGINATED",
      "properties" : [ {
        "name" : "ActivityID",
        "fieldName" : "activityId",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.Integer",
          "list" : false
        }
      }, {
        "name" : "ActivityType",
        "fieldName" : "activityType",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "Status",
        "fieldName" : "status",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.lang.String",
          "list" : false
        }
      }, {
        "name" : "TimeStamp",
        "fieldName" : "timeStamp",
        "optional" : false,
        "fieldType" : {
          "type" : "PRIMITIVE",
          "typeRef" : "java.sql.Timestamp",
          "list" : false
        }
      } ]
    }
  },
  "UpdateCivilFA" : {
    "name" : "UpdateCivilFA",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `CivilFA` \nSET \n`FABidID` = :BidID,\n`FAQuantity`= :Quantity,\n`FAPercentCompleted`= :Percent,\n`FARework`= :Rework,\n`FANotes`= :Notes \nWHERE `ActivityID`= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateCivilFaRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateCivilFAQuantity" : {
    "name" : "UpdateCivilFAQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `CivilFA` \nSET \n`FAQuantity`= :Quantity,\n`FAPercentCompleted`= :Percent\nWHERE `ActivityID`= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateCivilFaquantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateCivilSellPackage" : {
    "name" : "UpdateCivilSellPackage",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `CivilSellPackage` \nSET \n`SellTestPackageNumber`= :TestPackageNumber, \n`SellNotes`= :Notes \nWHERE `ActivityID`= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "TestPackageNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "Update SellPackage Test",
      "required" : false
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateCivilSellPackageRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateEquipFA" : {
    "name" : "UpdateEquipFA",
    "description" : "name",
    "version" : "V2",
    "queryString" : "UPDATE `EquipFA` \nSET \n`FABidID`= :BidID,\n`FAQuantity`= :Quantity,\n`FAPercentCompleted`= :Percent,\n`FARework`= :Rework,\n`FANotes`= :Notes \nWHERE `ActivityID`= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "7",
      "required" : true
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "ActivityID",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateEquipFaRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateEquipFAQuantity" : {
    "name" : "UpdateEquipFAQuantity",
    "description" : "Update Quantity only for Equip FA",
    "version" : "V2",
    "queryString" : "UPDATE `EquipFA` \nSET \n`FAQuantity`= :Quantity,\n`FAPercentCompleted`= :Percent\nWHERE `ActivityID`= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : ".4",
      "required" : true
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2719",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateEquipFaquantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeBoltUp" : {
    "name" : "UpdatePipeBoltUp",
    "description" : "Updates the Job####.SubsBoltUp table with data from inputs",
    "version" : "V1",
    "queryString" : "UPDATE PipeConnection\nSET ConnectionBidID = :BidID,\nConnectionSpool1 = :Spool1,\nConnectionSpool2 = :Spool2,\nConnectionDrawingNumber = :DrawingNumber,\nConnectionLineNumber = :LineNumber,\nConnectionSheetNumber = :SheetNumber,\nConnectionSize = :Size,\nConnectionQuantity = :Quantity,\nConnectionRework = :Rework,\nConnectionNotes = :Notes\nWHERE ActivityID= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : null,
      "required" : false
    }, {
      "name" : "Spool1",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1-A",
      "required" : false
    }, {
      "name" : "Spool2",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1-B",
      "required" : false
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "dwg1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "line1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "6",
      "required" : true
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "0",
      "required" : true
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "Test Notes",
      "required" : false
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "0",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeBoltUpRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeBoltupQuantity" : {
    "name" : "UpdatePipeBoltupQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE PipeConnection\nSET ConnectionQuantity = :Quantity\nWHERE ActivityID = :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2",
      "required" : true
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "0",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeBoltupQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeErection" : {
    "name" : "UpdatePipeErection",
    "description" : "Updates Job####.SubsErection table with data inputs",
    "version" : "V1",
    "queryString" : "UPDATE PipeErection\nSET\nErectionBidID = :BidID,\nErectionSpool1 = :Spool1,\nErectionLengthSpool1 = :Spool1Length,\nErectionSpool2 = :Spool2,\nErectionLengthSpool2 = :Spool2Length,\nErectionSpool3 = :Spool3,\nErectionLengthSpool3 = :Spool3Length,\nErectionSpool4 = :Spool4,\nErectionLengthSpool4 = :Spool4Length,\nErectionSpool5 = :Spool5,\nErectionLengthSpool5 = :Spool5Length,\nErectionSpool6 = :Spool6,\nErectionLengthSpool6 = :Spool6Length,\nErectionOnCords = :OnCords,\nErectionDrawingNumber = :DrawingNumber,\nErectionLineNumber = :LineNumber,\nErectionSheetNumber = :SheetNumber,\nErectionPipeSize = :Size,\nErectionRework = :Rework,\nErectionNotes = :Notes\nWHERE ActivityID = :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : null,
      "required" : false
    }, {
      "name" : "Spool1",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Spool1Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Spool2",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool2Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool3",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool3Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool4",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool4Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool5",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool5Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool6",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Spool6Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "OnCords",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "0",
      "required" : true
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "notes",
      "required" : false
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "649",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeErectionRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeErectionQuantity" : {
    "name" : "UpdatePipeErectionQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE PipeErection\nSET\nErectionLengthSpool1 = :Spool1Length\nWHERE ActivityID = :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Spool1Length",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "333",
      "required" : false
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "649",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeErectionQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeFA" : {
    "name" : "UpdatePipeFA",
    "description" : "Update PipeFA type activities",
    "version" : "V2",
    "queryString" : "UPDATE PipeFA\nSET \nFABidID = :BidID,\nFAQuantity = :Quantity,\nFAPercentCompleted = :Percent,\nFARework = :Rework,\nFANotes = :Notes\nWHERE ActivityID= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "7",
      "required" : true
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "3",
      "required" : true
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : ".5",
      "required" : true
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "UpdatePipeFA test",
      "required" : false
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2687",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeFaRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeFAQuantity" : {
    "name" : "UpdatePipeFAQuantity",
    "description" : "Update Quantity and PercentCompleted columns only of a PipeFA activity",
    "version" : "V2",
    "queryString" : "UPDATE PipeFA\nSET \nFAQuantity = :Quantity,\nFAPercentCompleted = :Percent\nWHERE ActivityID= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "4",
      "required" : true
    }, {
      "name" : "Percent",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : ".70",
      "required" : true
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2687",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeFaquantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeMisc" : {
    "name" : "UpdatePipeMisc",
    "description" : "Update Job####.SubsMisc table with data inputs",
    "version" : "V1",
    "queryString" : "UPDATE PipeMisc\nSET\nMiscDrawingNumber = :DrawingNumber,\nMiscLineNumber = :LineNumber,\nMiscSheetNumber = :SheetNumber,\nMiscQuantity = :Quantity,\nMiscRework = :Rework,\nMiscNotes = :Notes\nWHERE ActivityID = :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Quantity",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "10.5",
      "required" : true
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "Mod test",
      "required" : true
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1921",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeMiscRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeMiscQuantity" : {
    "name" : "UpdatePipeMiscQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE PipeMisc\nSET\nMiscQuantity = :Quantity\nWHERE ActivityID = :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "12.77",
      "required" : true
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1921",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeMiscQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeTesting" : {
    "name" : "UpdatePipeTesting",
    "description" : "Update Job####.SubsTesting with input fields",
    "version" : "V1",
    "queryString" : "UPDATE PipeTesting\nSET \nTestingTestPackageNumber = :TestPackageNumber,\nTestingRework = :Rework,\nTestingNotes = :Notes\nWHERE ActivityID= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "TestPackageNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "4",
      "required" : true
    }, {
      "name" : "Rework",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "Update Test Notes",
      "required" : false
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1926",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeTestingRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeWeld" : {
    "name" : "UpdatePipeWeld",
    "description" : "Update Job####.SubsWeld with data inputs",
    "version" : "V1",
    "queryString" : "UPDATE PipeWeld\nSET\nWeldSpool1 = :Spool1,\nWeldSpool2 = :Spool2,\nWeldDrawingNumber = :DrawingNumber,\nWeldLineNumber = :LineNumber,\nWeldSheetNumber = :SheetNumber,\nWeldLineSpec = :LineSpec,\nWeldNumber = :WeldNumber,\nWeldStencil = :Stencil,\nWeldSize = :Size,\nWeldThickness = :Thickness,\nWeldType = :WeldType,\nWeldPosition = :WeldPosition,\nWeldMaterial = :Material,\nWeldProcedure = :Procedure,\nWeldComplete = :Complete,\nWeldShared = :Shared,\nWeldPercentCompleted = :PercentCompleted,\nWeldRework = :Rework,\nWeldNotes = :Notes\nWHERE ActivityID = :FieldActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Spool1",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Spool2",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "DrawingNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "SheetNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "LineSpec",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "WeldNumber",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "Stencil",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Size",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Thickness",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "WeldType",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "WeldPosition",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Material",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Procedure",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Complete",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Shared",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "PercentCompleted",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "0",
      "required" : true
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : false
    }, {
      "name" : "FieldActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "651",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeWeldRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdatePipeWeldQuantity" : {
    "name" : "UpdatePipeWeldQuantity",
    "description" : "No description is provided",
    "version" : "V1",
    "queryString" : "UPDATE PipeWeld\nSET\nWeldPercentCompleted = :PercentCompleted\nWHERE ActivityID = :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "PercentCompleted",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : ".8",
      "required" : true
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "651",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdatePipeWeldQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSASBidID" : {
    "name" : "UpdateSASBidID",
    "description" : "Update the SAS BidIDAssigned column as well as set status and LastModified.  (this is used for the Assign button)",
    "version" : "V2",
    "queryString" : "UPDATE SubmissionActivityStatus sas\nSET \nsas.fk_ActivityStatus = :ActivityStatusID,\nsas.RejectID = :RejectID,\nsas.fk_LastModifiedBy = :UserID,\nsas.fk_BidIDAssigned = :BidID \nWHERE sas.ActivityID = :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "ActivityStatusID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2",
      "required" : true
    }, {
      "name" : "RejectID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "7",
      "required" : false
    }, {
      "name" : "UserID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "77",
      "required" : false
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2687",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSasbidIdRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSASStatus" : {
    "name" : "UpdateSASStatus",
    "description" : "Update the SAS ActivityStatus and LastModifiedBy columns for existing entries.",
    "version" : "V2",
    "queryString" : "UPDATE SubmissionActivityStatus sas\nSET \nsas.fk_ActivityStatus = :ActivityStatusID,\nsas.fk_LastModifiedBy = :UserID\nWHERE sas.ActivityID = :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "ActivityStatusID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "UserID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2687",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSasstatusRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingCivilPunch" : {
    "name" : "UpdateSettingCivilPunch",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='CivilSellPunchHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".05",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingCivilPunchRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingCivilWork" : {
    "name" : "UpdateSettingCivilWork",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='CivilWorkHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".95",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingCivilWorkRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeCTOPercent" : {
    "name" : "UpdateSettingPipeCTOPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='PipeCTOHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : ".35",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeCtopercentRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeHydroPercent" : {
    "name" : "UpdateSettingPipeHydroPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='PipeHydroHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : ".3",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeHydroPercentRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeMechPercent" : {
    "name" : "UpdateSettingPipeMechPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='PipeMechHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : ".9",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeMechPercentRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeRFTPercent" : {
    "name" : "UpdateSettingPipeRFTPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='PipeRFTHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : ".35",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeRftpercentRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingPipeTestingPercent" : {
    "name" : "UpdateSettingPipeTestingPercent",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='PipeTestingHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : ".1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingPipeTestingPercentRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelBoltout" : {
    "name" : "UpdateSettingSteelBoltout",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelBoltoutHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".15",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelBoltoutRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelErect" : {
    "name" : "UpdateSettingSteelErect",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelErectHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".35",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelErectRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelImp" : {
    "name" : "UpdateSettingSteelImp",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelImpHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".35",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelImpRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelSell" : {
    "name" : "UpdateSettingSteelSell",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelSellHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".1",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelSellRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSettingSteelShake" : {
    "name" : "UpdateSettingSteelShake",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE SETTINGS\nSET `Value1`= :Value1 \nWHERE `Label`='SteelShakeHoursPercent'",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Value1",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : null,
      "testValue" : ".05",
      "required" : false
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSettingSteelShakeRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "PRIMITIVE",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelDemo" : {
    "name" : "UpdateSteelDemo",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelDemo` \nSET \n`DemoBidID`= :BidID, \n`DemoPercentCompleted`= :Percentcompleted, \n`DemoNotes`= :Notes\nWHERE `ActivityID`= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2",
      "required" : true
    }, {
      "name" : "Percentcompleted",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : ".8",
      "required" : true
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "Query update Test",
      "required" : false
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "0",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelDemoRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelDemoQuantity" : {
    "name" : "UpdateSteelDemoQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelDemo` \nSET \n`DemoPercentCompleted`= :PercentCompleted\nWHERE `ActivityID`= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "PercentCompleted",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : ".9",
      "required" : true
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "0",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelDemoQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelFA" : {
    "name" : "UpdateSteelFA",
    "description" : "Update Steel FA record without timeinform/rev/timestamp",
    "version" : "V2",
    "queryString" : "UPDATE `SteelFA` \nSET \n`FASortGroup1`= :FASortGroup1, \n`FAPieceNumber`= :Piece, \n`FAQuantity`= :Quantity,\n`FAPercentCompleted`= :PercentCompleted,\n`FARework`= :Rework, \n`FANotes`= :Notes , \n`ActivityType`= :ActivityType \nWHERE `ActivityID`= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "FASortGroup1",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2",
      "required" : true
    }, {
      "name" : "Piece",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2b",
      "required" : true
    }, {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "3",
      "required" : true
    }, {
      "name" : "PercentCompleted",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1.00",
      "required" : true
    }, {
      "name" : "Rework",
      "type" : "short",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "Update Query test",
      "required" : true
    }, {
      "name" : "ActivityType",
      "type" : "short",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "61",
      "required" : true
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2626",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelFaRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelFAQuantity" : {
    "name" : "UpdateSteelFAQuantity",
    "description" : "Update Steel FA quantity/percent",
    "version" : "V2",
    "queryString" : "UPDATE `SteelFA` \nSET \n`FAQuantity`= :Quantity,\n`FAPercentCompleted`= :PercentCompleted\nWHERE `ActivityID`= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "Quantity",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    }, {
      "name" : "PercentCompleted",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : ".5",
      "required" : true
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2626",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelFaquantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelMisc" : {
    "name" : "UpdateSteelMisc",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelMisc` \nSET \n`MiscBidID`= :BidID,\n`MiscPercentCompleted`= :PercentCompleted, \n`MiscRework`= :Rework, \n`MiscNotes`= :Notes \nWHERE `ActivityID`= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "BidID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2",
      "required" : true
    }, {
      "name" : "PercentCompleted",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : ".75",
      "required" : true
    }, {
      "name" : "Rework",
      "type" : "byte",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "0",
      "required" : true
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelMiscRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelMiscQuantity" : {
    "name" : "UpdateSteelMiscQuantity",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelMisc` \nSET \n`MiscPercentCompleted`= :PercentCompleted\nWHERE `ActivityID`= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "PercentCompleted",
      "type" : "big_decimal",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : ".9",
      "required" : true
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "1",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelMiscQuantityRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  },
  "UpdateSteelSellPackage" : {
    "name" : "UpdateSteelSellPackage",
    "description" : "name",
    "version" : "V1",
    "queryString" : "UPDATE `SteelSellPackage` \nSET \n`SellTestPackageNumber`= :TestPackage,\n`SellNotes`= :Notes \nWHERE `ActivityID`= :ActivityID",
    "countQueryString" : null,
    "nativeSql" : true,
    "fetchCount" : false,
    "type" : "UPDATE",
    "parameters" : [ {
      "name" : "TestPackage",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "7",
      "required" : true
    }, {
      "name" : "Notes",
      "type" : "string",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "Query Test",
      "required" : false
    }, {
      "name" : "ActivityID",
      "type" : "integer",
      "list" : false,
      "variableType" : "PROMPT",
      "variableName" : "",
      "testValue" : "2358",
      "required" : true
    } ],
    "request" : {
      "wrapped" : true,
      "typeRef" : "com.psabackoffice.job1111.models.query.UpdateSteelSellPackageRequest",
      "method" : "PUT"
    },
    "identifiers" : [ ],
    "response" : {
      "typeRef" : "java.lang.Integer",
      "returns" : "ENTITY",
      "responseType" : "SINGLE"
    }
  }
}