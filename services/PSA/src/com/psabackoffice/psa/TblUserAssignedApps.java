/*Copyright (c) 2016-2017 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.psa;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * TblUserAssignedApps generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`tblUserAssignedApps`")
public class TblUserAssignedApps implements Serializable {

    private Integer id;
    private Integer userId;
    private Integer mobileAppGroupId;
    private RefMobileApps refMobileApps;
    private TblUserPsa tblUserPsa;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`UserID`", nullable = true, scale = 0, precision = 10)
    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    @Column(name = "`MobileAppGroupID`", nullable = true, scale = 0, precision = 10)
    public Integer getMobileAppGroupId() {
        return this.mobileAppGroupId;
    }

    public void setMobileAppGroupId(Integer mobileAppGroupId) {
        this.mobileAppGroupId = mobileAppGroupId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`MobileAppGroupID`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public RefMobileApps getRefMobileApps() {
        return this.refMobileApps;
    }

    public void setRefMobileApps(RefMobileApps refMobileApps) {
        if(refMobileApps != null) {
            this.mobileAppGroupId = refMobileApps.getId();
        }

        this.refMobileApps = refMobileApps;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`UserID`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public TblUserPsa getTblUserPsa() {
        return this.tblUserPsa;
    }

    public void setTblUserPsa(TblUserPsa tblUserPsa) {
        if(tblUserPsa != null) {
            this.userId = tblUserPsa.getId();
        }

        this.tblUserPsa = tblUserPsa;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TblUserAssignedApps)) return false;
        final TblUserAssignedApps tblUserAssignedApps = (TblUserAssignedApps) o;
        return Objects.equals(getId(), tblUserAssignedApps.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

