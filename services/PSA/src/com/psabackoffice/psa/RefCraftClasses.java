/*Copyright (c) 2016-2018 performance-contractors.com All Rights Reserved.
 This software is the confidential and proprietary information of performance-contractors.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with performance-contractors.com*/
package com.psabackoffice.psa;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.PostPersist;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * RefCraftClasses generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`REF_CraftClasses`")
public class RefCraftClasses implements Serializable {

    private Integer id;
    private String className;
    private List<TblUserPsa> tblUserPsas;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`ClassName`", nullable = true, length = 45)
    public String getClassName() {
        return this.className;
    }

    public void setClassName(String className) {
        this.className = className;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "refCraftClasses")
    @Cascade({CascadeType.SAVE_UPDATE})
    public List<TblUserPsa> getTblUserPsas() {
        return this.tblUserPsas;
    }

    public void setTblUserPsas(List<TblUserPsa> tblUserPsas) {
        this.tblUserPsas = tblUserPsas;
    }

    @PostPersist
    public void onPostPersist() {
        if(tblUserPsas != null) {
            tblUserPsas.forEach(tblUserPsa -> tblUserPsa.setRefCraftClasses(this));
        }
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof RefCraftClasses)) return false;
        final RefCraftClasses refCraftClasses = (RefCraftClasses) o;
        return Objects.equals(getId(), refCraftClasses.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

